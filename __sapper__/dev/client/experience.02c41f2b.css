section.titles.svelte-dybx98{margin-bottom:20rem}@media screen and (min-width: 40em){section.titles.svelte-dybx98{margin-bottom:60rem}}h1.svelte-dybx98{color:#3B3B3B;font-weight:800;font-size:23px}h2.svelte-dybx98{color:#3B3B3B;font-weight:800;font-size:18px;margin-bottom:5px;margin-top:-3px;opacity:.85}h3.svelte-dybx98{display:flex;align-items:center;font-size:14px;font-weight:400;opacity:.8;margin-bottom:15px}h3.svelte-dybx98::before{content:'';display:block;width:30px;border-bottom:3px solid black;margin-right:10px;opacity:.8}
ul.svelte-hpwim1{margin-left:10rem;font-size:12rem}li.svelte-hpwim1{display:flex;align-items:center;margin:5rem 0;font-size:14rem}li.svelte-hpwim1::before{content:'';display:inline-block;width:5px;height:5px;border-radius:100%;background:gray;margin-right:15rem}h3.svelte-hpwim1{font-size:16rem;text-transform:uppercase;font-weight:500;margin-bottom:8rem}.design-section.svelte-hpwim1 h3.svelte-hpwim1{margin-top:12rem}
a.svelte-1iodl2i{display:block;font-size:14rem;margin:3rem 0;color:#58595b;text-transform:lowercase}
@media screen and (min-width: 40em){aside.svelte-prlhqw{padding-top:165px}}
div.job-listing.svelte-zu944x{margin-bottom:20rem}li.svelte-zu944x{margin:5rem 0}li.svelte-zu944x::before{content:'';position:absolute;display:inline-block;width:3px;height:3px;border-radius:100%;background:gray;top:7px;left:-10px}li.detail.svelte-zu944x{position:relative;margin-left:15rem}.detail-title.svelte-zu944x{margin-bottom:0px}
.project-listing.svelte-yt68ek{margin-bottom:20rem}.detail-title.svelte-yt68ek{margin:0}.detail-web-links.svelte-yt68ek{margin:3rem 0}@media screen and (min-width: 40em){.projects-container.svelte-yt68ek{display:flex;flex-wrap:wrap}.project-listing.svelte-yt68ek{width:50%;padding-right:10rem}}
.detail-title.svelte-i9dlu3{margin-bottom:3px}
.experience .headline{font-size:22px;text-transform:uppercase;display:block;margin-bottom:12px;font-weight:600;width:fit-content}.experience .headline::after{content:'';margin-top:1px;display:block;width:calc(100% + 15px);height:1px;border-bottom:5px solid lightgray}.experience .headline.alt::after{width:150px}.experience .detail-web-links{text-transform:lowercase;font-size:12rem;margin-top:3px;margin-bottom:5px;margin-left:5px;width:fit-content;color:#989898;font-weight:300;font-style:italic}.experience .detail-title{font-size:14rem;font-weight:600}.experience .detail-preface{color:#818181;margin-bottom:2px;font-size:14rem;line-height:21px}.experience section{margin-bottom:40rem}.experience p,.experience li{font-weight:300;font-size:13rem;color:#58595b}@media screen and (min-width: 64em){.experience p,.experience li{font-size:18rem;line-height:21px}}.container.svelte-vh6r7f{position:relative;margin-top:90px}.experience.svelte-vh6r7f{display:flex;flex-direction:column-reverse}@media screen and (min-width: 40em){.experience.svelte-vh6r7f{padding-top:50px;flex-direction:row}}.left.svelte-vh6r7f{width:100%}@media screen and (min-width: 40em){.left.svelte-vh6r7f{width:60%}}.right.svelte-vh6r7f{width:100%;background:white}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */