section.titles.svelte-15kvb9w{margin:0}h1.svelte-15kvb9w{color:#3B3B3B;font-weight:800;font-size:23px}h2.svelte-15kvb9w{color:#3B3B3B;font-weight:800;font-size:18px;margin-bottom:5px;margin-top:-3px;opacity:.85}h3.svelte-15kvb9w{display:flex;align-items:center;font-size:14px;font-weight:400;opacity:.8;margin-bottom:15px}h3.svelte-15kvb9w::before{content:'';display:block;width:30px;border-bottom:3px solid black;margin-right:10px;opacity:.8}@media screen and (min-width: 40em){h1.svelte-15kvb9w{font-size:28px}h2.svelte-15kvb9w{font-size:22px;margin-bottom:7px}h3.svelte-15kvb9w{margin-bottom:0}}@media screen and (min-width: 64em){h1.svelte-15kvb9w{font-size:38px}h2.svelte-15kvb9w{font-size:28px;margin-bottom:9px;margin-top:-5px}h3.svelte-15kvb9w{font-size:18px}}@media screen and (min-width: 1366px){h1.svelte-15kvb9w{font-size:45px}h2.svelte-15kvb9w{font-size:38px}h3.svelte-15kvb9w{font-size:23px}}
ul.svelte-13dyylk{margin-left:10rem;font-size:12rem}li.svelte-13dyylk{display:flex;align-items:center;margin:5rem 0}li.svelte-13dyylk::before{content:'';display:inline-block;width:5px;height:5px;border-radius:100%;background:gray;margin-right:15rem}h3.svelte-13dyylk{font-size:16rem;text-transform:uppercase;font-weight:500}
div.job-listing.svelte-zu944x{margin-bottom:20rem}li.svelte-zu944x{margin:5rem 0}li.svelte-zu944x::before{content:'';position:absolute;display:inline-block;width:3px;height:3px;border-radius:100%;background:gray;top:7px;left:-10px}li.detail.svelte-zu944x{position:relative;margin-left:15rem}.detail-title.svelte-zu944x{margin-bottom:0px}
.project-listing.svelte-j5n2o9{margin-bottom:20rem}.detail-title.svelte-j5n2o9{margin:0}.detail-web-links.svelte-j5n2o9{margin:3rem 0}
.detail-title.svelte-i9dlu3{margin-bottom:3px}
.experience .headline{font-size:22px;text-transform:uppercase;display:block;margin-bottom:12px;font-weight:600}.experience .headline::after{content:'';display:block;width:200px;height:1px;border-bottom:4px solid lightgray}.experience .detail-web-links{text-transform:lowercase;font-size:12rem;margin-top:3px;margin-bottom:5px;margin-left:5px;width:fit-content;color:#989898;font-weight:300;font-style:italic}.experience .detail-title{font-size:14rem;font-weight:600}.experience .detail-preface{color:#818181;margin-bottom:2px;font-size:14rem;line-height:21px}.experience section{margin-bottom:40rem}.experience p,.experience li{font-weight:300;font-size:13rem;color:#58595b}@media screen and (min-width: 64em){.experience p,.experience li{font-size:18rem;line-height:21px}}.container.svelte-1m7vskz{position:relative;margin-top:90px}.experience.svelte-1m7vskz{display:flex;flex-direction:column-reverse}.left.svelte-1m7vskz{width:100%}.right.svelte-1m7vskz{width:100%;background:white}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */