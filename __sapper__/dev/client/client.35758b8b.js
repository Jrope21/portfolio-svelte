import { s as safe_not_equal, n as noop, S as SvelteComponentDev, i as init, e as element, a as space, t as text, c as claim_element, b as children, d as detach$1, f as claim_text, g as attr, h as add_location, l as listen, j as insert, k as append, m as bubble, o as binding_callbacks, p as create_slot, q as get_slot_changes, r as get_slot_context, u as transition_in, v as add_render_callback, w as create_in_transition, x as transition_out, y as create_out_transition, z as mount_component, A as destroy_component, B as empty, C as group_outros, D as check_outros, E as globals, F as prevent_default, G as null_to_empty, H as run_all, I as set_data, J as assign, K as get_spread_update, L as setContext } from './index.0199b3b0.js';
import { f as fly, a as fade } from './index.62b470cf.js';
import { T as TextAnimation } from './TextAnimation.0dd8326f.js';

const subscriber_queue = [];
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */
function writable(value, start = noop) {
    let stop;
    const subscribers = [];
    function set(new_value) {
        if (safe_not_equal(value, new_value)) {
            value = new_value;
            if (stop) { // store is ready
                const run_queue = !subscriber_queue.length;
                for (let i = 0; i < subscribers.length; i += 1) {
                    const s = subscribers[i];
                    s[1]();
                    subscriber_queue.push(s, value);
                }
                if (run_queue) {
                    for (let i = 0; i < subscriber_queue.length; i += 2) {
                        subscriber_queue[i][0](subscriber_queue[i + 1]);
                    }
                    subscriber_queue.length = 0;
                }
            }
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = noop) {
        const subscriber = [run, invalidate];
        subscribers.push(subscriber);
        if (subscribers.length === 1) {
            stop = start(set) || noop;
        }
        run(value);
        return () => {
            const index = subscribers.indexOf(subscriber);
            if (index !== -1) {
                subscribers.splice(index, 1);
            }
            if (subscribers.length === 0) {
                stop();
                stop = null;
            }
        };
    }
    return { set, update, subscribe };
}

const CONTEXT_KEY = {};

const preload = () => ({});

/* src/components/navigation/Hamburger.svelte generated by Svelte v3.9.1 */

const file = "src/components/navigation/Hamburger.svelte";

function create_fragment(ctx) {
	var input, t0, div, t1, label, span0, t2, t3, span1, dispose;

	return {
		c: function create() {
			input = element("input");
			t0 = space();
			div = element("div");
			t1 = space();
			label = element("label");
			span0 = element("span");
			t2 = text("Navigation");
			t3 = space();
			span1 = element("span");
			this.h();
		},

		l: function claim(nodes) {
			input = claim_element(nodes, "INPUT", { id: true, type: true, class: true }, false);
			var input_nodes = children(input);

			input_nodes.forEach(detach$1);
			t0 = claim_text(nodes, "\n");

			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			div_nodes.forEach(detach$1);
			t1 = claim_text(nodes, "\n");

			label = claim_element(nodes, "LABEL", { id: true, for: true, class: true }, false);
			var label_nodes = children(label);

			span0 = claim_element(label_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			t2 = claim_text(span0_nodes, "Navigation");
			span0_nodes.forEach(detach$1);
			t3 = claim_text(label_nodes, "\n    ");

			span1 = claim_element(label_nodes, "SPAN", { class: true, title: true }, false);
			var span1_nodes = children(span1);

			span1_nodes.forEach(detach$1);
			label_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(input, "id", "toggle");
			attr(input, "type", "checkbox");
			attr(input, "class", "hide subnav-toggle hide-for-xlg svelte-1l6vpfi");
			add_location(input, file, 102, 0, 1706);
			attr(div, "class", "background svelte-1l6vpfi");
			add_location(div, file, 103, 0, 1782);
			attr(span0, "class", "show-for-sr svelte-1l6vpfi");
			add_location(span0, file, 105, 4, 1905);
			attr(span1, "class", "hamburger svelte-1l6vpfi");
			attr(span1, "title", "Navigation");
			add_location(span1, file, 106, 4, 1953);
			attr(label, "id", "nav-label");
			attr(label, "for", "toggle");
			attr(label, "class", "hide-for-xlg svelte-1l6vpfi");
			add_location(label, file, 104, 0, 1822);
			dispose = listen(div, "click", ctx.click_handler);
		},

		m: function mount(target, anchor) {
			insert(target, input, anchor);
			insert(target, t0, anchor);
			insert(target, div, anchor);
			insert(target, t1, anchor);
			insert(target, label, anchor);
			append(label, span0);
			append(span0, t2);
			append(label, t3);
			append(label, span1);
			ctx.label_binding(label);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(input);
				detach$1(t0);
				detach$1(div);
				detach$1(t1);
				detach$1(label);
			}

			ctx.label_binding(null);
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { toggle, hamburger } = $$props;

	const writable_props = ['toggle', 'hamburger'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Hamburger> was created with unknown prop '${key}'`);
	});

	function click_handler(event) {
		bubble($$self, event);
	}

	function label_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('hamburger', hamburger = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('toggle' in $$props) $$invalidate('toggle', toggle = $$props.toggle);
		if ('hamburger' in $$props) $$invalidate('hamburger', hamburger = $$props.hamburger);
	};

	return {
		toggle,
		hamburger,
		click_handler,
		label_binding
	};
}

class Hamburger extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["toggle", "hamburger"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.toggle === undefined && !('toggle' in props)) {
			console.warn("<Hamburger> was created without expected prop 'toggle'");
		}
		if (ctx.hamburger === undefined && !('hamburger' in props)) {
			console.warn("<Hamburger> was created without expected prop 'hamburger'");
		}
	}

	get toggle() {
		throw new Error("<Hamburger>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set toggle(value) {
		throw new Error("<Hamburger>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get hamburger() {
		throw new Error("<Hamburger>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set hamburger(value) {
		throw new Error("<Hamburger>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/modals/ModalTemplate.svelte generated by Svelte v3.9.1 */

const file$1 = "src/components/modals/ModalTemplate.svelte";

const get_header_slot_changes = () => ({});
const get_header_slot_context = () => ({});

function create_fragment$1(ctx) {
	var div2, div0, t0, div1, t1, div1_intro, div1_outro, div2_class_value, div2_intro, div2_outro, current, dispose;

	const header_slot_template = ctx.$$slots.header;
	const header_slot = create_slot(header_slot_template, ctx, get_header_slot_context);

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	return {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");

			if (header_slot) header_slot.c();
			t1 = space();

			if (default_slot) default_slot.c();
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach$1);
			t0 = claim_text(div2_nodes, "\n\t");

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			if (header_slot) header_slot.l(div1_nodes);
			t1 = claim_text(div1_nodes, "\n\t\t");

			if (default_slot) default_slot.l(div1_nodes);
			div1_nodes.forEach(detach$1);
			div2_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(div0, "class", "modal-background svelte-glpclt");
			add_location(div0, file$1, 68, 4, 1112);

			attr(div1, "class", "modal svelte-glpclt");
			add_location(div1, file$1, 69, 1, 1159);
			attr(div2, "class", div2_class_value = "center-all modal-container " + (ctx.showModal ? 'show-modal' : '') + " svelte-glpclt");
			add_location(div2, file$1, 67, 0, 1017);
			dispose = listen(div0, "click", ctx.click_handler);
		},

		m: function mount(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t0);
			append(div2, div1);

			if (header_slot) {
				header_slot.m(div1, null);
			}

			append(div1, t1);

			if (default_slot) {
				default_slot.m(div1, null);
			}

			current = true;
		},

		p: function update(changed, ctx) {
			if (header_slot && header_slot.p && changed.$$scope) {
				header_slot.p(
					get_slot_changes(header_slot_template, ctx, changed, get_header_slot_changes),
					get_slot_context(header_slot_template, ctx, get_header_slot_context)
				);
			}

			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}

			if ((!current || changed.showModal) && div2_class_value !== (div2_class_value = "center-all modal-container " + (ctx.showModal ? 'show-modal' : '') + " svelte-glpclt")) {
				attr(div2, "class", div2_class_value);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(header_slot, local);
			transition_in(default_slot, local);

			add_render_callback(() => {
				if (div1_outro) div1_outro.end(1);
				if (!div1_intro) div1_intro = create_in_transition(div1, fly, { y: -20, duration: 450, delay: 200, });
				div1_intro.start();
			});

			add_render_callback(() => {
				if (div2_outro) div2_outro.end(1);
				if (!div2_intro) div2_intro = create_in_transition(div2, fade, {});
				div2_intro.start();
			});

			current = true;
		},

		o: function outro(local) {
			transition_out(header_slot, local);
			transition_out(default_slot, local);
			if (div1_intro) div1_intro.invalidate();

			div1_outro = create_out_transition(div1, fly, { y: -20, duration: 450 });

			if (div2_intro) div2_intro.invalidate();

			div2_outro = create_out_transition(div2, fade, {});

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(div2);
			}

			if (header_slot) header_slot.d(detaching);

			if (default_slot) default_slot.d(detaching);

			if (detaching) {
				if (div1_outro) div1_outro.end();
				if (div2_outro) div2_outro.end();
			}

			dispose();
		}
	};
}

function instance$1($$self, $$props, $$invalidate) {
	

    let { showModal } = $$props;

	const writable_props = ['showModal'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<ModalTemplate> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$set = $$props => {
		if ('showModal' in $$props) $$invalidate('showModal', showModal = $$props.showModal);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	return {
		showModal,
		click_handler,
		$$slots,
		$$scope
	};
}

class ModalTemplate extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, ["showModal"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.showModal === undefined && !('showModal' in props)) {
			console.warn("<ModalTemplate> was created without expected prop 'showModal'");
		}
	}

	get showModal() {
		throw new Error("<ModalTemplate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showModal(value) {
		throw new Error("<ModalTemplate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/loaders/BoxLoader.svelte generated by Svelte v3.9.1 */

const file$2 = "src/components/loaders/BoxLoader.svelte";

function create_fragment$2(ctx) {
	var div2, div0, t, div1, div2_intro, div2_outro, current;

	return {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t = space();
			div1 = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { id: true, class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { id: true, class: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach$1);
			t = claim_text(div2_nodes, "\n  ");

			div1 = claim_element(div2_nodes, "DIV", { id: true, class: true }, false);
			var div1_nodes = children(div1);

			div1_nodes.forEach(detach$1);
			div2_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(div0, "id", "box");
			attr(div0, "class", "svelte-12rrru0");
			add_location(div0, file$2, 86, 2, 1557);
			attr(div1, "id", "hill");
			attr(div1, "class", "svelte-12rrru0");
			add_location(div1, file$2, 87, 2, 1580);
			attr(div2, "id", "loader");
			attr(div2, "class", "svelte-12rrru0");
			add_location(div2, file$2, 85, 0, 1520);
		},

		m: function mount(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t);
			append(div2, div1);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			add_render_callback(() => {
				if (div2_outro) div2_outro.end(1);
				if (!div2_intro) div2_intro = create_in_transition(div2, fade, {});
				div2_intro.start();
			});

			current = true;
		},

		o: function outro(local) {
			if (div2_intro) div2_intro.invalidate();

			div2_outro = create_out_transition(div2, fade, {});

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(div2);
				if (div2_outro) div2_outro.end();
			}
		}
	};
}

class BoxLoader extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$2, safe_not_equal, []);
	}
}

/* src/components/modals/ContactModal.svelte generated by Svelte v3.9.1 */
const { Object: Object_1 } = globals;

const file$3 = "src/components/modals/ContactModal.svelte";

// (252:0) {#if showModal && hideModal === false}
function create_if_block(ctx) {
	var current;

	var modaltemplate = new ModalTemplate({
		props: {
		showModal: ctx.showModal,
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});
	modaltemplate.$on("click", ctx.click_handler);

	return {
		c: function create() {
			modaltemplate.$$.fragment.c();
		},

		l: function claim(nodes) {
			modaltemplate.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(modaltemplate, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var modaltemplate_changes = {};
			if (changed.showModal) modaltemplate_changes.showModal = ctx.showModal;
			if (changed.$$scope || changed.formState || changed.fieldInputs) modaltemplate_changes.$$scope = { changed, ctx };
			modaltemplate.$set(modaltemplate_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(modaltemplate.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(modaltemplate.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(modaltemplate, detaching);
		}
	};
}

// (281:16) {#if formState.submittingForm}
function create_if_block_3(ctx) {
	var current;

	var boxloader = new BoxLoader({ $$inline: true });

	return {
		c: function create() {
			boxloader.$$.fragment.c();
		},

		l: function claim(nodes) {
			boxloader.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(boxloader, target, anchor);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			transition_in(boxloader.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(boxloader.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(boxloader, detaching);
		}
	};
}

// (284:16) {#if formState.formSuccess}
function create_if_block_2(ctx) {
	var h2, t, h2_intro, h2_outro, current;

	return {
		c: function create() {
			h2 = element("h2");
			t = text("SUCCESS");
			this.h();
		},

		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t = claim_text(h2_nodes, "SUCCESS");
			h2_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(h2, "class", "success-message svelte-7h4bgy");
			add_location(h2, file$3, 284, 20, 7547);
		},

		m: function mount(target, anchor) {
			insert(target, h2, anchor);
			append(h2, t);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			add_render_callback(() => {
				if (h2_outro) h2_outro.end(1);
				if (!h2_intro) h2_intro = create_in_transition(h2, fly, { y: 20, duration: 500, delay: 200, });
				h2_intro.start();
			});

			current = true;
		},

		o: function outro(local) {
			if (h2_intro) h2_intro.invalidate();

			h2_outro = create_out_transition(h2, fly, { y: -20, duration: 500, delay: 0, });

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(h2);
				if (h2_outro) h2_outro.end();
			}
		}
	};
}

// (292:16) {#if formState.formError}
function create_if_block_1(ctx) {
	var h2, t, h2_intro, h2_outro, current;

	return {
		c: function create() {
			h2 = element("h2");
			t = text("ERROR");
			this.h();
		},

		l: function claim(nodes) {
			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t = claim_text(h2_nodes, "ERROR");
			h2_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(h2, "class", "success-message svelte-7h4bgy");
			add_location(h2, file$3, 292, 20, 7886);
		},

		m: function mount(target, anchor) {
			insert(target, h2, anchor);
			append(h2, t);
			current = true;
		},

		i: function intro(local) {
			if (current) return;
			add_render_callback(() => {
				if (h2_outro) h2_outro.end(1);
				if (!h2_intro) h2_intro = create_in_transition(h2, fly, { y: 20, duration: 500, delay: 200, });
				h2_intro.start();
			});

			current = true;
		},

		o: function outro(local) {
			if (h2_intro) h2_intro.invalidate();

			h2_outro = create_out_transition(h2, fly, { y: -20, duration: 500, delay: 0, });

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(h2);
				if (h2_outro) h2_outro.end();
			}
		}
	};
}

// (253:1) <ModalTemplate showModal={showModal} on:click>
function create_default_slot(ctx) {
	var div2, div1, div0, h2, t0, t1, p, t2, div0_class_value, t3, form, label0, span0, t4, t5, input0, t6, label1, span1, t7, t8, input1, t9, label2, span2, t10, t11, textarea, t12, input2, form_class_value, t13, t14, t15, current, dispose;

	var if_block0 = (ctx.formState.submittingForm) && create_if_block_3();

	var if_block1 = (ctx.formState.formSuccess) && create_if_block_2();

	var if_block2 = (ctx.formState.formError) && create_if_block_1();

	return {
		c: function create() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("Get In Touch");
			t1 = space();
			p = element("p");
			t2 = text("Hi There! I’m Josh, \n                            I bring projects to life by innovating across every aspect of the customer journey. \n                            Send me a message if you are looking to hire a developer, collaborate on a project, or have a potential business opportunity.");
			t3 = space();
			form = element("form");
			label0 = element("label");
			span0 = element("span");
			t4 = text("Name");
			t5 = space();
			input0 = element("input");
			t6 = space();
			label1 = element("label");
			span1 = element("span");
			t7 = text("Email");
			t8 = space();
			input1 = element("input");
			t9 = space();
			label2 = element("label");
			span2 = element("span");
			t10 = text("Message");
			t11 = space();
			textarea = element("textarea");
			t12 = space();
			input2 = element("input");
			t13 = space();
			if (if_block0) if_block0.c();
			t14 = space();
			if (if_block1) if_block1.c();
			t15 = space();
			if (if_block2) if_block2.c();
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			h2 = claim_element(div0_nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t0 = claim_text(h2_nodes, "Get In Touch");
			h2_nodes.forEach(detach$1);
			t1 = claim_text(div0_nodes, "\n                        ");

			p = claim_element(div0_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "Hi There! I’m Josh, \n                            I bring projects to life by innovating across every aspect of the customer journey. \n                            Send me a message if you are looking to hire a developer, collaborate on a project, or have a potential business opportunity.");
			p_nodes.forEach(detach$1);
			div0_nodes.forEach(detach$1);
			t3 = claim_text(div1_nodes, "\n                    ");

			form = claim_element(div1_nodes, "FORM", { class: true }, false);
			var form_nodes = children(form);

			label0 = claim_element(form_nodes, "LABEL", { class: true }, false);
			var label0_nodes = children(label0);

			span0 = claim_element(label0_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			t4 = claim_text(span0_nodes, "Name");
			span0_nodes.forEach(detach$1);
			t5 = claim_text(label0_nodes, "\n                            ");

			input0 = claim_element(label0_nodes, "INPUT", { name: true, type: true, class: true }, false);
			var input0_nodes = children(input0);

			input0_nodes.forEach(detach$1);
			label0_nodes.forEach(detach$1);
			t6 = claim_text(form_nodes, "\n                        ");

			label1 = claim_element(form_nodes, "LABEL", { class: true }, false);
			var label1_nodes = children(label1);

			span1 = claim_element(label1_nodes, "SPAN", { class: true }, false);
			var span1_nodes = children(span1);

			t7 = claim_text(span1_nodes, "Email");
			span1_nodes.forEach(detach$1);
			t8 = claim_text(label1_nodes, "\n                            ");

			input1 = claim_element(label1_nodes, "INPUT", { required: true, name: true, type: true, class: true }, false);
			var input1_nodes = children(input1);

			input1_nodes.forEach(detach$1);
			label1_nodes.forEach(detach$1);
			t9 = claim_text(form_nodes, "\n                        ");

			label2 = claim_element(form_nodes, "LABEL", { class: true }, false);
			var label2_nodes = children(label2);

			span2 = claim_element(label2_nodes, "SPAN", { class: true }, false);
			var span2_nodes = children(span2);

			t10 = claim_text(span2_nodes, "Message");
			span2_nodes.forEach(detach$1);
			t11 = claim_text(label2_nodes, "\n                            ");

			textarea = claim_element(label2_nodes, "TEXTAREA", { name: true, rows: true, type: true, class: true }, false);
			var textarea_nodes = children(textarea);

			textarea_nodes.forEach(detach$1);
			label2_nodes.forEach(detach$1);
			t12 = claim_text(form_nodes, "\n                        ");

			input2 = claim_element(form_nodes, "INPUT", { type: true, value: true, class: true }, false);
			var input2_nodes = children(input2);

			input2_nodes.forEach(detach$1);
			form_nodes.forEach(detach$1);
			t13 = claim_text(div1_nodes, "\n\n                ");
			if (if_block0) if_block0.l(div1_nodes);
			t14 = claim_text(div1_nodes, "\n                ");
			if (if_block1) if_block1.l(div1_nodes);
			t15 = claim_text(div1_nodes, "\n                ");
			if (if_block2) if_block2.l(div1_nodes);
			div1_nodes.forEach(detach$1);
			div2_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(h2, "class", "svelte-7h4bgy");
			add_location(h2, file$3, 256, 24, 6039);
			attr(p, "class", "svelte-7h4bgy");
			add_location(p, file$3, 257, 24, 6085);
			attr(div0, "class", div0_class_value = "text-container " + (ctx.formState.hideFields ? 'hide-content' : '') + " " + (ctx.formState.hideFields ? 'hide-content' : '') + " svelte-7h4bgy");
			add_location(div0, file$3, 255, 20, 5896);
			attr(span0, "class", "svelte-7h4bgy");
			add_location(span0, file$3, 268, 32, 6761);
			attr(input0, "name", "name");
			attr(input0, "type", "text");
			attr(input0, "class", "svelte-7h4bgy");
			add_location(input0, file$3, 269, 28, 6807);
			attr(label0, "class", "svelte-7h4bgy");
			add_location(label0, file$3, 268, 24, 6753);
			attr(span1, "class", "svelte-7h4bgy");
			add_location(span1, file$3, 271, 32, 6931);
			input1.required = true;
			attr(input1, "name", "email");
			attr(input1, "type", "email");
			attr(input1, "class", "svelte-7h4bgy");
			add_location(input1, file$3, 272, 28, 6978);
			attr(label1, "class", "svelte-7h4bgy");
			add_location(label1, file$3, 271, 24, 6923);
			attr(span2, "class", "svelte-7h4bgy");
			add_location(span2, file$3, 274, 32, 7113);
			attr(textarea, "name", "message");
			attr(textarea, "rows", "6");
			attr(textarea, "type", "textarea");
			attr(textarea, "class", "svelte-7h4bgy");
			add_location(textarea, file$3, 275, 28, 7162);
			attr(label2, "class", "svelte-7h4bgy");
			add_location(label2, file$3, 274, 24, 7105);
			attr(input2, "type", "submit");
			input2.value = "Send Message";
			attr(input2, "class", "svelte-7h4bgy");
			add_location(input2, file$3, 277, 24, 7308);
			attr(form, "class", form_class_value = "gform " + (ctx.formState.hideFields ? 'hide-content' : '') + "\n                        " + (ctx.formState.formSuccess ? 'hide-content' : '') + " svelte-7h4bgy");
			add_location(form, file$3, 263, 20, 6481);
			attr(div1, "class", "flex-container svelte-7h4bgy");
			add_location(div1, file$3, 254, 12, 5847);
			attr(div2, "class", "form-container svelte-7h4bgy");
			add_location(div2, file$3, 253, 8, 5806);
			dispose = listen(form, "submit", prevent_default(ctx.handleSubmit));
		},

		m: function mount(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			append(div1, div0);
			append(div0, h2);
			append(h2, t0);
			append(div0, t1);
			append(div0, p);
			append(p, t2);
			append(div1, t3);
			append(div1, form);
			append(form, label0);
			append(label0, span0);
			append(span0, t4);
			append(label0, t5);
			append(label0, input0);
			ctx.input0_binding(input0);
			append(form, t6);
			append(form, label1);
			append(label1, span1);
			append(span1, t7);
			append(label1, t8);
			append(label1, input1);
			ctx.input1_binding(input1);
			append(form, t9);
			append(form, label2);
			append(label2, span2);
			append(span2, t10);
			append(label2, t11);
			append(label2, textarea);
			ctx.textarea_binding(textarea);
			append(form, t12);
			append(form, input2);
			append(div1, t13);
			if (if_block0) if_block0.m(div1, null);
			append(div1, t14);
			if (if_block1) if_block1.m(div1, null);
			append(div1, t15);
			if (if_block2) if_block2.m(div1, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.formState) && div0_class_value !== (div0_class_value = "text-container " + (ctx.formState.hideFields ? 'hide-content' : '') + " " + (ctx.formState.hideFields ? 'hide-content' : '') + " svelte-7h4bgy")) {
				attr(div0, "class", div0_class_value);
			}

			if ((!current || changed.formState) && form_class_value !== (form_class_value = "gform " + (ctx.formState.hideFields ? 'hide-content' : '') + "\n                        " + (ctx.formState.formSuccess ? 'hide-content' : '') + " svelte-7h4bgy")) {
				attr(form, "class", form_class_value);
			}

			if (ctx.formState.submittingForm) {
				if (!if_block0) {
					if_block0 = create_if_block_3();
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div1, t14);
				} else {
									transition_in(if_block0, 1);
				}
			} else if (if_block0) {
				group_outros();
				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});
				check_outros();
			}

			if (ctx.formState.formSuccess) {
				if (!if_block1) {
					if_block1 = create_if_block_2();
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div1, t15);
				} else {
									transition_in(if_block1, 1);
				}
			} else if (if_block1) {
				group_outros();
				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});
				check_outros();
			}

			if (ctx.formState.formError) {
				if (!if_block2) {
					if_block2 = create_if_block_1();
					if_block2.c();
					transition_in(if_block2, 1);
					if_block2.m(div1, null);
				} else {
									transition_in(if_block2, 1);
				}
			} else if (if_block2) {
				group_outros();
				transition_out(if_block2, 1, 1, () => {
					if_block2 = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			transition_in(if_block2);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			transition_out(if_block2);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(div2);
			}

			ctx.input0_binding(null);
			ctx.input1_binding(null);
			ctx.textarea_binding(null);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			dispose();
		}
	};
}

function create_fragment$3(ctx) {
	var if_block_anchor, current;

	var if_block = (ctx.showModal && hideModal === false) && create_if_block(ctx);

	return {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (ctx.showModal && hideModal === false) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach$1(if_block_anchor);
			}
		}
	};
}

let hideModal = false;

function buildFormSubmissionTextObj(formEventTarget, formFieldNames){
    let formData = new FormData();
    
     formFieldNames.forEach(fieldName => {
        formData.append(`${fieldName}`, `${formEventTarget[fieldName].value}`);
     });

     return formData
 }

function instance$2($$self, $$props, $$invalidate) {
	

    let { showModal } = $$props;
    let fieldInputs = [];

    let formState = {
        submittingForm: false,
        formSuccess: false,
        formError: false,
        hideFields: false
    };

    function resetForm(wait){
        setTimeout(() => {            
            const stateObj = Object.entries(formState);

            for(const [stateKey, stateValue] of stateObj){
                formState[stateKey] = false; $$invalidate('formState', formState);
            }

            fieldInputs.forEach((input) => {
                input.value = '';
            });
        }, wait);
    }
    
    async function handleSubmit(e){
        formState.submittingForm = true; $$invalidate('formState', formState);
        formState.hideFields = true; $$invalidate('formState', formState);
        formState.formSuccess = false; $$invalidate('formState', formState);
        const formFieldNames = ['name', 'email', 'message']; // TODO - generate field names based on inputs
        const formTextObj = buildFormSubmissionTextObj(e.target, formFieldNames);

        const API_URL = `https://script.google.com/macros/s/AKfycbyfIRXEeqnLPVq4s2hG_b35lmcm2FCn768QWC9Wfg/exec`;
        const settings = { 
            method: 'POST',
            body: formTextObj,
        };

        try {
            const response = await fetch(API_URL, settings);
            const data = await response.json();
            formState.submittingForm = false; $$invalidate('formState', formState);
            formState.formSuccess = true; $$invalidate('formState', formState);

            resetForm(1600);       
        } catch (e) {
            formState.submittingForm = false; $$invalidate('formState', formState);
            formState.formError = true; $$invalidate('formState', formState);

            resetForm(1600);       
        }
    }

	const writable_props = ['showModal'];
	Object_1.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<ContactModal> was created with unknown prop '${key}'`);
	});

	function click_handler(event) {
		bubble($$self, event);
	}

	function input0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			fieldInputs[0] = $$value;
			$$invalidate('fieldInputs', fieldInputs);
		});
	}

	function input1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			fieldInputs[1] = $$value;
			$$invalidate('fieldInputs', fieldInputs);
		});
	}

	function textarea_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			fieldInputs[2] = $$value;
			$$invalidate('fieldInputs', fieldInputs);
		});
	}

	$$self.$set = $$props => {
		if ('showModal' in $$props) $$invalidate('showModal', showModal = $$props.showModal);
	};

	return {
		showModal,
		fieldInputs,
		formState,
		handleSubmit,
		click_handler,
		input0_binding,
		input1_binding,
		textarea_binding
	};
}

class ContactModal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$3, safe_not_equal, ["showModal"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.showModal === undefined && !('showModal' in props)) {
			console.warn("<ContactModal> was created without expected prop 'showModal'");
		}
	}

	get showModal() {
		throw new Error("<ContactModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showModal(value) {
		throw new Error("<ContactModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/navigation/Navigation.svelte generated by Svelte v3.9.1 */
const { window: window_1 } = globals;

const file$4 = "src/components/navigation/Navigation.svelte";

function create_fragment$4(ctx) {
	var scrolling = false, clear_scrolling = () => { scrolling = false; }, scrolling_timeout, header, nav, a0, p, span0, t0, t1, span1, t2, span2, t3, t4, t5, ul, li0, span3, t6, li1, a1, t7, t8, li2, a2, t9, t10, li3, a3, t11, nav_class_value, t12, current, dispose;

	add_render_callback(ctx.onwindowscroll);

	let hamburger_1_props = { toggle: toggle };
	var hamburger_1 = new Hamburger({ props: hamburger_1_props, $$inline: true });

	ctx.hamburger_1_binding(hamburger_1);
	hamburger_1.$on("click", ctx.togglerOff);

	var contactmodal = new ContactModal({
		props: { showModal: ctx.showModal },
		$$inline: true
	});
	contactmodal.$on("click", ctx.click_handler);

	return {
		c: function create() {
			header = element("header");
			nav = element("nav");
			a0 = element("a");
			p = element("p");
			span0 = element("span");
			t0 = text("<h1>");
			t1 = text("Hi There");
			span1 = element("span");
			t2 = text("!");
			span2 = element("span");
			t3 = text("</h1>");
			t4 = space();
			hamburger_1.$$.fragment.c();
			t5 = space();
			ul = element("ul");
			li0 = element("li");
			span3 = element("span");
			t6 = space();
			li1 = element("li");
			a1 = element("a");
			t7 = text("Home");
			t8 = space();
			li2 = element("li");
			a2 = element("a");
			t9 = text("About");
			t10 = space();
			li3 = element("li");
			a3 = element("a");
			t11 = text("Contact");
			t12 = space();
			contactmodal.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", { class: true }, false);
			var header_nodes = children(header);

			nav = claim_element(header_nodes, "NAV", { class: true }, false);
			var nav_nodes = children(nav);

			a0 = claim_element(nav_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			p = claim_element(a0_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			span0 = claim_element(p_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			t0 = claim_text(span0_nodes, "<h1>");
			span0_nodes.forEach(detach$1);
			t1 = claim_text(p_nodes, "Hi There");

			span1 = claim_element(p_nodes, "SPAN", { class: true }, false);
			var span1_nodes = children(span1);

			t2 = claim_text(span1_nodes, "!");
			span1_nodes.forEach(detach$1);

			span2 = claim_element(p_nodes, "SPAN", { class: true }, false);
			var span2_nodes = children(span2);

			t3 = claim_text(span2_nodes, "</h1>");
			span2_nodes.forEach(detach$1);
			p_nodes.forEach(detach$1);
			a0_nodes.forEach(detach$1);
			t4 = claim_text(nav_nodes, "\n        ");
			hamburger_1.$$.fragment.l(nav_nodes);
			t5 = claim_text(nav_nodes, "\n        ");

			ul = claim_element(nav_nodes, "UL", { class: true }, false);
			var ul_nodes = children(ul);

			li0 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li0_nodes = children(li0);

			span3 = claim_element(li0_nodes, "SPAN", { class: true }, false);
			var span3_nodes = children(span3);

			span3_nodes.forEach(detach$1);
			li0_nodes.forEach(detach$1);
			t6 = claim_text(ul_nodes, "\n            ");

			li1 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li1_nodes = children(li1);

			a1 = claim_element(li1_nodes, "A", { class: true, rel: true, href: true }, false);
			var a1_nodes = children(a1);

			t7 = claim_text(a1_nodes, "Home");
			a1_nodes.forEach(detach$1);
			li1_nodes.forEach(detach$1);
			t8 = claim_text(ul_nodes, "\n            ");

			li2 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li2_nodes = children(li2);

			a2 = claim_element(li2_nodes, "A", { rel: true, href: true, class: true }, false);
			var a2_nodes = children(a2);

			t9 = claim_text(a2_nodes, "About");
			a2_nodes.forEach(detach$1);
			li2_nodes.forEach(detach$1);
			t10 = claim_text(ul_nodes, "\n            ");

			li3 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li3_nodes = children(li3);

			a3 = claim_element(li3_nodes, "A", { href: true, class: true }, false);
			var a3_nodes = children(a3);

			t11 = claim_text(a3_nodes, "Contact");
			a3_nodes.forEach(detach$1);
			li3_nodes.forEach(detach$1);
			ul_nodes.forEach(detach$1);
			nav_nodes.forEach(detach$1);
			header_nodes.forEach(detach$1);
			t12 = claim_text(nodes, "\n\n");
			contactmodal.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			attr(span0, "class", "code svelte-caousa");
			add_location(span0, file$4, 223, 16, 3843);
			attr(span1, "class", "logo-hover svelte-caousa");
			add_location(span1, file$4, 223, 60, 3887);
			attr(span2, "class", "code svelte-caousa");
			add_location(span2, file$4, 223, 93, 3920);
			attr(p, "class", "svelte-caousa");
			add_location(p, file$4, 222, 12, 3823);
			attr(a0, "href", "/");
			attr(a0, "class", "logo svelte-caousa");
			add_location(a0, file$4, 221, 8, 3785);
			attr(span3, "class", "close svelte-caousa");
			add_location(span3, file$4, 228, 63, 4165);
			attr(li0, "class", "close-container svelte-caousa");
			add_location(li0, file$4, 228, 12, 4114);
			attr(a1, "class", " svelte-caousa");
			attr(a1, "rel", "prefetch");
			attr(a1, "href", "/");
			add_location(a1, file$4, 229, 16, 4214);
			attr(li1, "class", "svelte-caousa");
			add_location(li1, file$4, 229, 12, 4210);
			attr(a2, "rel", "prefetch");
			attr(a2, "href", "/about");
			attr(a2, "class", "svelte-caousa");
			add_location(a2, file$4, 230, 16, 4300);
			attr(li2, "class", "svelte-caousa");
			add_location(li2, file$4, 230, 12, 4296);
			attr(a3, "href", "javascript:void(0)");
			attr(a3, "class", "svelte-caousa");
			add_location(a3, file$4, 231, 16, 4383);
			attr(li3, "class", "svelte-caousa");
			add_location(li3, file$4, 231, 12, 4379);
			attr(ul, "class", "navigation svelte-caousa");
			add_location(ul, file$4, 227, 8, 4078);
			attr(nav, "class", nav_class_value = "" + null_to_empty((ctx.reduceNavSize ? 'scrolled container' : 'container')) + " svelte-caousa");
			add_location(nav, file$4, 220, 4, 3712);
			attr(header, "class", "svelte-caousa");
			add_location(header, file$4, 219, 0, 3699);

			dispose = [
				listen(window_1, "scroll", () => {
					scrolling = true;
					clearTimeout(scrolling_timeout);
					scrolling_timeout = setTimeout(clear_scrolling, 100);
					ctx.onwindowscroll();
				}),
				listen(li0, "click", ctx.togglerOff),
				listen(a1, "click", ctx.togglerOff),
				listen(a2, "click", ctx.togglerOff),
				listen(a3, "click", ctx.openModal)
			];
		},

		m: function mount(target, anchor) {
			insert(target, header, anchor);
			append(header, nav);
			append(nav, a0);
			append(a0, p);
			append(p, span0);
			append(span0, t0);
			append(p, t1);
			append(p, span1);
			append(span1, t2);
			append(p, span2);
			append(span2, t3);
			append(nav, t4);
			mount_component(hamburger_1, nav, null);
			append(nav, t5);
			append(nav, ul);
			append(ul, li0);
			append(li0, span3);
			append(ul, t6);
			append(ul, li1);
			append(li1, a1);
			append(a1, t7);
			append(ul, t8);
			append(ul, li2);
			append(li2, a2);
			append(a2, t9);
			append(ul, t10);
			append(ul, li3);
			append(li3, a3);
			append(a3, t11);
			insert(target, t12, anchor);
			mount_component(contactmodal, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (changed.windowY && !scrolling) {
				scrolling = true;
				clearTimeout(scrolling_timeout);
				scrollTo(window_1.pageXOffset, ctx.windowY);
				scrolling_timeout = setTimeout(clear_scrolling, 100);
			}

			var hamburger_1_changes = {};
			if (changed.toggle) hamburger_1_changes.toggle = toggle;
			hamburger_1.$set(hamburger_1_changes);

			if ((!current || changed.reduceNavSize) && nav_class_value !== (nav_class_value = "" + null_to_empty((ctx.reduceNavSize ? 'scrolled container' : 'container')) + " svelte-caousa")) {
				attr(nav, "class", nav_class_value);
			}

			var contactmodal_changes = {};
			if (changed.showModal) contactmodal_changes.showModal = ctx.showModal;
			contactmodal.$set(contactmodal_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(hamburger_1.$$.fragment, local);

			transition_in(contactmodal.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(hamburger_1.$$.fragment, local);
			transition_out(contactmodal.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(header);
			}

			ctx.hamburger_1_binding(null);

			destroy_component(hamburger_1);

			if (detaching) {
				detach$1(t12);
			}

			destroy_component(contactmodal, detaching);

			run_all(dispose);
		}
	};
}

let toggle = false;

function instance$3($$self, $$props, $$invalidate) {
	

let showModal;

let windowY;
let hamburger;

let reduceNavSize = false;

function navSize(y){
    if(y > 75){
        $$invalidate('reduceNavSize', reduceNavSize = true);
    } else {
        $$invalidate('reduceNavSize', reduceNavSize = false);
    }
}

function togglerOff(){
    if(window.innerWidth < 820){
        hamburger ? hamburger.$$.ctx.hamburger.click() : null;
    }
}

function openModal(){
    $$invalidate('showModal', showModal = true);
}

	function onwindowscroll() {
		windowY = window_1.pageYOffset; $$invalidate('windowY', windowY);
	}

	function hamburger_1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('hamburger', hamburger = $$value);
		});
	}

	function click_handler() {
		const $$result = showModal = false;
		$$invalidate('showModal', showModal);
		return $$result;
	}

	let headerClass;

	$$self.$$.update = ($$dirty = { windowY: 1 }) => {
		if ($$dirty.windowY) { headerClass = navSize(windowY); }
	};

	return {
		showModal,
		windowY,
		hamburger,
		reduceNavSize,
		togglerOff,
		openModal,
		onwindowscroll,
		hamburger_1_binding,
		click_handler
	};
}

class Navigation extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$4, safe_not_equal, []);
	}
}

/* src/components/helper-components/InlineLink.svelte generated by Svelte v3.9.1 */

const file$5 = "src/components/helper-components/InlineLink.svelte";

function create_fragment$5(ctx) {
	var a, t;

	return {
		c: function create() {
			a = element("a");
			t = text(ctx.text);
			this.h();
		},

		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, target: true, class: true }, false);
			var a_nodes = children(a);

			t = claim_text(a_nodes, ctx.text);
			a_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(a, "href", ctx.url);
			attr(a, "target", ctx.target);
			attr(a, "class", "svelte-1pena59");
			add_location(a, file$5, 16, 0, 182);
		},

		m: function mount(target_1, anchor) {
			insert(target_1, a, anchor);
			append(a, t);
		},

		p: function update(changed, ctx) {
			if (changed.text) {
				set_data(t, ctx.text);
			}

			if (changed.url) {
				attr(a, "href", ctx.url);
			}

			if (changed.target) {
				attr(a, "target", ctx.target);
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(a);
			}
		}
	};
}

function instance$4($$self, $$props, $$invalidate) {
	let { url, target, text } = $$props;

	const writable_props = ['url', 'target', 'text'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<InlineLink> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('url' in $$props) $$invalidate('url', url = $$props.url);
		if ('target' in $$props) $$invalidate('target', target = $$props.target);
		if ('text' in $$props) $$invalidate('text', text = $$props.text);
	};

	return { url, target, text };
}

class InlineLink extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$5, safe_not_equal, ["url", "target", "text"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.url === undefined && !('url' in props)) {
			console.warn("<InlineLink> was created without expected prop 'url'");
		}
		if (ctx.target === undefined && !('target' in props)) {
			console.warn("<InlineLink> was created without expected prop 'target'");
		}
		if (ctx.text === undefined && !('text' in props)) {
			console.warn("<InlineLink> was created without expected prop 'text'");
		}
	}

	get url() {
		throw new Error("<InlineLink>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set url(value) {
		throw new Error("<InlineLink>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get target() {
		throw new Error("<InlineLink>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set target(value) {
		throw new Error("<InlineLink>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get text() {
		throw new Error("<InlineLink>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<InlineLink>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/footer/Footer.svelte generated by Svelte v3.9.1 */

const file$6 = "src/components/footer/Footer.svelte";

function create_fragment$6(ctx) {
	var footer, div4, div0, p0, t0, t1, t2, div3, div1, p1, t3, t4, a0, t5, div2, p2, t6, t7, a1, t8, p3, t9, current;

	var inlinelink0 = new InlineLink({
		props: { url: 'mailto:joshua.micah.roper@gmail.com', text: 'email' },
		$$inline: true
	});

	var inlinelink1 = new InlineLink({
		props: {
		url: 'mailto:joshua.micah.roper@gmail.com',
		text: 'social',
		target: 'blank'
	},
		$$inline: true
	});

	var textanimation0 = new TextAnimation({
		props: { text: `Joshua.micah.roper@gmail.com` },
		$$inline: true
	});

	var textanimation1 = new TextAnimation({
		props: { text: `Download PDF` },
		$$inline: true
	});

	return {
		c: function create() {
			footer = element("footer");
			div4 = element("div");
			div0 = element("div");
			p0 = element("p");
			t0 = text("Feel free to shoot me an ");
			inlinelink0.$$.fragment.c();
			t1 = text(" & connect on ");
			inlinelink1.$$.fragment.c();
			t2 = space();
			div3 = element("div");
			div1 = element("div");
			p1 = element("p");
			t3 = text("Get In Touch!");
			t4 = space();
			a0 = element("a");
			textanimation0.$$.fragment.c();
			t5 = space();
			div2 = element("div");
			p2 = element("p");
			t6 = text("View Resume");
			t7 = space();
			a1 = element("a");
			textanimation1.$$.fragment.c();
			t8 = space();
			p3 = element("p");
			t9 = text("@ 2019 Joshua Roper Development");
			this.h();
		},

		l: function claim(nodes) {
			footer = claim_element(nodes, "FOOTER", { class: true }, false);
			var footer_nodes = children(footer);

			div4 = claim_element(footer_nodes, "DIV", { class: true }, false);
			var div4_nodes = children(div4);

			div0 = claim_element(div4_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			p0 = claim_element(div0_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t0 = claim_text(p0_nodes, "Feel free to shoot me an ");
			inlinelink0.$$.fragment.l(p0_nodes);
			t1 = claim_text(p0_nodes, " & connect on ");
			inlinelink1.$$.fragment.l(p0_nodes);
			p0_nodes.forEach(detach$1);
			div0_nodes.forEach(detach$1);
			t2 = claim_text(div4_nodes, "\n        ");

			div3 = claim_element(div4_nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			div1 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			p1 = claim_element(div1_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t3 = claim_text(p1_nodes, "Get In Touch!");
			p1_nodes.forEach(detach$1);
			t4 = claim_text(div1_nodes, "\n                ");

			a0 = claim_element(div1_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			textanimation0.$$.fragment.l(a0_nodes);
			a0_nodes.forEach(detach$1);
			div1_nodes.forEach(detach$1);
			t5 = claim_text(div3_nodes, "\n            ");

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			p2 = claim_element(div2_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t6 = claim_text(p2_nodes, "View Resume");
			p2_nodes.forEach(detach$1);
			t7 = claim_text(div2_nodes, "\n                ");

			a1 = claim_element(div2_nodes, "A", { href: true, download: true, class: true }, false);
			var a1_nodes = children(a1);

			textanimation1.$$.fragment.l(a1_nodes);
			a1_nodes.forEach(detach$1);
			div2_nodes.forEach(detach$1);
			div3_nodes.forEach(detach$1);
			div4_nodes.forEach(detach$1);
			t8 = claim_text(footer_nodes, "\n    ");

			p3 = claim_element(footer_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t9 = claim_text(p3_nodes, "@ 2019 Joshua Roper Development");
			p3_nodes.forEach(detach$1);
			footer_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			attr(p0, "class", "headline svelte-116wp3q");
			add_location(p0, file$6, 91, 12, 1541);
			attr(div0, "class", "left svelte-116wp3q");
			add_location(div0, file$6, 90, 8, 1510);
			attr(p1, "class", "title svelte-116wp3q");
			add_location(p1, file$6, 98, 16, 1906);
			attr(a0, "href", "mailto:joshua.micah.roper@gmail.com");
			attr(a0, "class", "svelte-116wp3q");
			add_location(a0, file$6, 101, 16, 1995);
			attr(div1, "class", "text-cta svelte-116wp3q");
			add_location(div1, file$6, 97, 12, 1867);
			attr(p2, "class", "title svelte-116wp3q");
			add_location(p2, file$6, 106, 16, 2209);
			attr(a1, "href", "./images/resume-joshua-roper.pdf");
			attr(a1, "download", "");
			attr(a1, "class", "svelte-116wp3q");
			add_location(a1, file$6, 109, 16, 2296);
			attr(div2, "class", "text-cta svelte-116wp3q");
			add_location(div2, file$6, 105, 12, 2170);
			attr(div3, "class", "right svelte-116wp3q");
			add_location(div3, file$6, 96, 8, 1835);
			attr(div4, "class", "container footer-container svelte-116wp3q");
			add_location(div4, file$6, 89, 4, 1461);
			attr(p3, "class", "copyright container svelte-116wp3q");
			add_location(p3, file$6, 115, 4, 2479);
			attr(footer, "class", "svelte-116wp3q");
			add_location(footer, file$6, 88, 0, 1448);
		},

		m: function mount(target, anchor) {
			insert(target, footer, anchor);
			append(footer, div4);
			append(div4, div0);
			append(div0, p0);
			append(p0, t0);
			mount_component(inlinelink0, p0, null);
			append(p0, t1);
			mount_component(inlinelink1, p0, null);
			append(div4, t2);
			append(div4, div3);
			append(div3, div1);
			append(div1, p1);
			append(p1, t3);
			append(div1, t4);
			append(div1, a0);
			mount_component(textanimation0, a0, null);
			append(div3, t5);
			append(div3, div2);
			append(div2, p2);
			append(p2, t6);
			append(div2, t7);
			append(div2, a1);
			mount_component(textanimation1, a1, null);
			append(footer, t8);
			append(footer, p3);
			append(p3, t9);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			transition_in(inlinelink0.$$.fragment, local);

			transition_in(inlinelink1.$$.fragment, local);

			transition_in(textanimation0.$$.fragment, local);

			transition_in(textanimation1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(inlinelink0.$$.fragment, local);
			transition_out(inlinelink1.$$.fragment, local);
			transition_out(textanimation0.$$.fragment, local);
			transition_out(textanimation1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(footer);
			}

			destroy_component(inlinelink0);

			destroy_component(inlinelink1);

			destroy_component(textanimation0);

			destroy_component(textanimation1);
		}
	};
}

class Footer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$6, safe_not_equal, []);
	}
}

/* src/routes/_layout.svelte generated by Svelte v3.9.1 */

const file$7 = "src/routes/_layout.svelte";

function create_fragment$7(ctx) {
	var t0, div, t1, t2, current;

	var navigation = new Navigation({ $$inline: true });

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	var footer = new Footer({ $$inline: true });

	return {
		c: function create() {
			navigation.$$.fragment.c();
			t0 = space();
			div = element("div");
			t1 = space();

			if (default_slot) default_slot.c();
			t2 = space();
			footer.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			navigation.$$.fragment.l(nodes);
			t0 = claim_text(nodes, "\n");

			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			div_nodes.forEach(detach$1);
			t1 = claim_text(nodes, "\n");

			if (default_slot) default_slot.l(nodes);
			t2 = claim_text(nodes, "\n\n");
			footer.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			attr(div, "class", "background svelte-184cnv");
			add_location(div, file$7, 20, 0, 357);
		},

		m: function mount(target, anchor) {
			mount_component(navigation, target, anchor);
			insert(target, t0, anchor);
			insert(target, div, anchor);
			insert(target, t1, anchor);

			if (default_slot) {
				default_slot.m(target, anchor);
			}

			insert(target, t2, anchor);
			mount_component(footer, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(navigation.$$.fragment, local);

			transition_in(default_slot, local);

			transition_in(footer.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(navigation.$$.fragment, local);
			transition_out(default_slot, local);
			transition_out(footer.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(navigation, detaching);

			if (detaching) {
				detach$1(t0);
				detach$1(div);
				detach$1(t1);
			}

			if (default_slot) default_slot.d(detaching);

			if (detaching) {
				detach$1(t2);
			}

			destroy_component(footer, detaching);
		}
	};
}

function instance$5($$self, $$props, $$invalidate) {
	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	return { $$slots, $$scope };
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$7, safe_not_equal, []);
	}
}

/* src/routes/_error.svelte generated by Svelte v3.9.1 */
const { Error: Error_1 } = globals;

const file$8 = "src/routes/_error.svelte";

// (38:0) {#if dev && error.stack}
function create_if_block$1(ctx) {
	var pre, t_value = ctx.error.stack + "", t;

	return {
		c: function create() {
			pre = element("pre");
			t = text(t_value);
			this.h();
		},

		l: function claim(nodes) {
			pre = claim_element(nodes, "PRE", {}, false);
			var pre_nodes = children(pre);

			t = claim_text(pre_nodes, t_value);
			pre_nodes.forEach(detach$1);
			this.h();
		},

		h: function hydrate() {
			add_location(pre, file$8, 38, 1, 443);
		},

		m: function mount(target, anchor) {
			insert(target, pre, anchor);
			append(pre, t);
		},

		p: function update(changed, ctx) {
			if ((changed.error) && t_value !== (t_value = ctx.error.stack + "")) {
				set_data(t, t_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(pre);
			}
		}
	};
}

function create_fragment$8(ctx) {
	var title_value, t0, h1, t1, t2, p, t3_value = ctx.error.message + "", t3, t4, if_block_anchor;

	document.title = title_value = ctx.status;

	var if_block = (ctx.dev && ctx.error.stack) && create_if_block$1(ctx);

	return {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text(ctx.status);
			t2 = space();
			p = element("p");
			t3 = text(t3_value);
			t4 = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n");

			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, ctx.status);
			h1_nodes.forEach(detach$1);
			t2 = claim_text(nodes, "\n\n");

			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t3 = claim_text(p_nodes, t3_value);
			p_nodes.forEach(detach$1);
			t4 = claim_text(nodes, "\n\n");
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},

		h: function hydrate() {
			attr(h1, "class", "svelte-8od9u6");
			add_location(h1, file$8, 33, 0, 374);
			attr(p, "class", "svelte-8od9u6");
			add_location(p, file$8, 35, 0, 393);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, h1, anchor);
			append(h1, t1);
			insert(target, t2, anchor);
			insert(target, p, anchor);
			append(p, t3);
			insert(target, t4, anchor);
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.status) && title_value !== (title_value = ctx.status)) {
				document.title = title_value;
			}

			if (changed.status) {
				set_data(t1, ctx.status);
			}

			if ((changed.error) && t3_value !== (t3_value = ctx.error.message + "")) {
				set_data(t3, t3_value);
			}

			if (ctx.dev && ctx.error.stack) {
				if (if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block = create_if_block$1(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(t0);
				detach$1(h1);
				detach$1(t2);
				detach$1(p);
				detach$1(t4);
			}

			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach$1(if_block_anchor);
			}
		}
	};
}

function instance$6($$self, $$props, $$invalidate) {
	let { status, error } = $$props;

	const dev = "development" === 'development';

	const writable_props = ['status', 'error'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Error> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
	};

	return { status, error, dev };
}

class Error$1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$8, safe_not_equal, ["status", "error"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<Error> was created without expected prop 'status'");
		}
		if (ctx.error === undefined && !('error' in props)) {
			console.warn("<Error> was created without expected prop 'error'");
		}
	}

	get status() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error_1("<Error>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error_1("<Error>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/node_modules/@sapper/internal/App.svelte generated by Svelte v3.9.1 */
const { Error: Error_1$1 } = globals;

// (21:1) {:else}
function create_else_block(ctx) {
	var switch_instance_anchor, current;

	var switch_instance_spread_levels = [
		ctx.level1.props
	];

	var switch_value = ctx.level1.component;

	function switch_props(ctx) {
		let switch_instance_props = {};
		for (var i = 0; i < switch_instance_spread_levels.length; i += 1) {
			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
		}
		return {
			props: switch_instance_props,
			$$inline: true
		};
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props());
	}

	return {
		c: function create() {
			if (switch_instance) switch_instance.$$.fragment.c();
			switch_instance_anchor = empty();
		},

		l: function claim(nodes) {
			if (switch_instance) switch_instance.$$.fragment.l(nodes);
			switch_instance_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert(target, switch_instance_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var switch_instance_changes = (changed.level1) ? get_spread_update(switch_instance_spread_levels, [
									ctx.level1.props
								]) : {};

			if (switch_value !== (switch_value = ctx.level1.component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;
					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});
					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());

					switch_instance.$$.fragment.c();
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
				} else {
					switch_instance = null;
				}
			}

			else if (switch_value) {
				switch_instance.$set(switch_instance_changes);
			}
		},

		i: function intro(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach$1(switch_instance_anchor);
			}

			if (switch_instance) destroy_component(switch_instance, detaching);
		}
	};
}

// (19:1) {#if error}
function create_if_block$2(ctx) {
	var current;

	var error_1 = new Error$1({
		props: { error: ctx.error, status: ctx.status },
		$$inline: true
	});

	return {
		c: function create() {
			error_1.$$.fragment.c();
		},

		l: function claim(nodes) {
			error_1.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(error_1, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var error_1_changes = {};
			if (changed.error) error_1_changes.error = ctx.error;
			if (changed.status) error_1_changes.status = ctx.status;
			error_1.$set(error_1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(error_1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(error_1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(error_1, detaching);
		}
	};
}

// (18:0) <Layout segment="{segments[0]}" {...level0.props}>
function create_default_slot$1(ctx) {
	var current_block_type_index, if_block, if_block_anchor, current;

	var if_block_creators = [
		create_if_block$2,
		create_else_block
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.error) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(null, ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				group_outros();
				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});
				check_outros();

				if_block = if_blocks[current_block_type_index];
				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}
				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);

			if (detaching) {
				detach$1(if_block_anchor);
			}
		}
	};
}

function create_fragment$9(ctx) {
	var current;

	var layout_spread_levels = [
		{ segment: ctx.segments[0] },
		ctx.level0.props
	];

	let layout_props = {
		$$slots: { default: [create_default_slot$1] },
		$$scope: { ctx }
	};
	for (var i = 0; i < layout_spread_levels.length; i += 1) {
		layout_props = assign(layout_props, layout_spread_levels[i]);
	}
	var layout = new Layout({ props: layout_props, $$inline: true });

	return {
		c: function create() {
			layout.$$.fragment.c();
		},

		l: function claim(nodes) {
			layout.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(layout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var layout_changes = (changed.segments || changed.level0) ? get_spread_update(layout_spread_levels, [
									(changed.segments) && { segment: ctx.segments[0] },
			(changed.level0) && ctx.level0.props
								]) : {};
			if (changed.$$scope || changed.error || changed.status || changed.level1) layout_changes.$$scope = { changed, ctx };
			layout.$set(layout_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(layout.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(layout.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(layout, detaching);
		}
	};
}

function instance$7($$self, $$props, $$invalidate) {
	

	let { stores, error, status, segments, level0, level1 = null } = $$props;

	setContext(CONTEXT_KEY, stores);

	const writable_props = ['stores', 'error', 'status', 'segments', 'level0', 'level1'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<App> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('stores' in $$props) $$invalidate('stores', stores = $$props.stores);
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('segments' in $$props) $$invalidate('segments', segments = $$props.segments);
		if ('level0' in $$props) $$invalidate('level0', level0 = $$props.level0);
		if ('level1' in $$props) $$invalidate('level1', level1 = $$props.level1);
	};

	return {
		stores,
		error,
		status,
		segments,
		level0,
		level1
	};
}

class App extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$9, safe_not_equal, ["stores", "error", "status", "segments", "level0", "level1"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.stores === undefined && !('stores' in props)) {
			console.warn("<App> was created without expected prop 'stores'");
		}
		if (ctx.error === undefined && !('error' in props)) {
			console.warn("<App> was created without expected prop 'error'");
		}
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<App> was created without expected prop 'status'");
		}
		if (ctx.segments === undefined && !('segments' in props)) {
			console.warn("<App> was created without expected prop 'segments'");
		}
		if (ctx.level0 === undefined && !('level0' in props)) {
			console.warn("<App> was created without expected prop 'level0'");
		}
	}

	get stores() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set stores(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get error() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get segments() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set segments(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level0() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level0(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level1() {
		throw new Error_1$1("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level1(value) {
		throw new Error_1$1("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

// This file is generated by Sapper — do not edit it!

const ignore = [/^\/blog.json$/, /^\/blog\/([^\/]+?).json$/];

const components = [
	{
		js: () => import('./index.cb0da56c.js'),
		css: ["index.cb0da56c.css","TextAnimation.0dd8326f.css"]
	},
	{
		js: () => import('./creative-revolt.9b937b23.js'),
		css: ["creative-revolt.9b937b23.css","TextAnimation.0dd8326f.css"]
	},
	{
		js: () => import('./university-park.c164b0d3.js'),
		css: []
	},
	{
		js: () => import('./halcyon.46c72e51.js'),
		css: []
	},
	{
		js: () => import('./about.4cf6778a.js'),
		css: ["about.4cf6778a.css"]
	},
	{
		js: () => import('./index.2522b983.js'),
		css: ["index.2522b983.css"]
	},
	{
		js: () => import('./[slug].5b474d01.js'),
		css: ["[slug].5b474d01.css"]
	}
];

const routes = (d => [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// projects/creative-revolt.svelte
		pattern: /^\/projects\/creative-revolt\/?$/,
		parts: [
			null,
			{ i: 1 }
		]
	},

	{
		// projects/university-park.svelte
		pattern: /^\/projects\/university-park\/?$/,
		parts: [
			null,
			{ i: 2 }
		]
	},

	{
		// projects/halcyon.svelte
		pattern: /^\/projects\/halcyon\/?$/,
		parts: [
			null,
			{ i: 3 }
		]
	},

	{
		// about.svelte
		pattern: /^\/about\/?$/,
		parts: [
			{ i: 4 }
		]
	},

	{
		// blog/index.svelte
		pattern: /^\/blog\/?$/,
		parts: [
			{ i: 5 }
		]
	},

	{
		// blog/[slug].svelte
		pattern: /^\/blog\/([^\/]+?)\/?$/,
		parts: [
			null,
			{ i: 6, params: match => ({ slug: d(match[1]) }) }
		]
	}
])(decodeURIComponent);

if (typeof window !== 'undefined') {
	import('./sapper-dev-client.66640646.js').then(client => {
		client.connect(10000);
	});
}

function goto(href, opts = { replaceState: false }) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		_history[opts.replaceState ? 'replaceState' : 'pushState']({ id: cid }, '', href);
		return navigate(target, null).then(() => {});
	}

	location.href = href;
	return new Promise(f => {}); // never resolves
}

const initial_data = typeof __SAPPER__ !== 'undefined' && __SAPPER__;

let ready = false;
let root_component;
let current_token;
let root_preloaded;
let current_branch = [];
let current_query = '{}';

const stores = {
	page: writable({}),
	preloading: writable(null),
	session: writable(initial_data && initial_data.session)
};

let $session;
let session_dirty;

stores.session.subscribe(async value => {
	$session = value;

	if (!ready) return;
	session_dirty = true;

	const target = select_target(new URL(location.href));

	const token = current_token = {};
	const { redirect, props, branch } = await hydrate_target(target);
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
});

let prefetching


 = null;
function set_prefetching(href, promise) {
	prefetching = { href, promise };
}

let target;
function set_target(element) {
	target = element;
}

let uid = 1;
function set_uid(n) {
	uid = n;
}

let cid;
function set_cid(n) {
	cid = n;
}

const _history = typeof history !== 'undefined' ? history : {
	pushState: (state, title, href) => {},
	replaceState: (state, title, href) => {},
	scrollRestoration: ''
};

const scroll_history = {};

function extract_query(search) {
	const query = Object.create(null);
	if (search.length > 0) {
		search.slice(1).split('&').forEach(searchParam => {
			let [, key, value = ''] = /([^=]*)(?:=(.*))?/.exec(decodeURIComponent(searchParam.replace(/\+/g, ' ')));
			if (typeof query[key] === 'string') query[key] = [query[key]];
			if (typeof query[key] === 'object') (query[key] ).push(value);
			else query[key] = value;
		});
	}
	return query;
}

function select_target(url) {
	if (url.origin !== location.origin) return null;
	if (!url.pathname.startsWith(initial_data.baseUrl)) return null;

	let path = url.pathname.slice(initial_data.baseUrl.length);

	if (path === '') {
		path = '/';
	}

	// avoid accidental clashes between server routes and page routes
	if (ignore.some(pattern => pattern.test(path))) return;

	for (let i = 0; i < routes.length; i += 1) {
		const route = routes[i];

		const match = route.pattern.exec(path);

		if (match) {
			const query = extract_query(url.search);
			const part = route.parts[route.parts.length - 1];
			const params = part.params ? part.params(match) : {};

			const page = { host: location.host, path, query, params };

			return { href: url.href, route, match, page };
		}
	}
}

function handle_error(url) {
	const { host, pathname, search } = location;
	const { session, preloaded, status, error } = initial_data;

	if (!root_preloaded) {
		root_preloaded = preloaded && preloaded[0];
	}

	const props = {
		error,
		status,
		session,
		level0: {
			props: root_preloaded
		},
		level1: {
			props: {
				status,
				error
			},
			component: Error$1
		},
		segments: preloaded

	};
	const query = extract_query(search);
	render(null, [], props, { host, path: pathname, query, params: {} });
}

function scroll_state() {
	return {
		x: pageXOffset,
		y: pageYOffset
	};
}

async function navigate(target, id, noscroll, hash) {
	if (id) {
		// popstate or initial navigation
		cid = id;
	} else {
		const current_scroll = scroll_state();

		// clicked on a link. preserve scroll state
		scroll_history[cid] = current_scroll;

		id = cid = ++uid;
		scroll_history[cid] = noscroll ? current_scroll : { x: 0, y: 0 };
	}

	cid = id;

	if (root_component) stores.preloading.set(true);

	const loaded = prefetching && prefetching.href === target.href ?
		prefetching.promise :
		hydrate_target(target);

	prefetching = null;

	const token = current_token = {};
	const { redirect, props, branch } = await loaded;
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
	if (document.activeElement) document.activeElement.blur();

	if (!noscroll) {
		let scroll = scroll_history[id];

		if (hash) {
			// scroll is an element id (from a hash), we need to compute y.
			const deep_linked = document.getElementById(hash.slice(1));

			if (deep_linked) {
				scroll = {
					x: 0,
					y: deep_linked.getBoundingClientRect().top
				};
			}
		}

		scroll_history[cid] = scroll;
		if (scroll) scrollTo(scroll.x, scroll.y);
	}
}

async function render(redirect, branch, props, page) {
	if (redirect) return goto(redirect.location, { replaceState: true });

	stores.page.set(page);
	stores.preloading.set(false);

	if (root_component) {
		root_component.$set(props);
	} else {
		props.stores = {
			page: { subscribe: stores.page.subscribe },
			preloading: { subscribe: stores.preloading.subscribe },
			session: stores.session
		};
		props.level0 = {
			props: await root_preloaded
		};

		// first load — remove SSR'd <head> contents
		const start = document.querySelector('#sapper-head-start');
		const end = document.querySelector('#sapper-head-end');

		if (start && end) {
			while (start.nextSibling !== end) detach(start.nextSibling);
			detach(start);
			detach(end);
		}

		root_component = new App({
			target,
			props,
			hydrate: true
		});
	}

	current_branch = branch;
	current_query = JSON.stringify(page.query);
	ready = true;
	session_dirty = false;
}

function part_changed(i, segment, match, stringified_query) {
	// TODO only check query string changes for preload functions
	// that do in fact depend on it (using static analysis or
	// runtime instrumentation)
	if (stringified_query !== current_query) return true;

	const previous = current_branch[i];

	if (!previous) return false;
	if (segment !== previous.segment) return true;
	if (previous.match) {
		if (JSON.stringify(previous.match.slice(1, i + 2)) !== JSON.stringify(match.slice(1, i + 2))) {
			return true;
		}
	}
}

async function hydrate_target(target)



 {
	const { route, page } = target;
	const segments = page.path.split('/').filter(Boolean);

	let redirect = null;

	const props = { error: null, status: 200, segments: [segments[0]] };

	const preload_context = {
		fetch: (url, opts) => fetch(url, opts),
		redirect: (statusCode, location) => {
			if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
				throw new Error(`Conflicting redirects`);
			}
			redirect = { statusCode, location };
		},
		error: (status, error) => {
			props.error = typeof error === 'string' ? new Error(error) : error;
			props.status = status;
		}
	};

	if (!root_preloaded) {
		root_preloaded = initial_data.preloaded[0] || preload.call(preload_context, {
			host: page.host,
			path: page.path,
			query: page.query,
			params: {}
		}, $session);
	}

	let branch;
	let l = 1;

	try {
		const stringified_query = JSON.stringify(page.query);
		const match = route.pattern.exec(page.path);

		let segment_dirty = false;

		branch = await Promise.all(route.parts.map(async (part, i) => {
			const segment = segments[i];

			if (part_changed(i, segment, match, stringified_query)) segment_dirty = true;

			props.segments[l] = segments[i + 1]; // TODO make this less confusing
			if (!part) return { segment };

			const j = l++;

			if (!session_dirty && !segment_dirty && current_branch[i] && current_branch[i].part === part.i) {
				return current_branch[i];
			}

			segment_dirty = false;

			const { default: component, preload } = await load_component(components[part.i]);

			let preloaded;
			if (ready || !initial_data.preloaded[i + 1]) {
				preloaded = preload
					? await preload.call(preload_context, {
						host: page.host,
						path: page.path,
						query: page.query,
						params: part.params ? part.params(target.match) : {}
					}, $session)
					: {};
			} else {
				preloaded = initial_data.preloaded[i + 1];
			}

			return (props[`level${j}`] = { component, props: preloaded, segment, match, part: part.i });
		}));
	} catch (error) {
		props.error = error;
		props.status = 500;
		branch = [];
	}

	return { redirect, props, branch };
}

function load_css(chunk) {
	const href = `client/${chunk}`;
	if (document.querySelector(`link[href="${href}"]`)) return;

	return new Promise((fulfil, reject) => {
		const link = document.createElement('link');
		link.rel = 'stylesheet';
		link.href = href;

		link.onload = () => fulfil();
		link.onerror = reject;

		document.head.appendChild(link);
	});
}

function load_component(component)


 {
	// TODO this is temporary — once placeholders are
	// always rewritten, scratch the ternary
	const promises = (typeof component.css === 'string' ? [] : component.css.map(load_css));
	promises.unshift(component.js());
	return Promise.all(promises).then(values => values[0]);
}

function detach(node) {
	node.parentNode.removeChild(node);
}

function prefetch(href) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		if (!prefetching || href !== prefetching.href) {
			set_prefetching(href, hydrate_target(target));
		}

		return prefetching.promise;
	}
}

function start(opts

) {
	if ('scrollRestoration' in _history) {
		_history.scrollRestoration = 'manual';
	}

	set_target(opts.target);

	addEventListener('click', handle_click);
	addEventListener('popstate', handle_popstate);

	// prefetch
	addEventListener('touchstart', trigger_prefetch);
	addEventListener('mousemove', handle_mousemove);

	return Promise.resolve().then(() => {
		const { hash, href } = location;

		_history.replaceState({ id: uid }, '', href);

		const url = new URL(location.href);

		if (initial_data.error) return handle_error();

		const target = select_target(url);
		if (target) return navigate(target, uid, true, hash);
	});
}

let mousemove_timeout;

function handle_mousemove(event) {
	clearTimeout(mousemove_timeout);
	mousemove_timeout = setTimeout(() => {
		trigger_prefetch(event);
	}, 20);
}

function trigger_prefetch(event) {
	const a = find_anchor(event.target);
	if (!a || a.rel !== 'prefetch') return;

	prefetch(a.href);
}

function handle_click(event) {
	// Adapted from https://github.com/visionmedia/page.js
	// MIT license https://github.com/visionmedia/page.js#license
	if (which(event) !== 1) return;
	if (event.metaKey || event.ctrlKey || event.shiftKey) return;
	if (event.defaultPrevented) return;

	const a = find_anchor(event.target);
	if (!a) return;

	if (!a.href) return;

	// check if link is inside an svg
	// in this case, both href and target are always inside an object
	const svg = typeof a.href === 'object' && a.href.constructor.name === 'SVGAnimatedString';
	const href = String(svg ? (a).href.baseVal : a.href);

	if (href === location.href) {
		if (!location.hash) event.preventDefault();
		return;
	}

	// Ignore if tag has
	// 1. 'download' attribute
	// 2. rel='external' attribute
	if (a.hasAttribute('download') || a.getAttribute('rel') === 'external') return;

	// Ignore if <a> has a target
	if (svg ? (a).target.baseVal : a.target) return;

	const url = new URL(href);

	// Don't handle hash changes
	if (url.pathname === location.pathname && url.search === location.search) return;

	const target = select_target(url);
	if (target) {
		const noscroll = a.hasAttribute('sapper-noscroll');
		navigate(target, null, noscroll, url.hash);
		event.preventDefault();
		_history.pushState({ id: cid }, '', url.href);
	}
}

function which(event) {
	return event.which === null ? event.button : event.which;
}

function find_anchor(node) {
	while (node && node.nodeName.toUpperCase() !== 'A') node = node.parentNode; // SVG <a> elements have a lowercase name
	return node;
}

function handle_popstate(event) {
	scroll_history[cid] = scroll_state();

	if (event.state) {
		const url = new URL(location.href);
		const target = select_target(url);
		if (target) {
			navigate(target, event.state.id);
		} else {
			location.href = location.href;
		}
	} else {
		// hashchange
		set_uid(uid + 1);
		set_cid(uid);
		_history.replaceState({ id: cid }, '', location.href);
	}
}

start({
	target: document.querySelector('#sapper')
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
