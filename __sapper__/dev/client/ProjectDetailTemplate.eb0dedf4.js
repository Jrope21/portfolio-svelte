import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, k as space, c as claim_element, a as children, l as claim_text, b as detach_dev, m as claim_space, f as attr_dev, g as add_location, h as insert_dev, j as append_dev, z as set_data_dev, n as noop, T as TextAnimation, p as create_component, q as claim_component, r as mount_component, u as transition_in, w as transition_out, x as destroy_component, H as HtmlTag, A as validate_each_argument, F as fade, G as fly, I as empty, B as group_outros, C as check_outros, J as listen_dev, D as destroy_each, K as add_render_callback, L as create_bidirectional_transition, M as run_all, E as query_selector_all } from './client.c715b652.js';

/* src/components/project-detail-components/PageTitle.svelte generated by Svelte v3.29.4 */

const file = "src/components/project-detail-components/PageTitle.svelte";

function create_fragment(ctx) {
	let div1;
	let div0;
	let h1;
	let t0;
	let t1;
	let span;
	let t2;
	let div0_class_value;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text(/*title*/ ctx[0]);
			t1 = space();
			span = element("span");
			t2 = text(/*title*/ ctx[0]);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*title*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			span = claim_element(div0_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t2 = claim_text(span_nodes, /*title*/ ctx[0]);
			span_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-81w521");
			add_location(h1, file, 159, 8, 3992);
			attr_dev(span, "class", "svelte-81w521");
			add_location(span, file, 160, 8, 4017);
			attr_dev(div0, "class", div0_class_value = "title-container " + /*sidePage*/ ctx[1] + " svelte-81w521");
			add_location(div0, file, 158, 4, 3943);
			attr_dev(div1, "class", "page-header svelte-81w521");
			add_location(div1, file, 157, 0, 3913);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div0, t1);
			append_dev(div0, span);
			append_dev(span, t2);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data_dev(t0, /*title*/ ctx[0]);
			if (dirty & /*title*/ 1) set_data_dev(t2, /*title*/ ctx[0]);

			if (dirty & /*sidePage*/ 2 && div0_class_value !== (div0_class_value = "title-container " + /*sidePage*/ ctx[1] + " svelte-81w521")) {
				attr_dev(div0, "class", div0_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("PageTitle", slots, []);
	let { title } = $$props, { sidePage } = $$props;
	const writable_props = ["title", "sidePage"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<PageTitle> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("sidePage" in $$props) $$invalidate(1, sidePage = $$props.sidePage);
	};

	$$self.$capture_state = () => ({ title, sidePage });

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("sidePage" in $$props) $$invalidate(1, sidePage = $$props.sidePage);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title, sidePage];
}

class PageTitle extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { title: 0, sidePage: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "PageTitle",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !("title" in props)) {
			console.warn("<PageTitle> was created without expected prop 'title'");
		}

		if (/*sidePage*/ ctx[1] === undefined && !("sidePage" in props)) {
			console.warn("<PageTitle> was created without expected prop 'sidePage'");
		}
	}

	get title() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get sidePage() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set sidePage(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Description.svelte generated by Svelte v3.29.4 */
const file$1 = "src/components/project-detail-components/Description.svelte";

function create_fragment$1(ctx) {
	let div;
	let h3;
	let t0;
	let t1;
	let p;
	let html_tag;
	let t2;
	let a;
	let textanimation;
	let current;

	textanimation = new TextAnimation({
			props: { text: `View Website` },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("Details");
			t1 = space();
			p = element("p");
			t2 = space();
			a = element("a");
			create_component(textanimation.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "Details");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_space(p_nodes);

			a = claim_element(p_nodes, "A", {
				target: true,
				rel: true,
				href: true,
				class: true
			});

			var a_nodes = children(a);
			claim_component(textanimation.$$.fragment, a_nodes);
			a_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-2p1ul8");
			add_location(h3, file$1, 128, 4, 3151);
			html_tag = new HtmlTag(t2);
			attr_dev(a, "target", "_blank");
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "href", /*url*/ ctx[1]);
			attr_dev(a, "class", "svelte-2p1ul8");
			add_location(a, file$1, 133, 8, 3219);
			attr_dev(p, "class", "svelte-2p1ul8");
			add_location(p, file$1, 131, 4, 3186);
			attr_dev(div, "class", "svelte-2p1ul8");
			add_location(div, file$1, 127, 0, 3141);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h3);
			append_dev(h3, t0);
			append_dev(div, t1);
			append_dev(div, p);
			html_tag.m(/*text*/ ctx[0], p);
			append_dev(p, t2);
			append_dev(p, a);
			mount_component(textanimation, a, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*text*/ 1) html_tag.p(/*text*/ ctx[0]);

			if (!current || dirty & /*url*/ 2) {
				attr_dev(a, "href", /*url*/ ctx[1]);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textanimation.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textanimation.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(textanimation);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Description", slots, []);
	let { text } = $$props, { url } = $$props;
	const writable_props = ["text", "url"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Description> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("url" in $$props) $$invalidate(1, url = $$props.url);
	};

	$$self.$capture_state = () => ({ text, url, TextAnimation });

	$$self.$inject_state = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("url" in $$props) $$invalidate(1, url = $$props.url);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [text, url];
}

class Description extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { text: 0, url: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Description",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*text*/ ctx[0] === undefined && !("text" in props)) {
			console.warn("<Description> was created without expected prop 'text'");
		}

		if (/*url*/ ctx[1] === undefined && !("url" in props)) {
			console.warn("<Description> was created without expected prop 'url'");
		}
	}

	get text() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get url() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set url(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Carousel.svelte generated by Svelte v3.29.4 */
const file$2 = "src/components/project-detail-components/Carousel.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	child_ctx[11] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	return child_ctx;
}

// (366:12) {#if img.visible}
function create_if_block(ctx) {
	let div;
	let button0;
	let span0;
	let t0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t1;
	let button1;
	let span1;
	let div_transition;
	let current;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			button0 = element("button");
			span0 = element("span");
			t0 = space();
			img = element("img");
			t1 = space();
			button1 = element("button");
			span1 = element("span");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true });
			var button0_nodes = children(button0);
			span0 = claim_element(button0_nodes, "SPAN", { class: true });
			children(span0).forEach(detach_dev);
			button0_nodes.forEach(detach_dev);
			t0 = claim_space(div_nodes);
			img = claim_element(div_nodes, "IMG", { src: true, alt: true, class: true });
			t1 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true });
			var button1_nodes = children(button1);
			span1 = claim_element(button1_nodes, "SPAN", { class: true });
			children(span1).forEach(detach_dev);
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span0, "class", "arrow-left svelte-10vsnri");
			add_location(span0, file$2, 368, 24, 8586);
			attr_dev(button0, "aria-label", "a button that shows the previous image in the carousel");
			attr_dev(button0, "class", "back svelte-10vsnri");
			add_location(button0, file$2, 367, 20, 8435);
			if (img.src !== (img_src_value = /*img*/ ctx[9].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*img*/ ctx[9].alt);
			attr_dev(img, "class", "svelte-10vsnri");
			add_location(img, file$2, 370, 20, 8669);
			attr_dev(span1, "class", "arrow-right svelte-10vsnri");
			add_location(span1, file$2, 372, 24, 8870);
			attr_dev(button1, "aria-label", "a button that shows the next image in the carousel");
			attr_dev(button1, "class", "next svelte-10vsnri");
			add_location(button1, file$2, 371, 20, 8727);
			attr_dev(div, "class", "slide svelte-10vsnri");
			add_location(div, file$2, 366, 16, 8344);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, button0);
			append_dev(button0, span0);
			append_dev(div, t0);
			append_dev(div, img);
			append_dev(div, t1);
			append_dev(div, button1);
			append_dev(button1, span1);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[5], false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[6], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*STATE*/ 1 && img.src !== (img_src_value = /*img*/ ctx[9].src)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*STATE*/ 1 && img_alt_value !== (img_alt_value = /*img*/ ctx[9].alt)) {
				attr_dev(img, "alt", img_alt_value);
			}
		},
		i: function intro(local) {
			if (current) return;

			if (local) {
				add_render_callback(() => {
					if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, true);
					div_transition.run(1);
				});
			}

			current = true;
		},
		o: function outro(local) {
			if (local) {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, false);
				div_transition.run(0);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (detaching && div_transition) div_transition.end();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(366:12) {#if img.visible}",
		ctx
	});

	return block;
}

// (365:8) {#each STATE.images as img}
function create_each_block_1(ctx) {
	let if_block_anchor;
	let if_block = /*img*/ ctx[9].visible && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*img*/ ctx[9].visible) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*STATE*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(365:8) {#each STATE.images as img}",
		ctx
	});

	return block;
}

// (379:8) {#each STATE.images as img, i}
function create_each_block(ctx) {
	let span;
	let span_class_value;
	let mounted;
	let dispose;

	function click_handler_2(...args) {
		return /*click_handler_2*/ ctx[7](/*img*/ ctx[9], ...args);
	}

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true, "aria-label": true });
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", span_class_value = "circle " + (/*img*/ ctx[9].visible ? "active" : "") + " svelte-10vsnri");
			attr_dev(span, "aria-label", "a button to go to a specific image in the carousel");
			add_location(span, file$2, 379, 12, 9078);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);

			if (!mounted) {
				dispose = listen_dev(span, "click", click_handler_2, false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (dirty & /*STATE*/ 1 && span_class_value !== (span_class_value = "circle " + (/*img*/ ctx[9].visible ? "active" : "") + " svelte-10vsnri")) {
				attr_dev(span, "class", span_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(379:8) {#each STATE.images as img, i}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let div2;
	let div0;
	let t0;
	let t1;
	let div1;
	let each_value_1 = /*STATE*/ ctx[0].images;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*STATE*/ ctx[0].images;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t1 = space();
			div1 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div2_nodes);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div2_nodes);
			}

			t1 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "box svelte-10vsnri");
			add_location(div0, file$2, 363, 4, 8237);
			attr_dev(div1, "class", "circles-container svelte-10vsnri");
			add_location(div1, file$2, 377, 4, 8995);
			attr_dev(div2, "class", "carousel-container svelte-10vsnri");
			add_location(div2, file$2, 362, 0, 8200);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div2, null);
			}

			append_dev(div2, t1);
			append_dev(div2, div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*viewNextSlide, STATE, viewPreviousSlide*/ 13) {
				each_value_1 = /*STATE*/ ctx[0].images;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div2, t1);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*STATE, switchSlides*/ 3) {
				each_value = /*STATE*/ ctx[0].images;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Carousel", slots, []);
	let { images } = $$props;
	let STATE = { images };

	function switchSlides(key) {
		STATE.images.forEach(img => {
			if (key === img.key) {
				img.visible = true;
			} else {
				img.visible = false;
			}
		});

		$$invalidate(0, STATE = { ...STATE });
	}

	function viewNextSlide() {
		let currentSlide = findCurrentSlide();
		let nextSlide = currentSlide !== null ? currentSlide + 1 : null;
		if (nextSlide !== null) $$invalidate(0, STATE.images[currentSlide].visible = false, STATE);

		if (nextSlide < STATE.images.length) {
			$$invalidate(0, STATE.images[nextSlide].visible = true, STATE);
		} else {
			$$invalidate(0, STATE.images[0].visible = true, STATE);
		}

		$$invalidate(0, STATE = { ...STATE });
	}

	function viewPreviousSlide() {
		let currentSlide = findCurrentSlide();
		let prevSlide = currentSlide !== null ? currentSlide - 1 : null;
		if (prevSlide !== null) $$invalidate(0, STATE.images[currentSlide].visible = false, STATE);

		if (prevSlide > -1) {
			$$invalidate(0, STATE.images[prevSlide].visible = true, STATE);
		} else {
			$$invalidate(0, STATE.images[STATE.images.length - 1].visible = true, STATE);
		}

		$$invalidate(0, STATE = { ...STATE });
	}

	function findCurrentSlide() {
		if (!STATE.images.length) return null;
		let currentSlideIndex;

		STATE.images.forEach((img, i) => {
			if (img.visible) currentSlideIndex = i;
		});

		return currentSlideIndex;
	}

	const writable_props = ["images"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Carousel> was created with unknown prop '${key}'`);
	});

	const click_handler = () => viewPreviousSlide();
	const click_handler_1 = () => viewNextSlide();

	const click_handler_2 = img => {
		switchSlides(img.key);
	};

	$$self.$$set = $$props => {
		if ("images" in $$props) $$invalidate(4, images = $$props.images);
	};

	$$self.$capture_state = () => ({
		fade,
		fly,
		images,
		STATE,
		switchSlides,
		viewNextSlide,
		viewPreviousSlide,
		findCurrentSlide
	});

	$$self.$inject_state = $$props => {
		if ("images" in $$props) $$invalidate(4, images = $$props.images);
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		STATE,
		switchSlides,
		viewNextSlide,
		viewPreviousSlide,
		images,
		click_handler,
		click_handler_1,
		click_handler_2
	];
}

class Carousel extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { images: 4 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Carousel",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*images*/ ctx[4] === undefined && !("images" in props)) {
			console.warn("<Carousel> was created without expected prop 'images'");
		}
	}

	get images() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set images(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Skills.svelte generated by Svelte v3.29.4 */

const file$3 = "src/components/project-detail-components/Skills.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (132:12) {#each skills as skill}
function create_each_block$1(ctx) {
	let li;
	let t_value = /*skill*/ ctx[1] + "";
	let t;

	const block = {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", "svelte-1czm90o");
			add_location(li, file$3, 132, 16, 3187);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*skills*/ 1 && t_value !== (t_value = /*skill*/ ctx[1] + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(132:12) {#each skills as skill}",
		ctx
	});

	return block;
}

function create_fragment$3(ctx) {
	let div;
	let h3;
	let t0;
	let t1;
	let ul;
	let each_value = /*skills*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("The Tech");
			t1 = space();
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "The Tech");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			ul = claim_element(div_nodes, "UL", { class: true });
			var ul_nodes = children(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-1czm90o");
			add_location(h3, file$3, 127, 4, 3075);
			attr_dev(ul, "class", "skills svelte-1czm90o");
			add_location(ul, file$3, 130, 8, 3115);
			attr_dev(div, "class", "svelte-1czm90o");
			add_location(div, file$3, 126, 0, 3065);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h3);
			append_dev(h3, t0);
			append_dev(div, t1);
			append_dev(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*skills*/ 1) {
				each_value = /*skills*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Skills", slots, []);
	let { skills } = $$props;
	const writable_props = ["skills"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Skills> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	$$self.$capture_state = () => ({ skills });

	$$self.$inject_state = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [skills];
}

class Skills extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { skills: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Skills",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*skills*/ ctx[0] === undefined && !("skills" in props)) {
			console.warn("<Skills> was created without expected prop 'skills'");
		}
	}

	get skills() {
		throw new Error("<Skills>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skills(value) {
		throw new Error("<Skills>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/route-layouts/ProjectDetailTemplate.svelte generated by Svelte v3.29.4 */
const file$4 = "src/route-layouts/ProjectDetailTemplate.svelte";

function create_fragment$4(ctx) {
	let title_value;
	let t0;
	let div2;
	let div1;
	let pagetitle;
	let t1;
	let div0;
	let carousel;
	let t2;
	let section0;
	let description;
	let t3;
	let section1;
	let skills;
	let t4;
	let section2;
	let a;
	let t5;
	let a_href_value;
	let current;
	document.title = title_value = /*STATE*/ ctx[0].metaTitle;

	pagetitle = new PageTitle({
			props: { title: /*STATE*/ ctx[0].title },
			$$inline: true
		});

	carousel = new Carousel({
			props: { images: /*STATE*/ ctx[0].images },
			$$inline: true
		});

	description = new Description({
			props: {
				text: /*STATE*/ ctx[0].description,
				url: /*STATE*/ ctx[0].url
			},
			$$inline: true
		});

	skills = new Skills({
			props: { skills: /*STATE*/ ctx[0].skills },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			create_component(pagetitle.$$.fragment);
			t1 = space();
			div0 = element("div");
			create_component(carousel.$$.fragment);
			t2 = space();
			section0 = element("section");
			create_component(description.$$.fragment);
			t3 = space();
			section1 = element("section");
			create_component(skills.$$.fragment);
			t4 = space();
			section2 = element("section");
			a = element("a");
			t5 = text("Check The Site!");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1yqoakg\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(pagetitle.$$.fragment, div1_nodes);
			t1 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(carousel.$$.fragment, div0_nodes);
			t2 = claim_space(div0_nodes);
			section0 = claim_element(div0_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			claim_component(description.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			section1 = claim_element(div0_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			claim_component(skills.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t4 = claim_space(div0_nodes);
			section2 = claim_element(div0_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);

			a = claim_element(section2_nodes, "A", {
				href: true,
				rel: true,
				target: true,
				class: true
			});

			var a_nodes = children(a);
			t5 = claim_text(a_nodes, "Check The Site!");
			a_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section0, "class", "project-description svelte-dliy2h");
			add_location(section0, file$4, 125, 12, 3353);
			attr_dev(section1, "class", "skills-container svelte-dliy2h");
			add_location(section1, file$4, 128, 12, 3501);
			attr_dev(a, "href", a_href_value = /*STATE*/ ctx[0].url);
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "target", "_blank");
			attr_dev(a, "class", "svelte-dliy2h");
			add_location(a, file$4, 132, 16, 3657);
			attr_dev(section2, "class", "cta svelte-dliy2h");
			add_location(section2, file$4, 131, 12, 3619);
			attr_dev(div0, "class", "inner-container svelte-dliy2h");
			add_location(div0, file$4, 123, 8, 3265);
			attr_dev(div1, "class", "container svelte-dliy2h");
			add_location(div1, file$4, 121, 4, 3191);
			attr_dev(div2, "class", "project-detail svelte-dliy2h");
			add_location(div2, file$4, 120, 0, 3158);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, div1);
			mount_component(pagetitle, div1, null);
			append_dev(div1, t1);
			append_dev(div1, div0);
			mount_component(carousel, div0, null);
			append_dev(div0, t2);
			append_dev(div0, section0);
			mount_component(description, section0, null);
			append_dev(div0, t3);
			append_dev(div0, section1);
			mount_component(skills, section1, null);
			append_dev(div0, t4);
			append_dev(div0, section2);
			append_dev(section2, a);
			append_dev(a, t5);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*STATE*/ 1) && title_value !== (title_value = /*STATE*/ ctx[0].metaTitle)) {
				document.title = title_value;
			}

			const pagetitle_changes = {};
			if (dirty & /*STATE*/ 1) pagetitle_changes.title = /*STATE*/ ctx[0].title;
			pagetitle.$set(pagetitle_changes);
			const carousel_changes = {};
			if (dirty & /*STATE*/ 1) carousel_changes.images = /*STATE*/ ctx[0].images;
			carousel.$set(carousel_changes);
			const description_changes = {};
			if (dirty & /*STATE*/ 1) description_changes.text = /*STATE*/ ctx[0].description;
			if (dirty & /*STATE*/ 1) description_changes.url = /*STATE*/ ctx[0].url;
			description.$set(description_changes);
			const skills_changes = {};
			if (dirty & /*STATE*/ 1) skills_changes.skills = /*STATE*/ ctx[0].skills;
			skills.$set(skills_changes);

			if (!current || dirty & /*STATE*/ 1 && a_href_value !== (a_href_value = /*STATE*/ ctx[0].url)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(pagetitle.$$.fragment, local);
			transition_in(carousel.$$.fragment, local);
			transition_in(description.$$.fragment, local);
			transition_in(skills.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(pagetitle.$$.fragment, local);
			transition_out(carousel.$$.fragment, local);
			transition_out(description.$$.fragment, local);
			transition_out(skills.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div2);
			destroy_component(pagetitle);
			destroy_component(carousel);
			destroy_component(description);
			destroy_component(skills);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("ProjectDetailTemplate", slots, []);
	let { STATE } = $$props;
	const writable_props = ["STATE"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProjectDetailTemplate> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	$$self.$capture_state = () => ({
		PageTitle,
		Description,
		Carousel,
		Skills,
		STATE
	});

	$$self.$inject_state = $$props => {
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [STATE];
}

class ProjectDetailTemplate extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, { STATE: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProjectDetailTemplate",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*STATE*/ ctx[0] === undefined && !("STATE" in props)) {
			console.warn("<ProjectDetailTemplate> was created without expected prop 'STATE'");
		}
	}

	get STATE() {
		throw new Error("<ProjectDetailTemplate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set STATE(value) {
		throw new Error("<ProjectDetailTemplate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { ProjectDetailTemplate as P };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvamVjdERldGFpbFRlbXBsYXRlLmViMGRlZGY0LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0LWRldGFpbC1jb21wb25lbnRzL1BhZ2VUaXRsZS5zdmVsdGUiLCIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0LWRldGFpbC1jb21wb25lbnRzL0Rlc2NyaXB0aW9uLnN2ZWx0ZSIsIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3Byb2plY3QtZGV0YWlsLWNvbXBvbmVudHMvQ2Fyb3VzZWwuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJvamVjdC1kZXRhaWwtY29tcG9uZW50cy9Ta2lsbHMuc3ZlbHRlIiwiLi4vLi4vLi4vc3JjL3JvdXRlLWxheW91dHMvUHJvamVjdERldGFpbFRlbXBsYXRlLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuZXhwb3J0IGxldCB0aXRsZSwgc2lkZVBhZ2U7XG4vLyBzaWRlUGFnZSBzaG91bGQgYmUgc2V0IHRvICdzaWRlLXBhZ2UnIHRvIHRvZ2dsZSBjbGFzc1xuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiPlxuICAgIEBpbXBvcnQgJy4uLy4uL3N0eWxlcy9nbG9iYWwudmFyaWFibGVzLnNjc3MnO1xuXG4gICAgQGtleWZyYW1lcyBzbGlkZUluUmlnaHQge1xuICAgICAgICAxMDAlIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgYmFkU2xpZGVJblJpZ2h0IHtcbiAgICAgICAgMCUge1xuICAgICAgICAgICAgbGVmdDogLTEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgMTAwJSB7XG4gICAgICAgICAgICBsZWZ0OiA1cHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXY6bm90KC5wYWdlLWhlYWRlcikge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICB3aWR0aDogNjUlO1xuICAgICAgICBtYXJnaW46IC0wNXB4IDBweCAyMHB4IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZyZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGNvbG9yOiBjb2xvcihzZWNvbmRhcnkpO1xuICAgICAgICBtYXgtd2lkdGg6IDEzMjBweDtcbiAgICB9XG5cbiAgICBkaXYuc2lkZS1wYWdlIHtcbiAgICAgICAgZm9udC1zaXplOiAxMnJlbTtcbiAgICAgICAgbWF4LXdpZHRoOiAxNzA1cHg7XG4gICAgfVxuXG4gICAgZGl2LnRpdGxlLWNvbnRhaW5lcjpub3QoLnNpZGUtcGFnZSl7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgLyogYW5pbWF0aW9uOiAuOXMgZWFzZS1vdXQgMHMgMSBmYWRlSW4gZm9yd2FyZHM7ICovXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgZGl2LnRpdGxlLWNvbnRhaW5lcjpub3QoLnNpZGUtcGFnZSl7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cblxuICAgICAgICBkaXY6bm90KC5wYWdlLWhlYWRlcikge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyOHJlbTtcbiAgICAgICAgICAgIHdpZHRoOiA3NSU7XG4gICAgICAgIH1cblxuICAgICAgICBkaXYuc2lkZS1wYWdlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRyZW07XG4gICAgICAgICAgICB3aWR0aDogODUlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICAgIGNvbG9yOiBjb2xvcihwcmltYXJ5KTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICAvKiBsZWZ0OiAtMTAwJTsgKi9cbiAgICAgICAgcmlnaHQ6IDBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgLyogYW5pbWF0aW9uOiAxcyBlYXNlLW91dCAwcyAxIHNsaWRlSW5SaWdodCBmb3J3YXJkczsgKi9cbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgIGgxIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNTVweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobWQpKXtcbiAgICAgICAgaDEge1xuICAgICAgICAgICAgZm9udC1zaXplOiA2NHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGl2LnBhZ2UtaGVhZGVye1xuICAgICAgICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgLyogaGVpZ2h0OiAxMjVweDsgKi9cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgIGRpdi5wYWdlLWhlYWRlciB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgICAgICAgICBoZWlnaHQ6IDEyMHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyogQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogYnJlYWtwb2ludChtZCkpe1xuICAgICAgICBkaXYucGFnZS1oZWFkZXIge1xuICAgICAgICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICAgICAgfVxuICAgIH0gKi9cblxuICAgIHNwYW57XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoLTEpO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgtMSkgcm90YXRlKDE4MGRlZykgc2tldygtMTBkZWcsIDBkZWcpO1xuICAgICAgICBvcGFjaXR5OiAuMDM7XG4gICAgICAgIGxlZnQ6IDNweDtcbiAgICAgICAgYm90dG9tOiAtMjVweDtcbiAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICBsZWZ0OiA1cHg7XG4gICAgICAgICAgICBib3R0b206IC01NXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiA1NXB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogYnJlYWtwb2ludChtZCkpe1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNjRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbjwvc3R5bGU+XG48ZGl2IGNsYXNzPVwicGFnZS1oZWFkZXJcIj5cbiAgICA8ZGl2IGNsYXNzPSd0aXRsZS1jb250YWluZXIge3NpZGVQYWdlfSc+XG4gICAgICAgIDxoMT57dGl0bGV9PC9oMT5cbiAgICAgICAgPHNwYW4+e3RpdGxlfTwvc3Bhbj5cbiAgICA8L2Rpdj5cbjwvZGl2PiIsIjxzY3JpcHQ+XG5leHBvcnQgbGV0IHRleHQsIHVybDtcbmltcG9ydCBUZXh0QW5pbWF0aW9uIGZyb20gJy4uL2NvbW1vbi1jb21wb25lbnRzL1RleHRBbmltYXRpb24uc3ZlbHRlJztcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cbiAgICBAaW1wb3J0ICcuLi8uLi9zdHlsZXMvZ2xvYmFsLnZhcmlhYmxlcy5zY3NzJztcblxuICAgIGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICAgIFxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgZGl2e1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHA6bnRoLWNoaWxkKDEpe1xuICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cmVtO1xuICAgICAgICB3aWR0aDogMTAwJVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgcDpudGgtY2hpbGQoMSkge1xuICAgICAgICAgICAgd2lkdGg6IDIwJTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGgze1xuICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cmVtO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgaDMge1xuICAgICAgICAgICAgd2lkdGg6IDE4JTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KG1kKSl7XG4gICAgICAgIGgzIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjNyZW07XG4gICAgICAgICAgICB3aWR0aDogMjAlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcDpudGgtY2hpbGQoMil7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgcDpudGgtY2hpbGQoMikge1xuICAgICAgICAgICAgd2lkdGg6IDY1JTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobWQpKXtcbiAgICAgICAgcDpudGgtY2hpbGQoMikge1xuICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgIG1pbi13aWR0aDogNDUwcHg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgZm9udC1zaXplOiAxM3JlbTtcbiAgICAgICAgY29sb3I6IGNvbG9yKHNlY29uZGFyeSk7XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogYnJlYWtwb2ludChtZCkpe1xuICAgICAgICBwe1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHJlbTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgZm9udC1zaXplOiAxMnJlbTtcbiAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgICBtYXJnaW4tdG9wOiAxMHJlbTtcbiAgICAgICAgY29sb3I6IGNvbG9yKGFjY2VudCk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICB9XG4gICAgXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobWQpKSB7XG4gICAgICAgIGEge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHJlbTtcbiAgICAgICAgfVxuICAgIH1cblxuPC9zdHlsZT5cblxuPGRpdj5cbiAgICA8aDM+XG4gICAgICAgIERldGFpbHNcbiAgICA8L2gzPlxuICAgIDxwPlxuICAgICAgICB7QGh0bWwgdGV4dH1cbiAgICAgICAgPGEgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXJcIiBocmVmPVwie3VybH1cIj5cbiAgICAgICAgICAgIDxUZXh0QW5pbWF0aW9uIHRleHQ9e2BWaWV3IFdlYnNpdGVgfSAvPlxuICAgICAgICA8L2E+XG4gICAgPC9wPlxuPC9kaXY+XG4iLCI8c2NyaXB0PlxuaW1wb3J0IHsgZmFkZSwgZmx5IH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nXG5leHBvcnQgbGV0IGltYWdlcztcblxuXG5sZXQgU1RBVEUgPSB7XG4gICAgaW1hZ2VzOiBpbWFnZXNcbn1cblxuZnVuY3Rpb24gc3dpdGNoU2xpZGVzKGtleSkge1xuICAgIFxuICAgIFNUQVRFLmltYWdlcy5mb3JFYWNoKGltZyA9PiB7XG4gICAgICAgIGlmKGtleSA9PT0gaW1nLmtleSkge1xuICAgICAgICAgICAgaW1nLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbWcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfSlcblxuICAgIFNUQVRFID0gey4uLlNUQVRFfTtcbn1cblxuZnVuY3Rpb24gdmlld05leHRTbGlkZSgpIHtcbiAgICBsZXQgY3VycmVudFNsaWRlID0gZmluZEN1cnJlbnRTbGlkZSgpO1xuICAgIGxldCBuZXh0U2xpZGUgPSBjdXJyZW50U2xpZGUgIT09IG51bGwgPyBjdXJyZW50U2xpZGUgKyAxIDogbnVsbDtcbiAgICBcbiAgICBpZihuZXh0U2xpZGUgIT09IG51bGwpIFNUQVRFLmltYWdlc1tjdXJyZW50U2xpZGVdLnZpc2libGUgPSBmYWxzZTtcblxuICAgIGlmKG5leHRTbGlkZSA8IFNUQVRFLmltYWdlcy5sZW5ndGgpIHtcbiAgICAgICAgU1RBVEUuaW1hZ2VzW25leHRTbGlkZV0udmlzaWJsZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgU1RBVEUuaW1hZ2VzWzBdLnZpc2libGUgPSB0cnVlO1xuICAgIH1cblxuICAgIFNUQVRFID0gey4uLlNUQVRFfTtcbn1cblxuZnVuY3Rpb24gdmlld1ByZXZpb3VzU2xpZGUoKSB7XG4gICAgbGV0IGN1cnJlbnRTbGlkZSA9IGZpbmRDdXJyZW50U2xpZGUoKTtcbiAgICBsZXQgcHJldlNsaWRlID0gY3VycmVudFNsaWRlICE9PSBudWxsID8gY3VycmVudFNsaWRlIC0gMSA6IG51bGw7XG4gICAgXG4gICAgaWYocHJldlNsaWRlICE9PSBudWxsKSBTVEFURS5pbWFnZXNbY3VycmVudFNsaWRlXS52aXNpYmxlID0gZmFsc2U7XG5cbiAgICBpZihwcmV2U2xpZGUgPiAtMSkge1xuICAgICAgICBTVEFURS5pbWFnZXNbcHJldlNsaWRlXS52aXNpYmxlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBTVEFURS5pbWFnZXNbU1RBVEUuaW1hZ2VzLmxlbmd0aCAtIDFdLnZpc2libGUgPSB0cnVlO1xuICAgIH1cblxuICAgIFNUQVRFID0gey4uLlNUQVRFfTtcbn1cblxuZnVuY3Rpb24gZmluZEN1cnJlbnRTbGlkZSgpIHtcbiAgICBpZighU1RBVEUuaW1hZ2VzLmxlbmd0aCkgcmV0dXJuIG51bGw7XG5cbiAgICBsZXQgY3VycmVudFNsaWRlSW5kZXg7XG5cbiAgICBTVEFURS5pbWFnZXMuZm9yRWFjaCgoaW1nLCBpKSA9PiB7XG4gICAgICAgIGlmKGltZy52aXNpYmxlKSBjdXJyZW50U2xpZGVJbmRleCA9IGk7XG4gICAgfSlcbiAgICBcbiAgICByZXR1cm4gY3VycmVudFNsaWRlSW5kZXg7XG59XG5cbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cbiAgICBAaW1wb3J0ICcuLi8uLi9zdHlsZXMvZ2xvYmFsLnZhcmlhYmxlcy5zY3NzJztcblxuICAgIC5jYXJvdXNlbC1jb250YWluZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgbWFyZ2luOiAyNXJlbSAwIDcwcmVtIDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtaW4taGVpZ2h0OiAyNTBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogYnJlYWtwb2ludChzbSkpIHtcbiAgICAgICAgLmNhcm91c2VsLWNvbnRhaW5lciB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDY1cmVtO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogODByZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogYnJlYWtwb2ludChtZCkpIHtcbiAgICAgICAgLmNhcm91c2VsLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMjByZW07XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA3NXJlbTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgLmJveCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgIGhlaWdodDogMzgwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ib3g6OmFmdGVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vYmFja2dyb3VuZC1pbWFnZXMvc28td2hpdGUucG5nJyk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDElO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgIGhlaWdodDogOSU7XG4gICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgICByaWdodDogLTVweDtcbiAgICAgICAgICAgIGJvdHRvbTogLTNweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ib3g6OmJlZm9yZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgIGhlaWdodDogOSU7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIHRvcDogLTNweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KG1kKSkge1xuICAgICAgICAuYm94IHtcbiAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGhlaWdodDogNTE2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLmJveDo6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobGcpKSB7XG4gICAgICAgIC5ib3gge1xuICAgICAgICAgICAgd2lkdGg6IDUwMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA2MTZweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5zbGlkZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDI1MHB4O1xuICAgICAgICBib3gtc2hhZG93OiAzcHggM3B4IDNweCBsaWdodGdyZXk7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgIC5zbGlkZSB7XG4gICAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgd2lkdGg6IDg4JTtcbiAgICAgICAgICAgIGhlaWdodDogODIlO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5zbGlkZSBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiB0b3A7ICBcbiAgICB9XG5cbiAgICBkaXYuY2lyY2xlcy1jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm90dG9tOiAtMzBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKSB7XG4gICAgICAgIGRpdi5jaXJjbGVzLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICByaWdodDowO1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBub25lO1xuICAgICAgICAgICAgbGVmdDogMTIlO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3Bhbi5jaXJjbGUge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTJweDtcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCBjb2xvcihwcmltYXJ5KTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBtYXJnaW46IDBweCAyMHB4IDAgMHB4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKSB7XG4gICAgICAgIHNwYW4uY2lyY2xlIHtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgICAgICAgICAgLyogYm9yZGVyOiAxcHggc29saWQgIzNCM0IzQjsgKi9cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KG1kKSkge1xuICAgICAgICBzcGFuLmNpcmNsZSB7XG4gICAgICAgICAgICB3aWR0aDogMTVweDtcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KGxnKSkge1xuICAgICAgICBzcGFuLmNpcmNsZSB7XG4gICAgICAgICAgICB3aWR0aDogMThweDtcbiAgICAgICAgICAgIGhlaWdodDogMThweDtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcblxuICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNwYW4uY2lyY2xlOjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHdpZHRoOiAxMTAlO1xuICAgICAgICBoZWlnaHQ6IDExMCU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogY29sb3IocHJpbWFyeSk7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2U7XG4gICAgfVxuXG4gICAgc3Bhbi5jaXJjbGUuYWN0aXZlOjpiZWZvcmUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIGJ1dHRvbi5uZXh0LCBidXR0b24uYmFjayB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBvcGFjaXR5OiAuMztcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2Utb3V0O1xuICAgIH1cblxuICAgIGJ1dHRvbi5uZXh0IHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LHJnYmEoMCwwLDAsLjY1KSAwLHJnYmEoMCwwLDAsMCkgMTAwJSkgcmdiYSgwLDAsMCwwKTtcbiAgICB9XG5cbiAgICBidXR0b24uYmFjayB7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCxyZ2JhKDAsMCwwLC42NSkgMCxyZ2JhKDAsMCwwLDApIDEwMCUpIHJnYmEoMCwwLDAsMClcbiAgICB9XG5cbiAgICBidXR0b24ubmV4dDpob3ZlciwgYnV0dG9uLmJhY2s6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIC5hcnJvdy1sZWZ0LCAuYXJyb3ctcmlnaHQge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICB0b3A6IGNhbGMoNTAlIC0gMTBweCk7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gLjJzIGVhc2Utb3V0O1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IC4ycztcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycyBlYXNlLW91dCAuMnM7XG4gICAgfVxuXG4gICAgLmFycm93LWxlZnQge1xuICAgICAgICBsZWZ0OiAyMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSkge1xuICAgICAgICAuYXJyb3ctbGVmdCB7XG4gICAgICAgICAgICByaWdodDogMzBweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5hcnJvdy1yaWdodCB7XG4gICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSkge1xuICAgICAgICAuYXJyb3ctcmlnaHQge1xuICAgICAgICAgICAgcmlnaHQ6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmFycm93LWxlZnQ6OmJlZm9yZSwgLmFycm93LXJpZ2h0OjpiZWZvcmUsIC5hcnJvdy1sZWZ0OjphZnRlciwgLmFycm93LXJpZ2h0OjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAycHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICBvcGFjaXR5OiAuNztcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMTAwJSAwO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiA1MCUgMTAwJSAwO1xuICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIC4xNXMgZWFzZS1vdXQ7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMTVzIGVhc2Utb3V0O1xuICAgIH1cblxuICAgIC5hcnJvdy1sZWZ0OjpiZWZvcmUsIC5hcnJvdy1sZWZ0OjphZnRlciB7XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cblxuXG4gICAgLmFycm93LWxlZnQ6OmJlZm9yZSB7XG4gICAgICAgIHRvcDogLTUwJTtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG5cbiAgICAuYmFjazpob3ZlciAuYXJyb3ctbGVmdDo6YmVmb3JlIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzBkZWcpXG4gICAgfVxuXG4gICAgLmFycm93LWxlZnQ6OmFmdGVyIHtcbiAgICAgICAgdG9wOiBjYWxjKC01MCUgKyAtMXB4KTtcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xuICAgIH1cblxuICAgIC5iYWNrOmhvdmVyIC5hcnJvdy1sZWZ0OjphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE1MGRlZylcbiAgICB9XG5cblxuICAgIC5hcnJvdy1yaWdodDo6YmVmb3JlIHtcbiAgICAgICAgdG9wOiAtNTAlO1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgfVxuXG4gICAgLm5leHQ6aG92ZXIgLmFycm93LXJpZ2h0OjpiZWZvcmUge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMzBkZWcpO1xuICAgIH1cblxuICAgIC5hcnJvdy1yaWdodDo6YWZ0ZXIge1xuICAgICAgICB0b3A6IGNhbGMoLTUwJSArIC0xcHgpO1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTM1ZGVnKTtcbiAgICB9XG5cbiAgICAubmV4dDpob3ZlciAuYXJyb3ctcmlnaHQ6OmFmdGVyIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTE1MGRlZyk7XG4gICAgfVxuXG48L3N0eWxlPlxuXG48ZGl2IGNsYXNzPVwiY2Fyb3VzZWwtY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImJveFwiPjwvZGl2PiBcbiAgICAgICAgeyNlYWNoIFNUQVRFLmltYWdlcyBhcyBpbWd9XG4gICAgICAgICAgICB7I2lmIGltZy52aXNpYmxlfVxuICAgICAgICAgICAgICAgIDxkaXYgdHJhbnNpdGlvbjpmbHl8bG9jYWw9XCJ7eyB4OiAtNDAsIGR1cmF0aW9uOiA4NTAgfX1cIiBjbGFzcz1cInNsaWRlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gYXJpYS1sYWJlbD1cImEgYnV0dG9uIHRoYXQgc2hvd3MgdGhlIHByZXZpb3VzIGltYWdlIGluIHRoZSBjYXJvdXNlbFwiIG9uOmNsaWNrPXsoKSA9PiB2aWV3UHJldmlvdXNTbGlkZSgpfSBjbGFzcz1cImJhY2tcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYXJyb3ctbGVmdFwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwie2ltZy5zcmN9XCIgYWx0PVwie2ltZy5hbHR9XCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gYXJpYS1sYWJlbD1cImEgYnV0dG9uIHRoYXQgc2hvd3MgdGhlIG5leHQgaW1hZ2UgaW4gdGhlIGNhcm91c2VsXCIgb246Y2xpY2s9eygpID0+IHZpZXdOZXh0U2xpZGUoKX0gY2xhc3M9XCJuZXh0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImFycm93LXJpZ2h0XCI+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIHsvZWFjaH1cbiAgICA8ZGl2IGNsYXNzPVwiY2lyY2xlcy1jb250YWluZXJcIj5cbiAgICAgICAgeyNlYWNoIFNUQVRFLmltYWdlcyBhcyBpbWcsIGl9XG4gICAgICAgICAgICA8c3BhbiBcbiAgICAgICAgICAgICAgICBvbjpjbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2hTbGlkZXMoaW1nLmtleSlcbiAgICAgICAgICAgICAgICB9fSBcbiAgICAgICAgICAgICAgICBjbGFzcz1cImNpcmNsZSB7aW1nLnZpc2libGUgPyAnYWN0aXZlJyA6ICcnfVwiXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cImEgYnV0dG9uIHRvIGdvIHRvIGEgc3BlY2lmaWMgaW1hZ2UgaW4gdGhlIGNhcm91c2VsXCJcbiAgICAgICAgICAgID48L3NwYW4+XG4gICAgICAgIHsvZWFjaH1cbiAgICA8L2Rpdj5cbjwvZGl2PiIsIjxzY3JpcHQ+XG5leHBvcnQgbGV0IHNraWxscztcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cbiAgICBAaW1wb3J0ICcuLi8uLi9zdHlsZXMvZ2xvYmFsLnZhcmlhYmxlcy5zY3NzJztcblxuICAgIGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICAgIFxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgZGl2e1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXJlbTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIFxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKXtcbiAgICAgICAgaDMge1xuICAgICAgICAgICAgd2lkdGg6IDE4JTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobWQpKXtcbiAgICAgICAgaDMge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyM3JlbTtcbiAgICAgICAgICAgIHdpZHRoOiAyMCU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1bC5za2lsbHN7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAxMHJlbTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgIHVsLnNraWxsc3tcbiAgICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1bC5za2lsbHM6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjZTZlN2U4O1xuICAgICAgICBvcGFjaXR5OiAuNDtcbiAgICB9XG4gICAgXG4gICAgbGkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgZm9udC1zaXplOiAxM3JlbTtcbiAgICAgICAgY29sb3I6ICM1ODU5NWI7XG4gICAgICAgIG1hcmdpbjogMHJlbSAwcmVtIDI1cmVtIDByZW07XG4gICAgICAgIHBhZGRpbmc6IDByZW0gMHJlbSAwcmVtIDByZW07XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtMnB4O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgfVxuXG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KG1kKSl7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThyZW07XG4gICAgICAgICAgICBtYXJnaW46IDByZW0gMHJlbSAzNXJlbSAwcmVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDByZW07XG4gICAgfVxuXG4gICAgbGk6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICB3aWR0aDogN3B4O1xuICAgICAgICBoZWlnaHQ6IDdweDtcbiAgICAgICAgYmFja2dyb3VuZDogIzU4NTk1YjtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHJlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwJVxuICAgIH1cblxuPC9zdHlsZT5cblxuPGRpdj5cbiAgICA8aDM+XG4gICAgICAgIFRoZSBUZWNoXG4gICAgPC9oMz5cbiAgICAgICAgPHVsIGNsYXNzPVwic2tpbGxzXCI+XG4gICAgICAgICAgICB7I2VhY2ggc2tpbGxzIGFzIHNraWxsfVxuICAgICAgICAgICAgICAgIDxsaT57c2tpbGx9PC9saT5cbiAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgPC91bD5cbjwvZGl2PiIsIjxzY3JpcHQ+XG5pbXBvcnQgUGFnZVRpdGxlIGZyb20gJy4uL2NvbXBvbmVudHMvcHJvamVjdC1kZXRhaWwtY29tcG9uZW50cy9QYWdlVGl0bGUuc3ZlbHRlJztcbmltcG9ydCBEZXNjcmlwdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL3Byb2plY3QtZGV0YWlsLWNvbXBvbmVudHMvRGVzY3JpcHRpb24uc3ZlbHRlJztcbmltcG9ydCBDYXJvdXNlbCBmcm9tICcuLi9jb21wb25lbnRzL3Byb2plY3QtZGV0YWlsLWNvbXBvbmVudHMvQ2Fyb3VzZWwuc3ZlbHRlJztcbmltcG9ydCBTa2lsbHMgZnJvbSAnLi4vY29tcG9uZW50cy9wcm9qZWN0LWRldGFpbC1jb21wb25lbnRzL1NraWxscy5zdmVsdGUnO1xuXG5leHBvcnQgbGV0IFNUQVRFO1xuXG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG4gICAgQGltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbC52YXJpYWJsZXMuc2Nzcyc7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBicmVha3BvaW50KHNtKSl7XG4gICAgICAgIC5pbm5lci1jb250YWluZXIge1xuICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogYnJlYWtwb2ludChzbSkpe1xuICAgICAgICAucHJvamVjdC1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEyJTtcbiAgICAgICAgICAgIG1hcmdpbjogNTByZW0gMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSAobWluLXdpZHRoOiBicmVha3BvaW50KG1kKSkge1xuICAgICAgICAucHJvamVjdC1kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBtYXJnaW46IDYwcmVtIDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmN0YSB7XG4gICAgICAgIG1hcmdpbjogNjByZW0gMDtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogYnJlYWtwb2ludChzbSkpIHtcbiAgICAgICAgLmN0YSB7XG4gICAgICAgICAgICBtYXJnaW46IDc1cmVtIDA7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMTUlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQobWQpKSB7XG4gICAgICAgIC5jdGEge1xuICAgICAgICAgICAgbWFyZ2luOiA4NXJlbSAwO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDE3JTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jdGEgYSB7XG4gICAgICAgIGNvbG9yOiAjNTg1OTViO1xuICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgIH1cblxuICAgIC5jdGEgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IC43NTtcbiAgICB9XG5cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogYnJlYWtwb2ludChtZCkpIHtcbiAgICAgICAgLmN0YSBhIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG4gICAgLnNraWxscy1jb250YWluZXIge1xuICAgICAgICBtYXJnaW46IDQwcmVtIDA7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IGJyZWFrcG9pbnQoc20pKSB7XG4gICAgICAgIHNlY3Rpb24ge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMiU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnByb2plY3QtZGV0YWlsIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNjBweFxuICAgIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntTVEFURS5tZXRhVGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cblxuPGRpdiBjbGFzcz1cInByb2plY3QtZGV0YWlsXCI+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgICA8UGFnZVRpdGxlIHRpdGxlPXtTVEFURS50aXRsZX0gLz5cbiAgICAgICAgPGRpdiBjbGFzcz1cImlubmVyLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPENhcm91c2VsIGltYWdlcz17U1RBVEUuaW1hZ2VzfS8+XG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz1cInByb2plY3QtZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24gdGV4dD17U1RBVEUuZGVzY3JpcHRpb259IHVybD17U1RBVEUudXJsfSAvPiAgXG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz1cInNraWxscy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8U2tpbGxzIHNraWxscz17U1RBVEUuc2tpbGxzfS8+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz1cImN0YVwiPlxuICAgICAgICAgICAgICAgIDxhIGhyZWY9e1NUQVRFLnVybH0gcmVsPVwibm9vcGVuZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIj5DaGVjayBUaGUgU2l0ZSE8L2E+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1QkErSmEsR0FBSzs7O3VCQUNILEdBQUs7Ozs7Ozs7Ozs7dUNBRFAsR0FBSzs7Ozs7eUNBQ0gsR0FBSzs7Ozs7Ozs7Ozs7Z0ZBRmEsR0FBUTs7Ozs7Ozs7Ozs7Ozs7O3VEQUM1QixHQUFLO3VEQUNILEdBQUs7OzRHQUZhLEdBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0E3SjlCLEtBQUssZ0JBQUUsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JDb0l1QixHQUFHOzs7Ozs7Ozs7Ozs7Ozt1QkFEckMsR0FBSTs7Ozs7OzsyREFBSixHQUFJOzs7Z0NBQzhCLEdBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BcEl6QyxJ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
