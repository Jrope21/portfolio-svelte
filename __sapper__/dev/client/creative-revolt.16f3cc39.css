@media screen and (min-width: 40em){.inner-container.svelte-1atmsgu{width:90%;margin:0 auto}}@media screen and (min-width: 40em){.project-description.svelte-1atmsgu{padding-left:12%;margin:50rem 0}}@media(min-width: 64em){.project-description.svelte-1atmsgu{margin:60rem 0}}.cta.svelte-1atmsgu{margin:60rem 0}@media(min-width: 40em){.cta.svelte-1atmsgu{margin:75rem 0;margin-left:15%}}@media(min-width: 64em){.cta.svelte-1atmsgu{margin:85rem 0;margin-left:17%}}.cta.svelte-1atmsgu a.svelte-1atmsgu{color:#58595b;font-size:18px;font-weight:600;font-style:italic;opacity:1;transition:all .3s ease}.cta.svelte-1atmsgu a.svelte-1atmsgu:hover{opacity:.75}@media(min-width: 64em){.cta.svelte-1atmsgu a.svelte-1atmsgu{font-size:26px;font-weight:800}}.skills-container.svelte-1atmsgu{margin:40rem 0}@media(min-width: 40em){section.svelte-1atmsgu{padding-left:12%}}.project-detail.svelte-1atmsgu{margin-bottom:60px}
@media screen and (min-width: 40em){}@media screen and (min-width: 40em){}@media(min-width: 64em){}@media(min-width: 40em){}@media(min-width: 64em){}@media(min-width: 64em){}@media(min-width: 40em){}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */