import { S as SvelteComponentDev, i as init, s as safe_not_equal, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, d as detach, g as attr, h as add_location, j as insert, k as append, J as set_data, n as noop, N as HtmlTag, z as mount_component, u as transition_in, x as transition_out, A as destroy_component, B as empty, l as listen, v as add_render_callback, P as create_bidirectional_transition, H as run_all, C as group_outros, D as check_outros, O as destroy_each } from './index.86fc6f69.js';
import { f as fly } from './index.60cd3d27.js';
import { T as TextAnimation } from './TextAnimation.d7718a5d.js';

/* src/components/project-detail/PageTitle.svelte generated by Svelte v3.9.1 */

const file = "src/components/project-detail/PageTitle.svelte";

function create_fragment(ctx) {
	var div1, div0, h1, t0, t1, span, t2, div0_class_value;

	return {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text(ctx.title);
			t1 = space();
			span = element("span");
			t2 = text(ctx.title);
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			h1 = claim_element(div0_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, ctx.title);
			h1_nodes.forEach(detach);
			t1 = claim_text(div0_nodes, "\n        ");

			span = claim_element(div0_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t2 = claim_text(span_nodes, ctx.title);
			span_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h1, "class", "svelte-zi14ke");
			add_location(h1, file, 182, 8, 4059);
			attr(span, "class", "svelte-zi14ke");
			add_location(span, file, 183, 8, 4084);
			attr(div0, "class", div0_class_value = "title-container " + ctx.sidePage + " svelte-zi14ke");
			add_location(div0, file, 181, 4, 4010);
			attr(div1, "class", "page-header svelte-zi14ke");
			add_location(div1, file, 180, 0, 3980);
		},

		m: function mount(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			append(div0, h1);
			append(h1, t0);
			append(div0, t1);
			append(div0, span);
			append(span, t2);
		},

		p: function update(changed, ctx) {
			if (changed.title) {
				set_data(t0, ctx.title);
				set_data(t2, ctx.title);
			}

			if ((changed.sidePage) && div0_class_value !== (div0_class_value = "title-container " + ctx.sidePage + " svelte-zi14ke")) {
				attr(div0, "class", div0_class_value);
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div1);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title, sidePage } = $$props;
// sidePage should be set to 'side-page' to toggle class

	const writable_props = ['title', 'sidePage'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<PageTitle> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('title' in $$props) $$invalidate('title', title = $$props.title);
		if ('sidePage' in $$props) $$invalidate('sidePage', sidePage = $$props.sidePage);
	};

	return { title, sidePage };
}

class PageTitle extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["title", "sidePage"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.title === undefined && !('title' in props)) {
			console.warn("<PageTitle> was created without expected prop 'title'");
		}
		if (ctx.sidePage === undefined && !('sidePage' in props)) {
			console.warn("<PageTitle> was created without expected prop 'sidePage'");
		}
	}

	get title() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get sidePage() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set sidePage(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail/Description.svelte generated by Svelte v3.9.1 */

const file$1 = "src/components/project-detail/Description.svelte";

function create_fragment$1(ctx) {
	var div, h3, t0, t1, p, html_tag, t2, a, current;

	var textanimation = new TextAnimation({
		props: { text: `View Website` },
		$$inline: true
	});

	return {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("Details");
			t1 = space();
			p = element("p");
			t2 = space();
			a = element("a");
			textanimation.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			h3 = claim_element(div_nodes, "H3", { class: true }, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "Details");
			h3_nodes.forEach(detach);
			t1 = claim_text(div_nodes, "\n    ");

			p = claim_element(div_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "\n        ");

			a = claim_element(p_nodes, "A", { target: true, href: true, class: true }, false);
			var a_nodes = children(a);

			textanimation.$$.fragment.l(a_nodes);
			a_nodes.forEach(detach);
			p_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h3, "class", "svelte-1mkq4qc");
			add_location(h3, file$1, 146, 4, 3212);
			html_tag = new HtmlTag(ctx.text, t2);
			attr(a, "target", "_blank");
			attr(a, "href", ctx.url);
			attr(a, "class", "svelte-1mkq4qc");
			add_location(a, file$1, 151, 8, 3280);
			attr(p, "class", "svelte-1mkq4qc");
			add_location(p, file$1, 149, 4, 3247);
			attr(div, "class", "svelte-1mkq4qc");
			add_location(div, file$1, 145, 0, 3202);
		},

		m: function mount(target, anchor) {
			insert(target, div, anchor);
			append(div, h3);
			append(h3, t0);
			append(div, t1);
			append(div, p);
			html_tag.m(p);
			append(p, t2);
			append(p, a);
			mount_component(textanimation, a, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if (!current || changed.text) {
				html_tag.p(ctx.text);
			}

			if (!current || changed.url) {
				attr(a, "href", ctx.url);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(textanimation.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(textanimation.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(div);
			}

			destroy_component(textanimation);
		}
	};
}

function instance$1($$self, $$props, $$invalidate) {
	let { text, url } = $$props;

	const writable_props = ['text', 'url'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Description> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('text' in $$props) $$invalidate('text', text = $$props.text);
		if ('url' in $$props) $$invalidate('url', url = $$props.url);
	};

	return { text, url };
}

class Description extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, ["text", "url"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.text === undefined && !('text' in props)) {
			console.warn("<Description> was created without expected prop 'text'");
		}
		if (ctx.url === undefined && !('url' in props)) {
			console.warn("<Description> was created without expected prop 'url'");
		}
	}

	get text() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get url() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set url(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail/Carousel.svelte generated by Svelte v3.9.1 */

const file$2 = "src/components/project-detail/Carousel.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.img = list[i];
	child_ctx.i = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.img = list[i];
	return child_ctx;
}

// (436:12) {#if img.visible}
function create_if_block(ctx) {
	var div, button0, span0, t0, img, img_src_value, img_alt_value, t1, button1, span1, div_transition, current, dispose;

	return {
		c: function create() {
			div = element("div");
			button0 = element("button");
			span0 = element("span");
			t0 = space();
			img = element("img");
			t1 = space();
			button1 = element("button");
			span1 = element("span");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			button0 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true }, false);
			var button0_nodes = children(button0);

			span0 = claim_element(button0_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			span0_nodes.forEach(detach);
			button0_nodes.forEach(detach);
			t0 = claim_text(div_nodes, "\n                    ");

			img = claim_element(div_nodes, "IMG", { src: true, alt: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach);
			t1 = claim_text(div_nodes, "\n                    ");

			button1 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true }, false);
			var button1_nodes = children(button1);

			span1 = claim_element(button1_nodes, "SPAN", { class: true }, false);
			var span1_nodes = children(span1);

			span1_nodes.forEach(detach);
			button1_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(span0, "class", "arrow-left svelte-1dkrydu");
			add_location(span0, file$2, 438, 24, 8981);
			attr(button0, "aria-label", "a button that shows the previous image in the carousel");
			attr(button0, "class", "back svelte-1dkrydu");
			add_location(button0, file$2, 437, 20, 8830);
			attr(img, "src", img_src_value = ctx.img.src);
			attr(img, "alt", img_alt_value = ctx.img.alt);
			attr(img, "class", "svelte-1dkrydu");
			add_location(img, file$2, 440, 20, 9064);
			attr(span1, "class", "arrow-right svelte-1dkrydu");
			add_location(span1, file$2, 442, 24, 9265);
			attr(button1, "aria-label", "a button that shows the next image in the carousel");
			attr(button1, "class", "next svelte-1dkrydu");
			add_location(button1, file$2, 441, 20, 9122);
			attr(div, "class", "slide svelte-1dkrydu");
			add_location(div, file$2, 436, 16, 8739);

			dispose = [
				listen(button0, "click", ctx.click_handler),
				listen(button1, "click", ctx.click_handler_1)
			];
		},

		m: function mount(target, anchor) {
			insert(target, div, anchor);
			append(div, button0);
			append(button0, span0);
			append(div, t0);
			append(div, img);
			append(div, t1);
			append(div, button1);
			append(button1, span1);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.STATE) && img_src_value !== (img_src_value = ctx.img.src)) {
				attr(img, "src", img_src_value);
			}

			if ((!current || changed.STATE) && img_alt_value !== (img_alt_value = ctx.img.alt)) {
				attr(img, "alt", img_alt_value);
			}
		},

		i: function intro(local) {
			if (current) return;
			if (local) {
				add_render_callback(() => {
					if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, true);
					div_transition.run(1);
				});
			}

			current = true;
		},

		o: function outro(local) {
			if (local) {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, false);
				div_transition.run(0);
			}

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(div);
				if (div_transition) div_transition.end();
			}

			run_all(dispose);
		}
	};
}

// (435:8) {#each STATE.images as img}
function create_each_block_1(ctx) {
	var if_block_anchor;

	var if_block = (ctx.img.visible) && create_if_block(ctx);

	return {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
		},

		p: function update(changed, ctx) {
			if (ctx.img.visible) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach(if_block_anchor);
			}
		}
	};
}

// (449:8) {#each STATE.images as img, i}
function create_each_block(ctx) {
	var span, span_class_value, dispose;

	function click_handler_2() {
		return ctx.click_handler_2(ctx);
	}

	return {
		c: function create() {
			span = element("span");
			this.h();
		},

		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true, "aria-label": true }, false);
			var span_nodes = children(span);

			span_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(span, "class", span_class_value = "circle " + (ctx.img.visible ? 'active' : '') + " svelte-1dkrydu");
			attr(span, "aria-label", "a button to go to a specific image in the carousel");
			add_location(span, file$2, 449, 12, 9473);
			dispose = listen(span, "click", click_handler_2);
		},

		m: function mount(target, anchor) {
			insert(target, span, anchor);
		},

		p: function update(changed, new_ctx) {
			ctx = new_ctx;
			if ((changed.STATE) && span_class_value !== (span_class_value = "circle " + (ctx.img.visible ? 'active' : '') + " svelte-1dkrydu")) {
				attr(span, "class", span_class_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(span);
			}

			dispose();
		}
	};
}

function create_fragment$2(ctx) {
	var div2, div0, t0, t1, div1;

	var each_value_1 = ctx.STATE.images;

	var each_blocks_1 = [];

	for (var i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	var each_value = ctx.STATE.images;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();

			for (var i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t1 = space();
			div1 = element("div");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach);
			t0 = claim_text(div2_nodes, " \n        ");

			for (var i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div2_nodes);
			}

			t1 = claim_text(div2_nodes, "\n    ");

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(div0, "class", "box svelte-1dkrydu");
			add_location(div0, file$2, 433, 4, 8632);
			attr(div1, "class", "circles-container svelte-1dkrydu");
			add_location(div1, file$2, 447, 4, 9390);
			attr(div2, "class", "carousel-container svelte-1dkrydu");
			add_location(div2, file$2, 432, 0, 8595);
		},

		m: function mount(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t0);

			for (var i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div2, null);
			}

			append(div2, t1);
			append(div2, div1);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}
		},

		p: function update(changed, ctx) {
			if (changed.STATE) {
				each_value_1 = ctx.STATE.images;

				for (var i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(changed, child_ctx);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div2, t1);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}
				each_blocks_1.length = each_value_1.length;
			}

			if (changed.STATE) {
				each_value = ctx.STATE.images;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div2);
			}

			destroy_each(each_blocks_1, detaching);

			destroy_each(each_blocks, detaching);
		}
	};
}

function instance$2($$self, $$props, $$invalidate) {
	let { images } = $$props;


let STATE = {
    images: images
};

function switchSlides(key) {
    
    STATE.images.forEach(img => {
        if(key === img.key) {
            img.visible = true;
            
        } else {
            img.visible = false;
        }
    });

    $$invalidate('STATE', STATE = {...STATE});
}

function viewNextSlide() {
    let currentSlide = findCurrentSlide();
    let nextSlide = currentSlide !== null ? currentSlide + 1 : null;
    
    if(nextSlide !== null) { STATE.images[currentSlide].visible = false; $$invalidate('STATE', STATE); }

    if(nextSlide < STATE.images.length) {
        STATE.images[nextSlide].visible = true; $$invalidate('STATE', STATE);
    } else {
        STATE.images[0].visible = true; $$invalidate('STATE', STATE);
    }

    $$invalidate('STATE', STATE = {...STATE});
}

function viewPreviousSlide() {
    let currentSlide = findCurrentSlide();
    let prevSlide = currentSlide !== null ? currentSlide - 1 : null;
    
    if(prevSlide !== null) { STATE.images[currentSlide].visible = false; $$invalidate('STATE', STATE); }

    if(prevSlide > -1) {
        STATE.images[prevSlide].visible = true; $$invalidate('STATE', STATE);
    } else {
        STATE.images[STATE.images.length - 1].visible = true; $$invalidate('STATE', STATE);
    }

    $$invalidate('STATE', STATE = {...STATE});
}

function findCurrentSlide() {
    if(!STATE.images.length) return null;

    let currentSlideIndex;

    STATE.images.forEach((img, i) => {
        if(img.visible) currentSlideIndex = i;
    });
    
    return currentSlideIndex;
}

	const writable_props = ['images'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Carousel> was created with unknown prop '${key}'`);
	});

	function click_handler() {
		return viewPreviousSlide();
	}

	function click_handler_1() {
		return viewNextSlide();
	}

	function click_handler_2({ img }) {
	                    switchSlides(img.key);
	                }

	$$self.$set = $$props => {
		if ('images' in $$props) $$invalidate('images', images = $$props.images);
	};

	return {
		images,
		STATE,
		switchSlides,
		viewNextSlide,
		viewPreviousSlide,
		click_handler,
		click_handler_1,
		click_handler_2
	};
}

class Carousel extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, ["images"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.images === undefined && !('images' in props)) {
			console.warn("<Carousel> was created without expected prop 'images'");
		}
	}

	get images() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set images(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail/Skills.svelte generated by Svelte v3.9.1 */

const file$3 = "src/components/project-detail/Skills.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.skill = list[i];
	return child_ctx;
}

// (158:12) {#each skills as skill}
function create_each_block$1(ctx) {
	var li, t_value = ctx.skill + "", t;

	return {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},

		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true }, false);
			var li_nodes = children(li);

			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(li, "class", "svelte-175jctf");
			add_location(li, file$3, 158, 16, 3353);
		},

		m: function mount(target, anchor) {
			insert(target, li, anchor);
			append(li, t);
		},

		p: function update(changed, ctx) {
			if ((changed.skills) && t_value !== (t_value = ctx.skill + "")) {
				set_data(t, t_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(li);
			}
		}
	};
}

function create_fragment$3(ctx) {
	var div, h3, t0, t1, ul;

	var each_value = ctx.skills;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	return {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("The Tech");
			t1 = space();
			ul = element("ul");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			h3 = claim_element(div_nodes, "H3", { class: true }, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "The Tech");
			h3_nodes.forEach(detach);
			t1 = claim_text(div_nodes, "\n        ");

			ul = claim_element(div_nodes, "UL", { class: true }, false);
			var ul_nodes = children(ul);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h3, "class", "svelte-175jctf");
			add_location(h3, file$3, 153, 4, 3241);
			attr(ul, "class", "skills svelte-175jctf");
			add_location(ul, file$3, 156, 8, 3281);
			attr(div, "class", "svelte-175jctf");
			add_location(div, file$3, 152, 0, 3231);
		},

		m: function mount(target, anchor) {
			insert(target, div, anchor);
			append(div, h3);
			append(h3, t0);
			append(div, t1);
			append(div, ul);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},

		p: function update(changed, ctx) {
			if (changed.skills) {
				each_value = ctx.skills;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div);
			}

			destroy_each(each_blocks, detaching);
		}
	};
}

function instance$3($$self, $$props, $$invalidate) {
	let { skills } = $$props;

	const writable_props = ['skills'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Skills> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('skills' in $$props) $$invalidate('skills', skills = $$props.skills);
	};

	return { skills };
}

class Skills extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, ["skills"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.skills === undefined && !('skills' in props)) {
			console.warn("<Skills> was created without expected prop 'skills'");
		}
	}

	get skills() {
		throw new Error("<Skills>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skills(value) {
		throw new Error("<Skills>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/route-layouts/ProjectDetailTemplate.svelte generated by Svelte v3.9.1 */

const file$4 = "src/route-layouts/ProjectDetailTemplate.svelte";

function create_fragment$4(ctx) {
	var title_value, t0, div2, div1, t1, div0, t2, section0, t3, section1, t4, section2, a, t5, a_href_value, current;

	document.title = title_value = ctx.STATE.metaTitle;

	var pagetitle = new PageTitle({
		props: { title: ctx.STATE.title },
		$$inline: true
	});

	var carousel = new Carousel({
		props: { images: ctx.STATE.images },
		$$inline: true
	});

	var description = new Description({
		props: { text: ctx.STATE.description, url: ctx.STATE.url },
		$$inline: true
	});

	var skills = new Skills({
		props: { skills: ctx.STATE.skills },
		$$inline: true
	});

	return {
		c: function create() {
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			pagetitle.$$.fragment.c();
			t1 = space();
			div0 = element("div");
			carousel.$$.fragment.c();
			t2 = space();
			section0 = element("section");
			description.$$.fragment.c();
			t3 = space();
			section1 = element("section");
			skills.$$.fragment.c();
			t4 = space();
			section2 = element("section");
			a = element("a");
			t5 = text("Check The Site!");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n\n");

			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			pagetitle.$$.fragment.l(div1_nodes);
			t1 = claim_text(div1_nodes, "\n        ");

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			carousel.$$.fragment.l(div0_nodes);
			t2 = claim_text(div0_nodes, "\n            ");

			section0 = claim_element(div0_nodes, "SECTION", { class: true }, false);
			var section0_nodes = children(section0);

			description.$$.fragment.l(section0_nodes);
			section0_nodes.forEach(detach);
			t3 = claim_text(div0_nodes, "\n            ");

			section1 = claim_element(div0_nodes, "SECTION", { class: true }, false);
			var section1_nodes = children(section1);

			skills.$$.fragment.l(section1_nodes);
			section1_nodes.forEach(detach);
			t4 = claim_text(div0_nodes, "\n            ");

			section2 = claim_element(div0_nodes, "SECTION", { class: true }, false);
			var section2_nodes = children(section2);

			a = claim_element(section2_nodes, "A", { href: true, target: true, class: true }, false);
			var a_nodes = children(a);

			t5 = claim_text(a_nodes, "Check The Site!");
			a_nodes.forEach(detach);
			section2_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(section0, "class", "project-description svelte-qg6d7p");
			add_location(section0, file$4, 140, 12, 3380);
			attr(section1, "class", "skills-container svelte-qg6d7p");
			add_location(section1, file$4, 143, 12, 3528);
			attr(a, "href", a_href_value = ctx.STATE.url);
			attr(a, "target", "_blank");
			attr(a, "class", "svelte-qg6d7p");
			add_location(a, file$4, 147, 16, 3684);
			attr(section2, "class", "cta svelte-qg6d7p");
			add_location(section2, file$4, 146, 12, 3646);
			attr(div0, "class", "inner-container svelte-qg6d7p");
			add_location(div0, file$4, 138, 8, 3292);
			attr(div1, "class", "container svelte-qg6d7p");
			add_location(div1, file$4, 136, 4, 3218);
			attr(div2, "class", "project-detail svelte-qg6d7p");
			add_location(div2, file$4, 135, 0, 3185);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div2, anchor);
			append(div2, div1);
			mount_component(pagetitle, div1, null);
			append(div1, t1);
			append(div1, div0);
			mount_component(carousel, div0, null);
			append(div0, t2);
			append(div0, section0);
			mount_component(description, section0, null);
			append(div0, t3);
			append(div0, section1);
			mount_component(skills, section1, null);
			append(div0, t4);
			append(div0, section2);
			append(section2, a);
			append(a, t5);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.STATE) && title_value !== (title_value = ctx.STATE.metaTitle)) {
				document.title = title_value;
			}

			var pagetitle_changes = {};
			if (changed.STATE) pagetitle_changes.title = ctx.STATE.title;
			pagetitle.$set(pagetitle_changes);

			var carousel_changes = {};
			if (changed.STATE) carousel_changes.images = ctx.STATE.images;
			carousel.$set(carousel_changes);

			var description_changes = {};
			if (changed.STATE) description_changes.text = ctx.STATE.description;
			if (changed.STATE) description_changes.url = ctx.STATE.url;
			description.$set(description_changes);

			var skills_changes = {};
			if (changed.STATE) skills_changes.skills = ctx.STATE.skills;
			skills.$set(skills_changes);

			if ((!current || changed.STATE) && a_href_value !== (a_href_value = ctx.STATE.url)) {
				attr(a, "href", a_href_value);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(pagetitle.$$.fragment, local);

			transition_in(carousel.$$.fragment, local);

			transition_in(description.$$.fragment, local);

			transition_in(skills.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(pagetitle.$$.fragment, local);
			transition_out(carousel.$$.fragment, local);
			transition_out(description.$$.fragment, local);
			transition_out(skills.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(div2);
			}

			destroy_component(pagetitle);

			destroy_component(carousel);

			destroy_component(description);

			destroy_component(skills);
		}
	};
}

function instance$4($$self, $$props, $$invalidate) {
	

let { STATE } = $$props;

	const writable_props = ['STATE'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<ProjectDetailTemplate> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('STATE' in $$props) $$invalidate('STATE', STATE = $$props.STATE);
	};

	return { STATE };
}

class ProjectDetailTemplate extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, ["STATE"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.STATE === undefined && !('STATE' in props)) {
			console.warn("<ProjectDetailTemplate> was created without expected prop 'STATE'");
		}
	}

	get STATE() {
		throw new Error("<ProjectDetailTemplate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set STATE(value) {
		throw new Error("<ProjectDetailTemplate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { ProjectDetailTemplate as P };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
