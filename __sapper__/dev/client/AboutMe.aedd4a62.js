import { S as SvelteComponentDev, i as init, s as safe_not_equal, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, d as detach, g as attr, h as add_location, j as insert, k as append, n as noop } from './index.86fc6f69.js';

/* src/components/about/AboutMe.svelte generated by Svelte v3.9.1 */

const file = "src/components/about/AboutMe.svelte";

function create_fragment(ctx) {
	var div, h3, t0, t1, p, t2, strong0, t3, t4, strong1, t5, t6, strong2, t7, t8, strong3, t9, t10, strong4, t11, t12;

	return {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("Details");
			t1 = space();
			p = element("p");
			t2 = text("Hi There! I’m Josh, a Dallas-based ");
			strong0 = element("strong");
			t3 = text("Front End Developer");
			t4 = text(" with a knack for programing and design.\n         My ");
			strong1 = element("strong");
			t5 = text("passion");
			t6 = text(" comes from being a part of a solution that brings each aspect of the customer journey \n         together across both ");
			strong2 = element("strong");
			t7 = text("development and design");
			t8 = text(" processes.\n        I focus on creating ");
			strong3 = element("strong");
			t9 = text("production ready applications");
			t10 = text(" with my knowledge of the user experience, \n        and writing scalable ");
			strong4 = element("strong");
			t11 = text("clean code");
			t12 = text(".");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			h3 = claim_element(div_nodes, "H3", { class: true }, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "Details");
			h3_nodes.forEach(detach);
			t1 = claim_text(div_nodes, "\n    ");

			p = claim_element(div_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t2 = claim_text(p_nodes, "Hi There! I’m Josh, a Dallas-based ");

			strong0 = claim_element(p_nodes, "STRONG", {}, false);
			var strong0_nodes = children(strong0);

			t3 = claim_text(strong0_nodes, "Front End Developer");
			strong0_nodes.forEach(detach);
			t4 = claim_text(p_nodes, " with a knack for programing and design.\n         My ");

			strong1 = claim_element(p_nodes, "STRONG", {}, false);
			var strong1_nodes = children(strong1);

			t5 = claim_text(strong1_nodes, "passion");
			strong1_nodes.forEach(detach);
			t6 = claim_text(p_nodes, " comes from being a part of a solution that brings each aspect of the customer journey \n         together across both ");

			strong2 = claim_element(p_nodes, "STRONG", {}, false);
			var strong2_nodes = children(strong2);

			t7 = claim_text(strong2_nodes, "development and design");
			strong2_nodes.forEach(detach);
			t8 = claim_text(p_nodes, " processes.\n        I focus on creating ");

			strong3 = claim_element(p_nodes, "STRONG", {}, false);
			var strong3_nodes = children(strong3);

			t9 = claim_text(strong3_nodes, "production ready applications");
			strong3_nodes.forEach(detach);
			t10 = claim_text(p_nodes, " with my knowledge of the user experience, \n        and writing scalable ");

			strong4 = claim_element(p_nodes, "STRONG", {}, false);
			var strong4_nodes = children(strong4);

			t11 = claim_text(strong4_nodes, "clean code");
			strong4_nodes.forEach(detach);
			t12 = claim_text(p_nodes, ".");
			p_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h3, "class", "svelte-1b7l8lk");
			add_location(h3, file, 80, 4, 1272);
			add_location(strong0, file, 84, 43, 1354);
			add_location(strong1, file, 85, 12, 1443);
			add_location(strong2, file, 86, 30, 1585);
			add_location(strong3, file, 87, 28, 1664);
			add_location(strong4, file, 88, 29, 1783);
			attr(p, "class", "svelte-1b7l8lk");
			add_location(p, file, 83, 4, 1307);
			attr(div, "class", "svelte-1b7l8lk");
			add_location(div, file, 79, 0, 1262);
		},

		m: function mount(target, anchor) {
			insert(target, div, anchor);
			append(div, h3);
			append(h3, t0);
			append(div, t1);
			append(div, p);
			append(p, t2);
			append(p, strong0);
			append(strong0, t3);
			append(p, t4);
			append(p, strong1);
			append(strong1, t5);
			append(p, t6);
			append(p, strong2);
			append(strong2, t7);
			append(p, t8);
			append(p, strong3);
			append(strong3, t9);
			append(p, t10);
			append(p, strong4);
			append(strong4, t11);
			append(p, t12);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div);
			}
		}
	};
}

class AboutMe extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export { AboutMe as A };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWJvdXRNZS5hZWRkNGE2Mi5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
