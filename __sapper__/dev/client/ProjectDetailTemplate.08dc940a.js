import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, k as space, c as claim_element, a as children, l as claim_text, b as detach_dev, m as claim_space, f as attr_dev, g as add_location, h as insert_dev, j as append_dev, z as set_data_dev, n as noop, T as TextAnimation, p as create_component, q as claim_component, r as mount_component, u as transition_in, w as transition_out, x as destroy_component, H as HtmlTag, A as validate_each_argument, F as fade, G as fly, I as empty, B as group_outros, C as check_outros, J as listen_dev, D as destroy_each, K as add_render_callback, L as create_bidirectional_transition, M as run_all, E as query_selector_all } from './client.99e71906.js';

/* src/components/project-detail-components/PageTitle.svelte generated by Svelte v3.29.4 */

const file = "src/components/project-detail-components/PageTitle.svelte";

function create_fragment(ctx) {
	let div1;
	let div0;
	let h1;
	let t0;
	let t1;
	let span;
	let t2;
	let div0_class_value;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text(/*title*/ ctx[0]);
			t1 = space();
			span = element("span");
			t2 = text(/*title*/ ctx[0]);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*title*/ ctx[0]);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			span = claim_element(div0_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t2 = claim_text(span_nodes, /*title*/ ctx[0]);
			span_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "svelte-81w521");
			add_location(h1, file, 159, 8, 3992);
			attr_dev(span, "class", "svelte-81w521");
			add_location(span, file, 160, 8, 4017);
			attr_dev(div0, "class", div0_class_value = "title-container " + /*sidePage*/ ctx[1] + " svelte-81w521");
			add_location(div0, file, 158, 4, 3943);
			attr_dev(div1, "class", "page-header svelte-81w521");
			add_location(div1, file, 157, 0, 3913);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h1);
			append_dev(h1, t0);
			append_dev(div0, t1);
			append_dev(div0, span);
			append_dev(span, t2);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data_dev(t0, /*title*/ ctx[0]);
			if (dirty & /*title*/ 1) set_data_dev(t2, /*title*/ ctx[0]);

			if (dirty & /*sidePage*/ 2 && div0_class_value !== (div0_class_value = "title-container " + /*sidePage*/ ctx[1] + " svelte-81w521")) {
				attr_dev(div0, "class", div0_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("PageTitle", slots, []);
	let { title } = $$props, { sidePage } = $$props;
	const writable_props = ["title", "sidePage"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<PageTitle> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("sidePage" in $$props) $$invalidate(1, sidePage = $$props.sidePage);
	};

	$$self.$capture_state = () => ({ title, sidePage });

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("sidePage" in $$props) $$invalidate(1, sidePage = $$props.sidePage);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title, sidePage];
}

class PageTitle extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { title: 0, sidePage: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "PageTitle",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !("title" in props)) {
			console.warn("<PageTitle> was created without expected prop 'title'");
		}

		if (/*sidePage*/ ctx[1] === undefined && !("sidePage" in props)) {
			console.warn("<PageTitle> was created without expected prop 'sidePage'");
		}
	}

	get title() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get sidePage() {
		throw new Error("<PageTitle>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set sidePage(value) {
		throw new Error("<PageTitle>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Description.svelte generated by Svelte v3.29.4 */
const file$1 = "src/components/project-detail-components/Description.svelte";

function create_fragment$1(ctx) {
	let div;
	let h3;
	let t0;
	let t1;
	let p;
	let html_tag;
	let t2;
	let a;
	let textanimation;
	let current;

	textanimation = new TextAnimation({
			props: { text: `View Website` },
			$$inline: true
		});

	const block = {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("Details");
			t1 = space();
			p = element("p");
			t2 = space();
			a = element("a");
			create_component(textanimation.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "Details");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", { class: true });
			var p_nodes = children(p);
			t2 = claim_space(p_nodes);

			a = claim_element(p_nodes, "A", {
				target: true,
				rel: true,
				href: true,
				class: true
			});

			var a_nodes = children(a);
			claim_component(textanimation.$$.fragment, a_nodes);
			a_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-2p1ul8");
			add_location(h3, file$1, 128, 4, 3151);
			html_tag = new HtmlTag(t2);
			attr_dev(a, "target", "_blank");
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "href", /*url*/ ctx[1]);
			attr_dev(a, "class", "svelte-2p1ul8");
			add_location(a, file$1, 133, 8, 3219);
			attr_dev(p, "class", "svelte-2p1ul8");
			add_location(p, file$1, 131, 4, 3186);
			attr_dev(div, "class", "svelte-2p1ul8");
			add_location(div, file$1, 127, 0, 3141);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h3);
			append_dev(h3, t0);
			append_dev(div, t1);
			append_dev(div, p);
			html_tag.m(/*text*/ ctx[0], p);
			append_dev(p, t2);
			append_dev(p, a);
			mount_component(textanimation, a, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*text*/ 1) html_tag.p(/*text*/ ctx[0]);

			if (!current || dirty & /*url*/ 2) {
				attr_dev(a, "href", /*url*/ ctx[1]);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textanimation.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textanimation.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_component(textanimation);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Description", slots, []);
	let { text } = $$props, { url } = $$props;
	const writable_props = ["text", "url"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Description> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("url" in $$props) $$invalidate(1, url = $$props.url);
	};

	$$self.$capture_state = () => ({ text, url, TextAnimation });

	$$self.$inject_state = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("url" in $$props) $$invalidate(1, url = $$props.url);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [text, url];
}

class Description extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { text: 0, url: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Description",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*text*/ ctx[0] === undefined && !("text" in props)) {
			console.warn("<Description> was created without expected prop 'text'");
		}

		if (/*url*/ ctx[1] === undefined && !("url" in props)) {
			console.warn("<Description> was created without expected prop 'url'");
		}
	}

	get text() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set text(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get url() {
		throw new Error("<Description>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set url(value) {
		throw new Error("<Description>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Carousel.svelte generated by Svelte v3.29.4 */
const file$2 = "src/components/project-detail-components/Carousel.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	child_ctx[11] = i;
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[9] = list[i];
	return child_ctx;
}

// (389:12) {#if img.visible}
function create_if_block(ctx) {
	let div;
	let button0;
	let span0;
	let t0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t1;
	let button1;
	let span1;
	let div_transition;
	let current;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			button0 = element("button");
			span0 = element("span");
			t0 = space();
			img = element("img");
			t1 = space();
			button1 = element("button");
			span1 = element("span");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true });
			var button0_nodes = children(button0);
			span0 = claim_element(button0_nodes, "SPAN", { class: true });
			children(span0).forEach(detach_dev);
			button0_nodes.forEach(detach_dev);
			t0 = claim_space(div_nodes);
			img = claim_element(div_nodes, "IMG", { src: true, alt: true, class: true });
			t1 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { "aria-label": true, class: true });
			var button1_nodes = children(button1);
			span1 = claim_element(button1_nodes, "SPAN", { class: true });
			children(span1).forEach(detach_dev);
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span0, "class", "arrow-left svelte-a4yap0");
			add_location(span0, file$2, 391, 24, 8965);
			attr_dev(button0, "aria-label", "a button that shows the previous image in the carousel");
			attr_dev(button0, "class", "back svelte-a4yap0");
			add_location(button0, file$2, 390, 20, 8814);
			if (img.src !== (img_src_value = /*img*/ ctx[9].src)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = /*img*/ ctx[9].alt);
			attr_dev(img, "class", "svelte-a4yap0");
			add_location(img, file$2, 393, 20, 9048);
			attr_dev(span1, "class", "arrow-right svelte-a4yap0");
			add_location(span1, file$2, 395, 24, 9249);
			attr_dev(button1, "aria-label", "a button that shows the next image in the carousel");
			attr_dev(button1, "class", "next svelte-a4yap0");
			add_location(button1, file$2, 394, 20, 9106);
			attr_dev(div, "class", "slide svelte-a4yap0");
			add_location(div, file$2, 389, 16, 8723);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, button0);
			append_dev(button0, span0);
			append_dev(div, t0);
			append_dev(div, img);
			append_dev(div, t1);
			append_dev(div, button1);
			append_dev(button1, span1);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*click_handler*/ ctx[5], false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[6], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*STATE*/ 1 && img.src !== (img_src_value = /*img*/ ctx[9].src)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*STATE*/ 1 && img_alt_value !== (img_alt_value = /*img*/ ctx[9].alt)) {
				attr_dev(img, "alt", img_alt_value);
			}
		},
		i: function intro(local) {
			if (current) return;

			if (local) {
				add_render_callback(() => {
					if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, true);
					div_transition.run(1);
				});
			}

			current = true;
		},
		o: function outro(local) {
			if (local) {
				if (!div_transition) div_transition = create_bidirectional_transition(div, fly, { x: -40, duration: 850 }, false);
				div_transition.run(0);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (detaching && div_transition) div_transition.end();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(389:12) {#if img.visible}",
		ctx
	});

	return block;
}

// (388:8) {#each STATE.images as img}
function create_each_block_1(ctx) {
	let if_block_anchor;
	let if_block = /*img*/ ctx[9].visible && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (/*img*/ ctx[9].visible) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*STATE*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}
		},
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(388:8) {#each STATE.images as img}",
		ctx
	});

	return block;
}

// (402:8) {#each STATE.images as img, i}
function create_each_block(ctx) {
	let span;
	let span_class_value;
	let mounted;
	let dispose;

	function click_handler_2(...args) {
		return /*click_handler_2*/ ctx[7](/*img*/ ctx[9], ...args);
	}

	const block = {
		c: function create() {
			span = element("span");
			this.h();
		},
		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true, "aria-label": true });
			children(span).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", span_class_value = "circle " + (/*img*/ ctx[9].visible ? "active" : "") + " svelte-a4yap0");
			attr_dev(span, "aria-label", "a button to go to a specific image in the carousel");
			add_location(span, file$2, 402, 12, 9457);
		},
		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);

			if (!mounted) {
				dispose = listen_dev(span, "click", click_handler_2, false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;

			if (dirty & /*STATE*/ 1 && span_class_value !== (span_class_value = "circle " + (/*img*/ ctx[9].visible ? "active" : "") + " svelte-a4yap0")) {
				attr_dev(span, "class", span_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(span);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(402:8) {#each STATE.images as img, i}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let div2;
	let div0;
	let t0;
	let t1;
	let div1;
	let each_value_1 = /*STATE*/ ctx[0].images;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*STATE*/ ctx[0].images;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t0 = space();

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t1 = space();
			div1 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div2_nodes);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div2_nodes);
			}

			t1 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "box svelte-a4yap0");
			add_location(div0, file$2, 386, 4, 8616);
			attr_dev(div1, "class", "circles-container svelte-a4yap0");
			add_location(div1, file$2, 400, 4, 9374);
			attr_dev(div2, "class", "carousel-container svelte-a4yap0");
			add_location(div2, file$2, 385, 0, 8579);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div2, null);
			}

			append_dev(div2, t1);
			append_dev(div2, div1);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div1, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*viewNextSlide, STATE, viewPreviousSlide*/ 13) {
				each_value_1 = /*STATE*/ ctx[0].images;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div2, t1);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*STATE, switchSlides*/ 3) {
				each_value = /*STATE*/ ctx[0].images;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Carousel", slots, []);
	let { images } = $$props;
	let STATE = { images };

	function switchSlides(key) {
		STATE.images.forEach(img => {
			if (key === img.key) {
				img.visible = true;
			} else {
				img.visible = false;
			}
		});

		$$invalidate(0, STATE = { ...STATE });
	}

	function viewNextSlide() {
		let currentSlide = findCurrentSlide();
		let nextSlide = currentSlide !== null ? currentSlide + 1 : null;
		if (nextSlide !== null) $$invalidate(0, STATE.images[currentSlide].visible = false, STATE);

		if (nextSlide < STATE.images.length) {
			$$invalidate(0, STATE.images[nextSlide].visible = true, STATE);
		} else {
			$$invalidate(0, STATE.images[0].visible = true, STATE);
		}

		$$invalidate(0, STATE = { ...STATE });
	}

	function viewPreviousSlide() {
		let currentSlide = findCurrentSlide();
		let prevSlide = currentSlide !== null ? currentSlide - 1 : null;
		if (prevSlide !== null) $$invalidate(0, STATE.images[currentSlide].visible = false, STATE);

		if (prevSlide > -1) {
			$$invalidate(0, STATE.images[prevSlide].visible = true, STATE);
		} else {
			$$invalidate(0, STATE.images[STATE.images.length - 1].visible = true, STATE);
		}

		$$invalidate(0, STATE = { ...STATE });
	}

	function findCurrentSlide() {
		if (!STATE.images.length) return null;
		let currentSlideIndex;

		STATE.images.forEach((img, i) => {
			if (img.visible) currentSlideIndex = i;
		});

		return currentSlideIndex;
	}

	const writable_props = ["images"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Carousel> was created with unknown prop '${key}'`);
	});

	const click_handler = () => viewPreviousSlide();
	const click_handler_1 = () => viewNextSlide();

	const click_handler_2 = img => {
		switchSlides(img.key);
	};

	$$self.$$set = $$props => {
		if ("images" in $$props) $$invalidate(4, images = $$props.images);
	};

	$$self.$capture_state = () => ({
		fade,
		fly,
		images,
		STATE,
		switchSlides,
		viewNextSlide,
		viewPreviousSlide,
		findCurrentSlide
	});

	$$self.$inject_state = $$props => {
		if ("images" in $$props) $$invalidate(4, images = $$props.images);
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		STATE,
		switchSlides,
		viewNextSlide,
		viewPreviousSlide,
		images,
		click_handler,
		click_handler_1,
		click_handler_2
	];
}

class Carousel extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { images: 4 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Carousel",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*images*/ ctx[4] === undefined && !("images" in props)) {
			console.warn("<Carousel> was created without expected prop 'images'");
		}
	}

	get images() {
		throw new Error("<Carousel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set images(value) {
		throw new Error("<Carousel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/project-detail-components/Skills.svelte generated by Svelte v3.29.4 */

const file$3 = "src/components/project-detail-components/Skills.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (141:12) {#each skills as skill}
function create_each_block$1(ctx) {
	let li;
	let t_value = /*skill*/ ctx[1] + "";
	let t;

	const block = {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", "svelte-1e0gz6h");
			add_location(li, file$3, 141, 16, 3300);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*skills*/ 1 && t_value !== (t_value = /*skill*/ ctx[1] + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(141:12) {#each skills as skill}",
		ctx
	});

	return block;
}

function create_fragment$3(ctx) {
	let div;
	let h3;
	let t0;
	let t1;
	let ul;
	let each_value = /*skills*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("The Tech");
			t1 = space();
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "The Tech");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			ul = claim_element(div_nodes, "UL", { class: true });
			var ul_nodes = children(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-1e0gz6h");
			add_location(h3, file$3, 136, 4, 3188);
			attr_dev(ul, "class", "skills svelte-1e0gz6h");
			add_location(ul, file$3, 139, 8, 3228);
			attr_dev(div, "class", "svelte-1e0gz6h");
			add_location(div, file$3, 135, 0, 3178);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h3);
			append_dev(h3, t0);
			append_dev(div, t1);
			append_dev(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*skills*/ 1) {
				each_value = /*skills*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Skills", slots, []);
	let { skills } = $$props;
	const writable_props = ["skills"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Skills> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	$$self.$capture_state = () => ({ skills });

	$$self.$inject_state = $$props => {
		if ("skills" in $$props) $$invalidate(0, skills = $$props.skills);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [skills];
}

class Skills extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { skills: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Skills",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*skills*/ ctx[0] === undefined && !("skills" in props)) {
			console.warn("<Skills> was created without expected prop 'skills'");
		}
	}

	get skills() {
		throw new Error("<Skills>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set skills(value) {
		throw new Error("<Skills>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/route-layouts/ProjectDetailTemplate.svelte generated by Svelte v3.29.4 */
const file$4 = "src/route-layouts/ProjectDetailTemplate.svelte";

function create_fragment$4(ctx) {
	let title_value;
	let t0;
	let div2;
	let div1;
	let pagetitle;
	let t1;
	let div0;
	let carousel;
	let t2;
	let section0;
	let description;
	let t3;
	let section1;
	let skills;
	let t4;
	let section2;
	let a;
	let t5;
	let a_href_value;
	let current;
	document.title = title_value = /*STATE*/ ctx[0].metaTitle;

	pagetitle = new PageTitle({
			props: { title: /*STATE*/ ctx[0].title },
			$$inline: true
		});

	carousel = new Carousel({
			props: { images: /*STATE*/ ctx[0].images },
			$$inline: true
		});

	description = new Description({
			props: {
				text: /*STATE*/ ctx[0].description,
				url: /*STATE*/ ctx[0].url
			},
			$$inline: true
		});

	skills = new Skills({
			props: { skills: /*STATE*/ ctx[0].skills },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			create_component(pagetitle.$$.fragment);
			t1 = space();
			div0 = element("div");
			create_component(carousel.$$.fragment);
			t2 = space();
			section0 = element("section");
			create_component(description.$$.fragment);
			t3 = space();
			section1 = element("section");
			create_component(skills.$$.fragment);
			t4 = space();
			section2 = element("section");
			a = element("a");
			t5 = text("Check The Site!");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1yqoakg\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(pagetitle.$$.fragment, div1_nodes);
			t1 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(carousel.$$.fragment, div0_nodes);
			t2 = claim_space(div0_nodes);
			section0 = claim_element(div0_nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			claim_component(description.$$.fragment, section0_nodes);
			section0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			section1 = claim_element(div0_nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			claim_component(skills.$$.fragment, section1_nodes);
			section1_nodes.forEach(detach_dev);
			t4 = claim_space(div0_nodes);
			section2 = claim_element(div0_nodes, "SECTION", { class: true });
			var section2_nodes = children(section2);

			a = claim_element(section2_nodes, "A", {
				href: true,
				rel: true,
				target: true,
				class: true
			});

			var a_nodes = children(a);
			t5 = claim_text(a_nodes, "Check The Site!");
			a_nodes.forEach(detach_dev);
			section2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(section0, "class", "project-description svelte-dliy2h");
			add_location(section0, file$4, 125, 12, 3353);
			attr_dev(section1, "class", "skills-container svelte-dliy2h");
			add_location(section1, file$4, 128, 12, 3501);
			attr_dev(a, "href", a_href_value = /*STATE*/ ctx[0].url);
			attr_dev(a, "rel", "noopener");
			attr_dev(a, "target", "_blank");
			attr_dev(a, "class", "svelte-dliy2h");
			add_location(a, file$4, 132, 16, 3657);
			attr_dev(section2, "class", "cta svelte-dliy2h");
			add_location(section2, file$4, 131, 12, 3619);
			attr_dev(div0, "class", "inner-container svelte-dliy2h");
			add_location(div0, file$4, 123, 8, 3265);
			attr_dev(div1, "class", "container svelte-dliy2h");
			add_location(div1, file$4, 121, 4, 3191);
			attr_dev(div2, "class", "project-detail svelte-dliy2h");
			add_location(div2, file$4, 120, 0, 3158);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, div1);
			mount_component(pagetitle, div1, null);
			append_dev(div1, t1);
			append_dev(div1, div0);
			mount_component(carousel, div0, null);
			append_dev(div0, t2);
			append_dev(div0, section0);
			mount_component(description, section0, null);
			append_dev(div0, t3);
			append_dev(div0, section1);
			mount_component(skills, section1, null);
			append_dev(div0, t4);
			append_dev(div0, section2);
			append_dev(section2, a);
			append_dev(a, t5);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*STATE*/ 1) && title_value !== (title_value = /*STATE*/ ctx[0].metaTitle)) {
				document.title = title_value;
			}

			const pagetitle_changes = {};
			if (dirty & /*STATE*/ 1) pagetitle_changes.title = /*STATE*/ ctx[0].title;
			pagetitle.$set(pagetitle_changes);
			const carousel_changes = {};
			if (dirty & /*STATE*/ 1) carousel_changes.images = /*STATE*/ ctx[0].images;
			carousel.$set(carousel_changes);
			const description_changes = {};
			if (dirty & /*STATE*/ 1) description_changes.text = /*STATE*/ ctx[0].description;
			if (dirty & /*STATE*/ 1) description_changes.url = /*STATE*/ ctx[0].url;
			description.$set(description_changes);
			const skills_changes = {};
			if (dirty & /*STATE*/ 1) skills_changes.skills = /*STATE*/ ctx[0].skills;
			skills.$set(skills_changes);

			if (!current || dirty & /*STATE*/ 1 && a_href_value !== (a_href_value = /*STATE*/ ctx[0].url)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(pagetitle.$$.fragment, local);
			transition_in(carousel.$$.fragment, local);
			transition_in(description.$$.fragment, local);
			transition_in(skills.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(pagetitle.$$.fragment, local);
			transition_out(carousel.$$.fragment, local);
			transition_out(description.$$.fragment, local);
			transition_out(skills.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div2);
			destroy_component(pagetitle);
			destroy_component(carousel);
			destroy_component(description);
			destroy_component(skills);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("ProjectDetailTemplate", slots, []);
	let { STATE } = $$props;
	const writable_props = ["STATE"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProjectDetailTemplate> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	$$self.$capture_state = () => ({
		PageTitle,
		Description,
		Carousel,
		Skills,
		STATE
	});

	$$self.$inject_state = $$props => {
		if ("STATE" in $$props) $$invalidate(0, STATE = $$props.STATE);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [STATE];
}

class ProjectDetailTemplate extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, { STATE: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProjectDetailTemplate",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*STATE*/ ctx[0] === undefined && !("STATE" in props)) {
			console.warn("<ProjectDetailTemplate> was created without expected prop 'STATE'");
		}
	}

	get STATE() {
		throw new Error("<ProjectDetailTemplate>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set STATE(value) {
		throw new Error("<ProjectDetailTemplate>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { ProjectDetailTemplate as P };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
