'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var sirv = _interopDefault(require('sirv'));
var polka = _interopDefault(require('polka'));
var compression = _interopDefault(require('compression'));
var fs = _interopDefault(require('fs'));
var path = _interopDefault(require('path'));
var index = require('./index-037524ea.js');
var index$1 = require('./index-4a202b38.js');
var TextAnimation = require('./TextAnimation-e8b36ca7.js');
var experience = require('./experience-81a6914a.js');
require('./ProjectDetailTemplate-d822e67c.js');
var creativeRevolt = require('./creative-revolt-9edd2675.js');
var universityPark = require('./university-park-067d6ed8.js');
var stallion = require('./stallion-640ced6e.js');
var halcyon = require('./halcyon-e8667d28.js');
var about = require('./about-523e0237.js');
var Stream = _interopDefault(require('stream'));
var http = _interopDefault(require('http'));
var Url = _interopDefault(require('url'));
var https = _interopDefault(require('https'));
var zlib = _interopDefault(require('zlib'));

const subscriber_queue = [];
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */
function writable(value, start = index.noop) {
    let stop;
    const subscribers = [];
    function set(new_value) {
        if (index.safe_not_equal(value, new_value)) {
            value = new_value;
            if (stop) { // store is ready
                const run_queue = !subscriber_queue.length;
                for (let i = 0; i < subscribers.length; i += 1) {
                    const s = subscribers[i];
                    s[1]();
                    subscriber_queue.push(s, value);
                }
                if (run_queue) {
                    for (let i = 0; i < subscriber_queue.length; i += 2) {
                        subscriber_queue[i][0](subscriber_queue[i + 1]);
                    }
                    subscriber_queue.length = 0;
                }
            }
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = index.noop) {
        const subscriber = [run, invalidate];
        subscribers.push(subscriber);
        if (subscribers.length === 1) {
            stop = start(set) || index.noop;
        }
        run(value);
        return () => {
            const index = subscribers.indexOf(subscriber);
            if (index !== -1) {
                subscribers.splice(index, 1);
            }
            if (subscribers.length === 0) {
                stop();
                stop = null;
            }
        };
    }
    return { set, update, subscribe };
}

const CONTEXT_KEY = {};

const preload = () => ({});

/* src/routes/_error.svelte generated by Svelte v3.9.1 */

const css = {
	code: "h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}",
	map: "{\"version\":3,\"file\":\"_error.svelte\",\"sources\":[\"_error.svelte\"],\"sourcesContent\":[\"<script>\\n\\texport let status;\\n\\texport let error;\\n\\n\\tconst dev = \\\"development\\\" === 'development';\\n</script>\\n\\n<style>\\n\\th1, p {\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\n\\th1 {\\n\\t\\tfont-size: 2.8em;\\n\\t\\tfont-weight: 700;\\n\\t\\tmargin: 0 0 0.5em 0;\\n\\t}\\n\\n\\tp {\\n\\t\\tmargin: 1em auto;\\n\\t}\\n\\n\\t@media (min-width: 480px) {\\n\\t\\th1 {\\n\\t\\t\\tfont-size: 4em;\\n\\t\\t}\\n\\t}\\n</style>\\n\\n<svelte:head>\\n\\t<title>{status}</title>\\n</svelte:head>\\n\\n<h1>{status}</h1>\\n\\n<p>{error.message}</p>\\n\\n{#if dev && error.stack}\\n\\t<pre>{error.stack}</pre>\\n{/if}\\n\"],\"names\":[],\"mappings\":\"AAQC,gBAAE,CAAE,CAAC,cAAC,CAAC,AACN,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACpB,CAAC,AAED,CAAC,cAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,GAAG,AACf,CAAC,AACF,CAAC\"}"
};

const Error$1 = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { status, error } = $$props;

	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);

	$$result.css.add(css);

	return `${($$result.head += `<title>${index.escape(status)}</title>`, "")}

	<h1 class="svelte-8od9u6">${index.escape(status)}</h1>

	<p class="svelte-8od9u6">${index.escape(error.message)}</p>

	${  error.stack ? `<pre>${index.escape(error.stack)}</pre>` : `` }`;
});

/* src/node_modules/@sapper/internal/App.svelte generated by Svelte v3.9.1 */

const App = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	let { stores, error, status, segments, level0, level1 = null } = $$props;

	index.setContext(CONTEXT_KEY, stores);

	if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0) $$bindings.stores(stores);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.segments === void 0 && $$bindings.segments && segments !== void 0) $$bindings.segments(segments);
	if ($$props.level0 === void 0 && $$bindings.level0 && level0 !== void 0) $$bindings.level0(level0);
	if ($$props.level1 === void 0 && $$bindings.level1 && level1 !== void 0) $$bindings.level1(level1);

	return `


	${index.validate_component(Layout, 'Layout').$$render($$result, Object.assign({ segment: segments[0] }, level0.props), {}, {
		default: () => `
		${ error ? `${index.validate_component(Error$1, 'Error').$$render($$result, { error: error, status: status }, {}, {})}` : `${index.validate_component(((level1.component) || index.missing_component), 'svelte:component').$$render($$result, Object.assign(level1.props), {}, {})}` }
	`
	})}`;
});

// This file is generated by Sapper â€” do not edit it!

const ignore = [];

const components = [
	{
		js: () => new Promise(function (resolve) { resolve(require('./index-4a202b38.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:index.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./experience-81a6914a.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:experience.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./creative-revolt-9edd2675.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:projects/creative-revolt.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./university-park-067d6ed8.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:projects/university-park.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./stallion-640ced6e.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:projects/stallion.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./halcyon-e8667d28.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:projects/halcyon.svelte__"
	},
	{
		js: () => new Promise(function (resolve) { resolve(require('./about-523e0237.js')); }),
		css: "__SAPPER_CSS_PLACEHOLDER:about.svelte__"
	}
];

const routes = [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// experience.svelte
		pattern: /^\/experience\/?$/,
		parts: [
			{ i: 1 }
		]
	},

	{
		// projects/creative-revolt.svelte
		pattern: /^\/projects\/creative-revolt\/?$/,
		parts: [
			null,
			{ i: 2 }
		]
	},

	{
		// projects/university-park.svelte
		pattern: /^\/projects\/university-park\/?$/,
		parts: [
			null,
			{ i: 3 }
		]
	},

	{
		// projects/stallion.svelte
		pattern: /^\/projects\/stallion\/?$/,
		parts: [
			null,
			{ i: 4 }
		]
	},

	{
		// projects/halcyon.svelte
		pattern: /^\/projects\/halcyon\/?$/,
		parts: [
			null,
			{ i: 5 }
		]
	},

	{
		// about.svelte
		pattern: /^\/about\/?$/,
		parts: [
			{ i: 6 }
		]
	}
];

if (typeof window !== 'undefined') {
	new Promise(function (resolve) { resolve(require('./sapper-dev-client-39a0eff9.js')); }).then(client => {
		client.connect(10000);
	});
}

function goto(href, opts = { replaceState: false }) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		_history[opts.replaceState ? 'replaceState' : 'pushState']({ id: cid }, '', href);
		return navigate(target, null).then(() => {});
	}

	location.href = href;
	return new Promise(f => {}); // never resolves
}

const initial_data = typeof __SAPPER__ !== 'undefined' && __SAPPER__;

let ready = false;
let root_component;
let current_token;
let root_preloaded;
let current_branch = [];
let current_query = '{}';

const stores = {
	page: writable({}),
	preloading: writable(null),
	session: writable(initial_data && initial_data.session)
};

let $session;
let session_dirty;

stores.session.subscribe(async value => {
	$session = value;

	if (!ready) return;
	session_dirty = true;

	const target = select_target(new URL(location.href));

	const token = current_token = {};
	const { redirect, props, branch } = await hydrate_target(target);
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
});

let prefetching


 = null;

let target;

let uid = 1;

let cid;

const _history = typeof history !== 'undefined' ? history : {
	pushState: (state, title, href) => {},
	replaceState: (state, title, href) => {},
	scrollRestoration: ''
};

const scroll_history = {};

function extract_query(search) {
	const query = Object.create(null);
	if (search.length > 0) {
		search.slice(1).split('&').forEach(searchParam => {
			let [, key, value = ''] = /([^=]*)(?:=(.*))?/.exec(decodeURIComponent(searchParam.replace(/\+/g, ' ')));
			if (typeof query[key] === 'string') query[key] = [query[key]];
			if (typeof query[key] === 'object') (query[key] ).push(value);
			else query[key] = value;
		});
	}
	return query;
}

function select_target(url) {
	if (url.origin !== location.origin) return null;
	if (!url.pathname.startsWith(initial_data.baseUrl)) return null;

	let path = url.pathname.slice(initial_data.baseUrl.length);

	if (path === '') {
		path = '/';
	}

	// avoid accidental clashes between server routes and page routes
	if (ignore.some(pattern => pattern.test(path))) return;

	for (let i = 0; i < routes.length; i += 1) {
		const route = routes[i];

		const match = route.pattern.exec(path);

		if (match) {
			const query = extract_query(url.search);
			const part = route.parts[route.parts.length - 1];
			const params = part.params ? part.params(match) : {};

			const page = { host: location.host, path, query, params };

			return { href: url.href, route, match, page };
		}
	}
}

function scroll_state() {
	return {
		x: pageXOffset,
		y: pageYOffset
	};
}

async function navigate(target, id, noscroll, hash) {
	if (id) {
		// popstate or initial navigation
		cid = id;
	} else {
		const current_scroll = scroll_state();

		// clicked on a link. preserve scroll state
		scroll_history[cid] = current_scroll;

		id = cid = ++uid;
		scroll_history[cid] = noscroll ? current_scroll : { x: 0, y: 0 };
	}

	cid = id;

	if (root_component) stores.preloading.set(true);

	const loaded = prefetching && prefetching.href === target.href ?
		prefetching.promise :
		hydrate_target(target);

	prefetching = null;

	const token = current_token = {};
	const { redirect, props, branch } = await loaded;
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
	if (document.activeElement) document.activeElement.blur();

	if (!noscroll) {
		let scroll = scroll_history[id];

		if (hash) {
			// scroll is an element id (from a hash), we need to compute y.
			const deep_linked = document.getElementById(hash.slice(1));

			if (deep_linked) {
				scroll = {
					x: 0,
					y: deep_linked.getBoundingClientRect().top
				};
			}
		}

		scroll_history[cid] = scroll;
		if (scroll) scrollTo(scroll.x, scroll.y);
	}
}

async function render(redirect, branch, props, page) {
	if (redirect) return goto(redirect.location, { replaceState: true });

	stores.page.set(page);
	stores.preloading.set(false);

	if (root_component) {
		root_component.$set(props);
	} else {
		props.stores = {
			page: { subscribe: stores.page.subscribe },
			preloading: { subscribe: stores.preloading.subscribe },
			session: stores.session
		};
		props.level0 = {
			props: await root_preloaded
		};

		// first load â€” remove SSR'd <head> contents
		const start = document.querySelector('#sapper-head-start');
		const end = document.querySelector('#sapper-head-end');

		if (start && end) {
			while (start.nextSibling !== end) detach(start.nextSibling);
			detach(start);
			detach(end);
		}

		root_component = new App({
			target,
			props,
			hydrate: true
		});
	}

	current_branch = branch;
	current_query = JSON.stringify(page.query);
	ready = true;
	session_dirty = false;
}

function part_changed(i, segment, match, stringified_query) {
	// TODO only check query string changes for preload functions
	// that do in fact depend on it (using static analysis or
	// runtime instrumentation)
	if (stringified_query !== current_query) return true;

	const previous = current_branch[i];

	if (!previous) return false;
	if (segment !== previous.segment) return true;
	if (previous.match) {
		if (JSON.stringify(previous.match.slice(1, i + 2)) !== JSON.stringify(match.slice(1, i + 2))) {
			return true;
		}
	}
}

async function hydrate_target(target)



 {
	const { route, page } = target;
	const segments = page.path.split('/').filter(Boolean);

	let redirect = null;

	const props = { error: null, status: 200, segments: [segments[0]] };

	const preload_context = {
		fetch: (url, opts) => fetch(url, opts),
		redirect: (statusCode, location) => {
			if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
				throw new Error(`Conflicting redirects`);
			}
			redirect = { statusCode, location };
		},
		error: (status, error) => {
			props.error = typeof error === 'string' ? new Error(error) : error;
			props.status = status;
		}
	};

	if (!root_preloaded) {
		root_preloaded = initial_data.preloaded[0] || preload.call(preload_context, {
			host: page.host,
			path: page.path,
			query: page.query,
			params: {}
		}, $session);
	}

	let branch;
	let l = 1;

	try {
		const stringified_query = JSON.stringify(page.query);
		const match = route.pattern.exec(page.path);

		let segment_dirty = false;

		branch = await Promise.all(route.parts.map(async (part, i) => {
			const segment = segments[i];

			if (part_changed(i, segment, match, stringified_query)) segment_dirty = true;

			props.segments[l] = segments[i + 1]; // TODO make this less confusing
			if (!part) return { segment };

			const j = l++;

			if (!session_dirty && !segment_dirty && current_branch[i] && current_branch[i].part === part.i) {
				return current_branch[i];
			}

			segment_dirty = false;

			const { default: component, preload } = await load_component(components[part.i]);

			let preloaded;
			if (ready || !initial_data.preloaded[i + 1]) {
				preloaded = preload
					? await preload.call(preload_context, {
						host: page.host,
						path: page.path,
						query: page.query,
						params: part.params ? part.params(target.match) : {}
					}, $session)
					: {};
			} else {
				preloaded = initial_data.preloaded[i + 1];
			}

			return (props[`level${j}`] = { component, props: preloaded, segment, match, part: part.i });
		}));
	} catch (error) {
		props.error = error;
		props.status = 500;
		branch = [];
	}

	return { redirect, props, branch };
}

function load_css(chunk) {
	const href = `client/${chunk}`;
	if (document.querySelector(`link[href="${href}"]`)) return;

	return new Promise((fulfil, reject) => {
		const link = document.createElement('link');
		link.rel = 'stylesheet';
		link.href = href;

		link.onload = () => fulfil();
		link.onerror = reject;

		document.head.appendChild(link);
	});
}

function load_component(component)


 {
	// TODO this is temporary â€” once placeholders are
	// always rewritten, scratch the ternary
	const promises = (typeof component.css === 'string' ? [] : component.css.map(load_css));
	promises.unshift(component.js());
	return Promise.all(promises).then(values => values[0]);
}

function detach(node) {
	node.parentNode.removeChild(node);
}

const stores$1 = () => index.getContext(CONTEXT_KEY);

/* src/components/helper-components/GoogleAnalytics.svelte generated by Svelte v3.9.1 */

const GoogleAnalytics = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;

	const { page } = stores$1(); index.validate_store(page, 'page'); $page = index.get_store_value(page);

	index.validate_store(page, 'page'); $page = index.get_store_value(page);

	{
                if (typeof gtag !== "undefined"){
                gtag("config", "UA-89058156-2", {
                    page_path: $page.path
                });
                }
            }

	return ``;
});

/* src/components/navigation/Hamburger.svelte generated by Svelte v3.9.1 */

const css$1 = {
	code: ".svelte-1k0i75m:export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}#toggle.svelte-1k0i75m{display:none}.hamburger.svelte-1k0i75m{position:relative;display:block;flex-direction:column;justify-content:space-evenly;align-items:flex-end;cursor:pointer;overflow:hidden;width:32px;height:18px;transition:transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99)}.hamburger.svelte-1k0i75m::before{content:'';display:block;border-bottom:2px solid black;position:absolute;top:0;right:0;width:32px;transform:translateX(14px);transition:transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99)}.hamburger.svelte-1k0i75m::after{content:'';display:block;position:absolute;bottom:0;right:0;border-bottom:2px solid black;width:32px;transform:translateX(8px);transition:transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99)}span.middle.svelte-1k0i75m{display:block;border-bottom:2px solid black;width:32px;position:absolute;top:50%;right:0;transform:translateY(-50%)}.background.svelte-1k0i75m{background:rgba(0, 0, 0, 0.319);opacity:0;width:100vw;height:100vh;position:fixed;bottom:0;left:0;z-index:1;transition:opacity .35s ease-in;animation:.01s ease-in .35s 1 leaveScreen forwards}@media(min-width: 1024px){.background.svelte-1k0i75m{display:none}}#toggle:hover+.background+label.svelte-1k0i75m>.hamburger.svelte-1k0i75m::after{transform:translateX(0)}#toggle:checked+.background+label.svelte-1k0i75m>.hamburger.svelte-1k0i75m::after{transform:translateX(0)}#toggle:hover+.background+label.svelte-1k0i75m>.hamburger.svelte-1k0i75m::before{transform:translateX(0)}#toggle:checked+.background+label.svelte-1k0i75m>.hamburger.svelte-1k0i75m::before{transform:translateX(0)}#toggle:checked+.background.svelte-1k0i75m{opacity:1;animation:unset}@media screen and (min-width: 1024px){label.svelte-1k0i75m{display:none}}.show-for-sr.svelte-1k0i75m{border:0;clip:rect(1px, 1px, 1px, 1px);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;word-wrap:normal !important}",
	map: "{\"version\":3,\"file\":\"Hamburger.svelte\",\"sources\":[\"Hamburger.svelte\"],\"sourcesContent\":[\"<script>\\nimport { onMount, afterUpdate, tick  } from 'svelte';\\n\\nexport let toggle, hamburger;\\n\\n</script>\\n\\n<style lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:export {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\n#toggle {\\n  display: none; }\\n\\n.hamburger {\\n  position: relative;\\n  display: block;\\n  flex-direction: column;\\n  justify-content: space-evenly;\\n  align-items: flex-end;\\n  cursor: pointer;\\n  overflow: hidden;\\n  width: 32px;\\n  height: 18px;\\n  transition: transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n\\n.hamburger::before {\\n  content: '';\\n  display: block;\\n  border-bottom: 2px solid black;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 32px;\\n  transform: translateX(14px);\\n  transition: transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n\\n.hamburger::after {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  bottom: 0;\\n  right: 0;\\n  border-bottom: 2px solid black;\\n  width: 32px;\\n  transform: translateX(8px);\\n  transition: transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n\\nspan.middle {\\n  display: block;\\n  border-bottom: 2px solid black;\\n  width: 32px;\\n  position: absolute;\\n  top: 50%;\\n  right: 0;\\n  transform: translateY(-50%); }\\n\\n.background {\\n  background: rgba(0, 0, 0, 0.319);\\n  opacity: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 1;\\n  transition: opacity .35s ease-in;\\n  animation: .01s ease-in .35s 1 leaveScreen forwards; }\\n  @media (min-width: 1024px) {\\n    .background {\\n      display: none; } }\\n\\n#toggle:hover + .background + label > .hamburger::after {\\n  transform: translateX(0); }\\n\\n#toggle:checked + .background + label > .hamburger::after {\\n  transform: translateX(0); }\\n\\n#toggle:hover + .background + label > .hamburger::before {\\n  transform: translateX(0); }\\n\\n#toggle:checked + .background + label > .hamburger::before {\\n  transform: translateX(0); }\\n\\n#toggle:checked + .background {\\n  opacity: 1;\\n  animation: unset; }\\n\\n@media screen and (min-width: 1024px) {\\n  label {\\n    display: none; } }\\n\\n.show-for-sr {\\n  border: 0;\\n  clip: rect(1px, 1px, 1px, 1px);\\n  clip-path: inset(50%);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px;\\n  word-wrap: normal !important; }\\n\\n/*# sourceMappingURL=Hamburger.svelte.css.map */</style>\\n\\n<input id=\\\"toggle\\\" type=\\\"checkbox\\\" class=\\\"hide subnav-toggle hide-for-xlg\\\">\\n<div class=\\\"background\\\" on:click></div>\\n<label id=\\\"nav-label\\\" for=\\\"toggle\\\" class=\\\"hide-for-xlg\\\">\\n    <span class=\\\"show-for-sr\\\">Navigation</span>\\n    <span class=\\\"hamburger\\\" bind:this={hamburger} title=\\\"Navigation\\\">\\n      <span class=\\\"middle\\\"></span>\\n    </span>\\n</label>\"],\"names\":[],\"mappings\":\"eAwCA,OAAO,AAAC,CAAC,AACP,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,CAClB,YAAY,CAAE,IAAI,AAAE,CAAC,AAgBvB,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,AAAE,CAAC,AAElB,UAAU,eAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,KAAK,CACd,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,YAAY,CAC7B,WAAW,CAAE,QAAQ,CACrB,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AAAE,CAAC,AAErE,yBAAU,QAAQ,AAAC,CAAC,AAClB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AAAE,CAAC,AAErE,yBAAU,OAAO,AAAC,CAAC,AACjB,OAAO,CAAE,EAAE,CACX,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,WAAW,GAAG,CAAC,CAC1B,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AAAE,CAAC,AAErE,IAAI,OAAO,eAAC,CAAC,AACX,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,CAAC,CACR,SAAS,CAAE,WAAW,IAAI,CAAC,AAAE,CAAC,AAEhC,WAAW,eAAC,CAAC,AACX,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAChC,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAChC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,AAAE,CAAC,AACtD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,WAAW,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAExB,OAAO,MAAM,CAAG,WAAW,CAAG,oBAAK,CAAG,yBAAU,OAAO,AAAC,CAAC,AACvD,SAAS,CAAE,WAAW,CAAC,CAAC,AAAE,CAAC,AAE7B,OAAO,QAAQ,CAAG,WAAW,CAAG,oBAAK,CAAG,yBAAU,OAAO,AAAC,CAAC,AACzD,SAAS,CAAE,WAAW,CAAC,CAAC,AAAE,CAAC,AAE7B,OAAO,MAAM,CAAG,WAAW,CAAG,oBAAK,CAAG,yBAAU,QAAQ,AAAC,CAAC,AACxD,SAAS,CAAE,WAAW,CAAC,CAAC,AAAE,CAAC,AAE7B,OAAO,QAAQ,CAAG,WAAW,CAAG,oBAAK,CAAG,yBAAU,QAAQ,AAAC,CAAC,AAC1D,SAAS,CAAE,WAAW,CAAC,CAAC,AAAE,CAAC,AAE7B,OAAO,QAAQ,CAAG,WAAW,eAAC,CAAC,AAC7B,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,KAAK,AAAE,CAAC,AAErB,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AACrC,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,AAAE,CAAC,AAAC,CAAC,AAEtB,YAAY,eAAC,CAAC,AACZ,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,MAAM,CAAC,UAAU,AAAE,CAAC\"}"
};

const Hamburger = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { toggle, hamburger } = $$props;

	if ($$props.toggle === void 0 && $$bindings.toggle && toggle !== void 0) $$bindings.toggle(toggle);
	if ($$props.hamburger === void 0 && $$bindings.hamburger && hamburger !== void 0) $$bindings.hamburger(hamburger);

	$$result.css.add(css$1);

	return `<input id="toggle" type="checkbox" class="hide subnav-toggle hide-for-xlg svelte-1k0i75m">
	<div class="background svelte-1k0i75m"></div>
	<label id="nav-label" for="toggle" class="hide-for-xlg svelte-1k0i75m">
	    <span class="show-for-sr svelte-1k0i75m">Navigation</span>
	    <span class="hamburger svelte-1k0i75m" title="Navigation"${index.add_attribute("this", hamburger, 1)}>
	      <span class="middle svelte-1k0i75m"></span>
	    </span>
	</label>`;
});

/* src/components/modals/ModalTemplate.svelte generated by Svelte v3.9.1 */

const css$2 = {
	code: ".svelte-1tyf470:export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}.modal-container.svelte-1tyf470{position:fixed;top:0;left:0;width:100%;height:100%;z-index:50}.modal-background.svelte-1tyf470{position:fixed;top:0;left:0;width:100%;height:100%;z-index:-1;background:rgba(0, 0, 0, 0.3)}.container.svelte-1tyf470{width:100%;height:100%}.modal.svelte-1tyf470{width:calc(100vw - 4em);width:80%;max-width:650px;max-height:90vh;overflow:auto;border-radius:10rem;background:white;z-index:50}@media(min-width: 640px){.modal.svelte-1tyf470{max-height:450px;max-width:600px;width:85%}}@media(min-width: 1024px){.modal.svelte-1tyf470{width:70%;max-width:750px}}",
	map: "{\"version\":3,\"file\":\"ModalTemplate.svelte\",\"sources\":[\"ModalTemplate.svelte\"],\"sourcesContent\":[\"<script>\\n    import { createEventDispatcher } from 'svelte';\\n    import { fade, fly } from 'svelte/transition';\\n\\n    export let showModal\\n    \\n    const dispatch = createEventDispatcher();\\n    \\n</script>\\n\\n<style lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:export {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\n.modal-container {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 50; }\\n\\n.modal-background {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: -1;\\n  background: rgba(0, 0, 0, 0.3); }\\n\\n.container {\\n  width: 100%;\\n  height: 100%; }\\n\\n.modal {\\n  width: calc(100vw - 4em);\\n  width: 80%;\\n  max-width: 650px;\\n  max-height: 90vh;\\n  overflow: auto;\\n  border-radius: 10rem;\\n  background: white;\\n  z-index: 50; }\\n  @media (min-width: 640px) {\\n    .modal {\\n      max-height: 450px;\\n      max-width: 600px;\\n      width: 85%; } }\\n  @media (min-width: 1024px) {\\n    .modal {\\n      width: 70%;\\n      max-width: 750px; } }\\n\\nbutton {\\n  display: block; }\\n\\n/*# sourceMappingURL=ModalTemplate.svelte.css.map */</style>\\n\\n<div class='center-all modal-container {showModal ? 'show-modal' : ''}' in:fade out:fade >\\n    <div class=\\\"modal-background\\\" on:click></div>\\n\\t<div class='modal' in:fly=\\\"{{ y: -20, duration: 450, delay: 200, }}\\\" out:fly=\\\"{{ y: -20, duration: 450 }}\\\">\\n\\t\\t<slot name='header'></slot>\\n\\t\\t<slot></slot>\\n\\t</div>\\n</div>\"],\"names\":[],\"mappings\":\"eA2CA,OAAO,AAAC,CAAC,AACP,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,CAClB,YAAY,CAAE,IAAI,AAAE,CAAC,AAgBvB,gBAAgB,eAAC,CAAC,AAChB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,EAAE,AAAE,CAAC,AAEhB,iBAAiB,eAAC,CAAC,AACjB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,EAAE,CACX,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAAE,CAAC,AAEnC,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAAE,CAAC,AAEjB,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,IAAI,CACd,aAAa,CAAE,KAAK,CACpB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,EAAE,AAAE,CAAC,AACd,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,GAAG,AAAE,CAAC,AAAC,CAAC,AACnB,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,AAAE,CAAC,AAAC,CAAC\"}"
};

const ModalTemplate = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

    let { showModal } = $$props;

	if ($$props.showModal === void 0 && $$bindings.showModal && showModal !== void 0) $$bindings.showModal(showModal);

	$$result.css.add(css$2);

	return `<div class="center-all modal-container ${index.escape(showModal ? 'show-modal' : '')} svelte-1tyf470">
	    <div class="modal-background svelte-1tyf470"></div>
		<div class="modal svelte-1tyf470">
			${$$slots.header ? $$slots.header({}) : ``}
			${$$slots.default ? $$slots.default({}) : ``}
		</div>
	</div>`;
});

/* src/components/loaders/BoxLoader.svelte generated by Svelte v3.9.1 */

const css$3 = {
	code: "#loader.svelte-12rrru0{position:absolute;top:50%;left:50%;margin-top:-2.7em;margin-left:-2.7em;width:5.4em;height:5.4em}#hill.svelte-12rrru0{position:absolute;width:7.1em;height:7.1em;top:1.7em;left:1.7em;background-color:transparent;border-left:.25em solid lightgray;transform:rotate(45deg)}#hill.svelte-12rrru0:after{content:'';position:absolute;width:7.1em;height:7.1em;left:0}#box.svelte-12rrru0{position:absolute;left:0;bottom:-.1em;width:1em;height:1em;background-color:transparent;border:.25em solid lightgray;border-radius:15%;transform:translate(0, -1em) rotate(-45deg);animation:svelte-12rrru0-push 2.5s cubic-bezier(.79, 0, .47, .97) infinite}@keyframes svelte-12rrru0-push{0%{transform:translate(0, -1em) rotate(-45deg)}5%{transform:translate(0, -1em) rotate(-50deg)}20%{transform:translate(1em, -2em) rotate(47deg)}25%{transform:translate(1em, -2em) rotate(45deg)}30%{transform:translate(1em, -2em) rotate(40deg)}45%{transform:translate(2em, -3em) rotate(137deg)}50%{transform:translate(2em, -3em) rotate(135deg)}55%{transform:translate(2em, -3em) rotate(130deg)}70%{transform:translate(3em, -4em) rotate(217deg)}75%{transform:translate(3em, -4em) rotate(220deg)}100%{transform:translate(0, -1em) rotate(-225deg)}}",
	map: "{\"version\":3,\"file\":\"BoxLoader.svelte\",\"sources\":[\"BoxLoader.svelte\"],\"sourcesContent\":[\"<script>\\nimport { fade } from 'svelte/transition';\\n\\n</script>\\n\\n<style>\\n#loader {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -2.7em;\\n  margin-left: -2.7em;\\n  width: 5.4em;\\n  height: 5.4em;\\n}\\n\\n#hill {\\n  position: absolute;\\n  width: 7.1em;\\n  height: 7.1em;\\n  top: 1.7em;\\n  left: 1.7em;\\n  background-color: transparent;\\n  border-left: .25em solid lightgray;\\n  transform: rotate(45deg);\\n}\\n\\n#hill:after {\\n  content: '';\\n  position: absolute;\\n  width: 7.1em;\\n  height: 7.1em;\\n  left: 0;\\n}\\n\\n#box {\\n  position: absolute;\\n  left: 0;\\n  bottom: -.1em;\\n  width: 1em;\\n  height: 1em;\\n  background-color: transparent;\\n  border: .25em solid lightgray;\\n  border-radius: 15%;\\n  transform: translate(0, -1em) rotate(-45deg);\\n  animation: push 2.5s cubic-bezier(.79, 0, .47, .97) infinite;\\n}\\n\\n@keyframes push {\\n  0% {\\n    transform: translate(0, -1em) rotate(-45deg);\\n  }\\n  5% {\\n    transform: translate(0, -1em) rotate(-50deg);\\n  }\\n  20% {\\n    transform: translate(1em, -2em) rotate(47deg);\\n  }\\n  25% {\\n    transform: translate(1em, -2em) rotate(45deg);\\n  }\\n  30% {\\n    transform: translate(1em, -2em) rotate(40deg);\\n  }\\n  45% {\\n    transform: translate(2em, -3em) rotate(137deg);\\n  }\\n  50% {\\n    transform: translate(2em, -3em) rotate(135deg);\\n  }\\n  55% {\\n    transform: translate(2em, -3em) rotate(130deg);\\n  }\\n  70% {\\n    transform: translate(3em, -4em) rotate(217deg);\\n  }\\n  75% {\\n    transform: translate(3em, -4em) rotate(220deg);\\n  }\\n  100% {\\n    transform: translate(0, -1em) rotate(-225deg);\\n  }\\n}\\n</style>\\n\\n<div id=\\\"loader\\\" in:fade out:fade>\\n  <div id=\\\"box\\\"></div>\\n  <div id=\\\"hill\\\"></div>\\n</div>\"],\"names\":[],\"mappings\":\"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\"}"
};

const BoxLoader = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	$$result.css.add(css$3);

	return `<div id="loader" class="svelte-12rrru0">
	  <div id="box" class="svelte-12rrru0"></div>
	  <div id="hill" class="svelte-12rrru0"></div>
	</div>`;
});

/* src/components/modals/ContactModal.svelte generated by Svelte v3.9.1 */

const css$4 = {
	code: ".svelte-1fizffw:export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}.text-container.svelte-1fizffw h2.svelte-1fizffw{font-size:30rem;color:#808080}@media screen and (min-width: 64em){.text-container.svelte-1fizffw h2.svelte-1fizffw{font-size:36rem}}.text-container.svelte-1fizffw h2.svelte-1fizffw::after{content:'';display:block;height:7px;margin:5rem 0px 18rem 0px;background:lightgray}@media screen and (min-width: 40em){h2.svelte-1fizffw::after{width:250px}}p.svelte-1fizffw{margin:6rem 0rem 10rem 0rem;font-family:'Open Sans', sans-serif;font-weight:300;font-size:13rem;color:#58595b}@media screen and (min-width: 64em){p.svelte-1fizffw{font-size:16rem}}div.form-container.svelte-1fizffw{box-sizing:border-box;color:gray;width:100%;border-radius:4px;padding:15rem 20rem 40rem 20rem;box-shadow:5px 5px 5px lightgray}@media screen and (min-width: 40em){div.form-container.svelte-1fizffw{padding:30rem 20rem 40rem 20rem}}@media screen and (min-width: 64em){div.form-container.svelte-1fizffw{padding:40rem 30rem 50rem 30rem}}div.flex-container.svelte-1fizffw{display:flex;flex-direction:column}@media screen and (min-width: 40em){div.flex-container.svelte-1fizffw{flex-direction:row}}div.text-container.svelte-1fizffw{position:relative}@media(min-width: 640px){div.text-container.svelte-1fizffw{top:-20px;padding-right:30rem}}div.svelte-1fizffw{flex:55%}form.svelte-1fizffw{display:flex;flex-direction:column;flex:50%;padding-left:auto}label.svelte-1fizffw{display:flex;flex-direction:column;margin:4rem 0px}span.svelte-1fizffw{font-size:13rem;margin-bottom:5rem;font-weight:500}@media(min-width: 1366px){span.svelte-1fizffw{font-size:14px}}input[type=\"submit\"].svelte-1fizffw{width:50%;min-width:96px;margin-top:12rem;padding:6rem;font-size:13rem;box-shadow:1px 1px 3px lightgrey;font-style:italic;background:rgba(88, 89, 91, 0.1);color:#58595b;font-weight:700;transition:all .3s ease-in;cursor:pointer}@media(min-width: 640px){input[type=\"submit\"].svelte-1fizffw{max-width:unset;padding:7rem 15rem 7rem 15rem}}@media(min-width: 1024px){input[type=\"submit\"].svelte-1fizffw{font-size:13rem;box-shadow:1;width:fit-content}}input[type=\"submit\"].svelte-1fizffw:hover{position:relative;transform:translateY(-1px);box-shadow:2px 2px 3px lightgrey}div.contact-row.svelte-1fizffw{display:flex;justify-content:space-between}input.svelte-1fizffw,textarea.svelte-1fizffw{border:1px solid lightgray;border-radius:2px;font-size:16rem;padding:3rem;box-shadow:.3px .3px .3px gray}.success-message.svelte-1fizffw{font-size:50rem;color:#58595b;text-transform:uppercase;position:absolute;top:50%;transform:translate(-50%, -50%);left:50%}.gform.svelte-1fizffw,.text-container.svelte-1fizffw,.success-message.svelte-1fizffw{transition:.35s opacity ease}.hide-content.svelte-1fizffw{opacity:0}",
	map: "{\"version\":3,\"file\":\"ContactModal.svelte\",\"sources\":[\"ContactModal.svelte\"],\"sourcesContent\":[\"<script>\\n    import { fade, fly } from 'svelte/transition';\\n\\n\\timport ModalTemplate from './ModalTemplate.svelte';\\n    import BoxLoader from '../loaders/BoxLoader.svelte';\\n\\n    export let showModal;\\n\\n    let hideModal = false;\\n    let fieldInputs = [];\\n\\n    let formState = {\\n        submittingForm: false,\\n        formSuccess: false,\\n        formError: false,\\n        hideFields: false\\n    }\\n\\n    let defaultFormState = formState;\\n\\n    function resetForm(wait){\\n        setTimeout(() => {            \\n            const stateObj = Object.entries(formState);\\n\\n            for(const [stateKey, stateValue] of stateObj){\\n                formState[stateKey] = false;\\n            }\\n\\n            fieldInputs.forEach((input) => {\\n                input.value = '';\\n            })\\n        }, wait)\\n    }\\n    \\n    async function handleSubmit(e){\\n        formState.submittingForm = true;\\n        formState.hideFields = true\\n        formState.formSuccess = false;\\n        const formFieldNames = ['name', 'email', 'message']; // TODO - generate field names based on inputs\\n        const formTextObj = buildFormSubmissionTextObj(e.target, formFieldNames);\\n\\n        const API_URL = `https://script.google.com/macros/s/AKfycbyfIRXEeqnLPVq4s2hG_b35lmcm2FCn768QWC9Wfg/exec`;\\n        const settings = { \\n            method: 'POST',\\n            body: formTextObj,\\n        }\\n\\n        try {\\n            const response = await fetch(API_URL, settings);\\n            const data = await response.json();\\n            formState.submittingForm = false;\\n            formState.formSuccess = true;\\n\\n            resetForm(1600);       \\n        } catch (e) {\\n            formState.submittingForm = false;\\n            formState.formError = true;\\n\\n            resetForm(1600);       \\n        }\\n    }\\n\\n    function buildFormSubmissionTextObj(formEventTarget, formFieldNames){\\n       let formData = new FormData();\\n       \\n        formFieldNames.forEach(fieldName => {\\n           formData.append(`${fieldName}`, `${formEventTarget[fieldName].value}`);\\n        })\\n\\n        return formData\\n    }\\n\\n</script>\\n\\n<style lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:export {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\n.text-container h2 {\\n  font-size: 30rem;\\n  color: #808080; }\\n\\n@media screen and (min-width: 64em) {\\n  .text-container h2 {\\n    font-size: 36rem; } }\\n\\n.text-container h2::after {\\n  content: '';\\n  display: block;\\n  height: 7px;\\n  margin: 5rem 0px 18rem 0px;\\n  background: lightgray; }\\n\\n@media screen and (min-width: 40em) {\\n  h2::after {\\n    width: 250px; } }\\n\\np {\\n  margin: 6rem 0rem 10rem 0rem;\\n  font-family: 'Open Sans', sans-serif;\\n  font-weight: 300;\\n  font-size: 13rem;\\n  color: #58595b; }\\n\\n@media screen and (min-width: 64em) {\\n  p {\\n    font-size: 16rem; } }\\n\\ndiv.form-container {\\n  box-sizing: border-box;\\n  color: gray;\\n  width: 100%;\\n  border-radius: 4px;\\n  padding: 15rem 20rem 40rem 20rem;\\n  /* border: 1px solid gray; */\\n  box-shadow: 5px 5px 5px lightgray; }\\n\\n@media screen and (min-width: 40em) {\\n  div.form-container {\\n    padding: 30rem 20rem 40rem 20rem; } }\\n\\n@media screen and (min-width: 64em) {\\n  div.form-container {\\n    padding: 40rem 30rem 50rem 30rem; } }\\n\\ndiv.flex-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n@media screen and (min-width: 40em) {\\n  div.flex-container {\\n    flex-direction: row; } }\\n\\ndiv.text-container {\\n  position: relative; }\\n  @media (min-width: 640px) {\\n    div.text-container {\\n      top: -20px;\\n      padding-right: 30rem; } }\\n\\ndiv {\\n  flex: 55%; }\\n\\nform {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 50%;\\n  padding-left: auto; }\\n\\nlabel {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 4rem 0px; }\\n\\nspan {\\n  font-size: 13rem;\\n  margin-bottom: 5rem;\\n  font-weight: 500; }\\n  @media (min-width: 1366px) {\\n    span {\\n      font-size: 14px; } }\\n\\ninput[type=\\\"submit\\\"] {\\n  width: 50%;\\n  min-width: 96px;\\n  margin-top: 12rem;\\n  padding: 6rem;\\n  font-size: 13rem;\\n  box-shadow: 1px 1px 3px lightgrey;\\n  font-style: italic;\\n  background: rgba(88, 89, 91, 0.1);\\n  color: #58595b;\\n  font-weight: 700;\\n  transition: all .3s ease-in;\\n  cursor: pointer; }\\n  @media (min-width: 640px) {\\n    input[type=\\\"submit\\\"] {\\n      max-width: unset;\\n      padding: 7rem 15rem 7rem 15rem; } }\\n  @media (min-width: 1024px) {\\n    input[type=\\\"submit\\\"] {\\n      font-size: 13rem;\\n      box-shadow: 1;\\n      width: fit-content; } }\\n\\ninput[type=\\\"submit\\\"]:hover {\\n  position: relative;\\n  transform: translateY(-1px);\\n  box-shadow: 2px 2px 3px lightgrey; }\\n\\ndiv.contact-row {\\n  display: flex;\\n  justify-content: space-between; }\\n\\ninput, textarea {\\n  border: 1px solid lightgray;\\n  border-radius: 2px;\\n  font-size: 16rem;\\n  padding: 3rem;\\n  box-shadow: .3px .3px .3px gray; }\\n\\n.success-message {\\n  font-size: 50rem;\\n  color: #58595b;\\n  text-transform: uppercase;\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(-50%, -50%);\\n  left: 50%; }\\n\\n.gform, .text-container, .success-message {\\n  transition: .35s opacity ease; }\\n\\n.hide-content {\\n  opacity: 0; }\\n\\n/*# sourceMappingURL=ContactModal.svelte.css.map */</style>\\n\\n{#if showModal && hideModal === false}\\n\\t<ModalTemplate showModal={showModal} on:click>\\n        <div class=\\\"form-container\\\">\\n            <div class=\\\"flex-container\\\">\\n                    <div class=\\\"text-container {formState.hideFields ? 'hide-content' : ''} {formState.hideFields ? 'hide-content' : ''}\\\">\\n                        <h2>Get In Touch</h2>\\n                        <p>\\n                            Hi there! Iâ€™m Josh, \\n                            I bring projects to life by innovating across each aspect of the customer journey. \\n                            Send me a message if you are looking to hire a developer, collaborate on a project, or have a potential business opportunity.\\n                        </p>\\n                    </div>\\n                    <form \\n                        class=\\\"gform {formState.hideFields ? 'hide-content' : ''}\\n                        {formState.formSuccess ? 'hide-content' : ''}\\\"\\n                        on:submit|preventDefault={handleSubmit}  \\n                    >\\n                        <label> <span>Name</span>\\n                            <input bind:this={fieldInputs[0]} name=\\\"name\\\" type=\\\"text\\\">\\n                        </label>\\n                        <label> <span>Email</span>\\n                            <input bind:this={fieldInputs[1]} required name=\\\"email\\\" type=\\\"email\\\">\\n                        </label>\\n                        <label> <span>Message</span>\\n                            <textarea bind:this={fieldInputs[2]} name=\\\"message\\\" rows=\\\"6\\\" type=\\\"textarea\\\"></textarea>\\n                        </label>\\n                        <input type=\\\"submit\\\" value=\\\"Send Message\\\">\\n                    </form>\\n\\n                {#if formState.submittingForm}\\n                    <BoxLoader />\\n                {/if}\\n                {#if formState.formSuccess}\\n                    <h2 class=\\\"success-message\\\" \\n                        in:fly=\\\"{{ y: 20, duration: 500, delay: 200, }}\\\"\\n                        out:fly=\\\"{{ y: -20, duration: 500, delay: 0, }}\\\"\\n                    >\\n                        SUCCESS\\n                    </h2>\\n                {/if}\\n                {#if formState.formError}\\n                    <h2 class=\\\"success-message\\\" \\n                        in:fly=\\\"{{ y: 20, duration: 500, delay: 200, }}\\\"\\n                        out:fly=\\\"{{ y: -20, duration: 500, delay: 0, }}\\\"\\n                    >\\n                        ERROR\\n                    </h2>\\n                {/if}\\n            </div>\\n        </div>\\n\\t</ModalTemplate>\\n{/if}\"],\"names\":[],\"mappings\":\"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\"}"
};

let hideModal = false;

const ContactModal = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

    let { showModal } = $$props;
    let fieldInputs = [];

    let formState = {
        submittingForm: false,
        formSuccess: false,
        formError: false,
        hideFields: false
    };

	if ($$props.showModal === void 0 && $$bindings.showModal && showModal !== void 0) $$bindings.showModal(showModal);

	$$result.css.add(css$4);

	return `${ showModal && hideModal === false ? `${index.validate_component(ModalTemplate, 'ModalTemplate').$$render($$result, { showModal: showModal }, {}, {
		default: () => `
	        <div class="form-container svelte-1fizffw">
	            <div class="flex-container svelte-1fizffw">
	                    <div class="text-container ${index.escape(formState.hideFields ? 'hide-content' : '')} ${index.escape(formState.hideFields ? 'hide-content' : '')} svelte-1fizffw">
	                        <h2 class="svelte-1fizffw">Get In Touch</h2>
	                        <p class="svelte-1fizffw">
	                            Hi there! Iâ€™m Josh, 
	                            I bring projects to life by innovating across each aspect of the customer journey. 
	                            Send me a message if you are looking to hire a developer, collaborate on a project, or have a potential business opportunity.
	                        </p>
	                    </div>
	                    <form class="gform ${index.escape(formState.hideFields ? 'hide-content' : '')}
	                        ${index.escape(formState.formSuccess ? 'hide-content' : '')} svelte-1fizffw">
	                        <label class="svelte-1fizffw"> <span class="svelte-1fizffw">Name</span>
	                            <input name="name" type="text" class="svelte-1fizffw"${index.add_attribute("this", fieldInputs[0], 1)}>
	                        </label>
	                        <label class="svelte-1fizffw"> <span class="svelte-1fizffw">Email</span>
	                            <input required name="email" type="email" class="svelte-1fizffw"${index.add_attribute("this", fieldInputs[1], 1)}>
	                        </label>
	                        <label class="svelte-1fizffw"> <span class="svelte-1fizffw">Message</span>
	                            <textarea name="message" rows="6" type="textarea" class="svelte-1fizffw"${index.add_attribute("this", fieldInputs[2], 1)}></textarea>
	                        </label>
	                        <input type="submit" value="Send Message" class="svelte-1fizffw">
	                    </form>

	                ${ formState.submittingForm ? `${index.validate_component(BoxLoader, 'BoxLoader').$$render($$result, {}, {}, {})}` : `` }
	                ${ formState.formSuccess ? `<h2 class="success-message svelte-1fizffw">
	                        SUCCESS
	                    </h2>` : `` }
	                ${ formState.formError ? `<h2 class="success-message svelte-1fizffw">
	                        ERROR
	                    </h2>` : `` }
	            </div>
	        </div>
		`
	})}` : `` }`;
});

/* src/components/navigation/Navigation.svelte generated by Svelte v3.9.1 */

const css$5 = {
	code: ".svelte-a4mnl9:export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}header.svelte-a4mnl9{border-bottom:1px solid #d6d6d6;position:fixed;width:100%;top:0;z-index:50;background:white}nav.svelte-a4mnl9{display:flex;justify-content:space-between;align-items:center;padding:30rem 20rem;transition:padding 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99)}@media(min-width: 640px){nav.svelte-a4mnl9{padding:35rem 40rem}}nav.scrolled.svelte-a4mnl9{padding:20rem 20rem}@media(min-width: 640px){nav.scrolled.svelte-a4mnl9{padding:20rem 40rem}}ul.navigation.svelte-a4mnl9{box-sizing:border-box;background:white;display:flex;justify-content:center;flex-direction:column;justify-content:center;align-items:flex-end;position:fixed;z-index:2;width:250px;right:0;transform:translateX(100%);bottom:0;height:100%;padding:0rem 20rem;transition:transform 0.85s cubic-bezier(0.85, 0.08, 0.08, 0.99)}@media(min-width: 640px){ul.navigation.svelte-a4mnl9{padding:0rem 40rem}}@media(min-width: 1024px){ul.navigation.svelte-a4mnl9{transform:unset;position:relative;display:flex;flex-direction:row;width:unset;padding:0}}#toggle:checked~ul.navigation.svelte-a4mnl9{display:flex;transform:translateX(0)}li.svelte-a4mnl9{position:relative;text-align:right;margin:5rem 0rem;width:auto;overflow-x:hidden;font-size:14rem}@media(min-width: 1024px){li.svelte-a4mnl9{font-size:16rem;margin:0rem 20rem;padding:2.5rem 0}li.svelte-a4mnl9:last-of-type{margin-right:0}}@media screen and (min-width: 1024px){p.svelte-a4mnl9{font-size:18rem}}li.svelte-a4mnl9:not(.close-container)::after,.active.svelte-a4mnl9::after{content:'';position:absolute;left:0;transform:translateX(100%);bottom:0;width:100%;opacity:1;border-bottom:2px solid #3B3B3B;transition:transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99)}li.svelte-a4mnl9:not(.close-container):hover::after,.active.svelte-a4mnl9::after{transform:translateX(0)}.selected.svelte-a4mnl9::after{transform:translateX(0) !important}.modal-active.svelte-a4mnl9 .selected.svelte-a4mnl9:not(.open-modal)::after{transform:translateX(100%) !important}.close-container.svelte-a4mnl9{position:absolute;top:50rem;right:50rem;overflow:unset;cursor:pointer}@media(min-width: 640px){.close-container.svelte-a4mnl9{right:70rem}}@media(min-width: 1024px){.close-container.svelte-a4mnl9{display:none}}.close.svelte-a4mnl9{width:32px;height:32px;position:relative;align-items:center;justify-content:center}.close.svelte-a4mnl9::before{content:'';display:block;position:absolute;border-bottom:2px solid black;width:32px;transform:rotate(45deg)}.close.svelte-a4mnl9::after{content:'';display:block;position:absolute;border-bottom:2px solid black;width:32px;transform:rotate(-45deg)}a.svelte-a4mnl9:not(.logo){display:block;padding:5rem 0rem;text-transform:uppercase}p.svelte-a4mnl9{font-weight:700;font-style:italic}.code.svelte-a4mnl9{font-weight:100;font-style:normal;opacity:.3}.logo-hover.svelte-a4mnl9{transition:all .3s ease-in}.logo.svelte-a4mnl9:hover .logo-hover.svelte-a4mnl9{color:black}",
	map: "{\"version\":3,\"file\":\"Navigation.svelte\",\"sources\":[\"Navigation.svelte\"],\"sourcesContent\":[\"<script>\\nimport Hamburger from './Hamburger.svelte';\\nimport ContactModal from '../modals/ContactModal.svelte';\\n\\nimport { onMount } from 'svelte';\\n\\nexport let segment;\\n\\nlet showModal;\\n\\nlet windowY;\\nlet hamburger;\\nlet toggle = false;\\n\\nlet reduceNavSize = false;\\n\\nlet activeNavigation = {\\n    home: false,\\n    about: false,\\n    experience: false\\n}\\n\\n$: headerClass = navSize(windowY);\\n\\nfunction navSize(y){\\n    if(y > 75){\\n        reduceNavSize = true;\\n    } else {\\n        reduceNavSize = false;\\n    }\\n}\\n\\nfunction togglerOff(){\\n    if(window.innerWidth < 1023){\\n        hamburger ? hamburger.$$.ctx.hamburger.click() : null;\\n    }\\n}\\n\\nfunction resetActiveNav() {\\n    let activeNavObj = Object.entries(activeNavigation);\\n    \\n    for(let [key, value] of activeNavObj){\\n        activeNavigation[key] = false;\\n    }\\n}\\n\\n// TODO -- these functions need to be cleaned up - not using all of this anymore (using segment prop instead)\\n\\nfunction setActiveNavOnClick() {\\n    \\n    let activeNavObj = Object.entries(activeNavigation);\\n    let elText = `${this.innerHTML.toLowerCase()}`;\\n    \\n    for(let [key, value] of activeNavObj){\\n        if(key === elText){\\n            activeNavigation[key] = true;\\n        } else {\\n            activeNavigation[key] = false;\\n        }\\n    }\\n    togglerOff();\\n}\\n\\nfunction setActiveNav() {\\n    let path = window.location.pathname;\\n\\n    if(path === '/') activeNavigation.home = true;\\n    else if (path === '/about') activeNavigation.about = true;\\n    else if (path === '/experience') activeNavigation.experience = true;\\n}\\n\\nfunction openModal(){\\n    showModal = true;\\n}\\n\\nonMount(() => {\\n    setActiveNav();\\n})\\n\\n</script>\\n\\n<style lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:export {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\nheader {\\n  border-bottom: 1px solid #d6d6d6;\\n  position: fixed;\\n  width: 100%;\\n  top: 0;\\n  z-index: 50;\\n  background: white; }\\n\\nnav {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 30rem 20rem;\\n  transition: padding 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n  @media (min-width: 640px) {\\n    nav {\\n      padding: 35rem 40rem; } }\\n\\nnav.scrolled {\\n  padding: 20rem 20rem; }\\n  @media (min-width: 640px) {\\n    nav.scrolled {\\n      padding: 20rem 40rem; } }\\n\\nul.navigation {\\n  box-sizing: border-box;\\n  background: white;\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: flex-end;\\n  position: fixed;\\n  z-index: 2;\\n  width: 250px;\\n  right: 0;\\n  transform: translateX(100%);\\n  bottom: 0;\\n  height: 100%;\\n  padding: 0rem 20rem;\\n  transition: transform 0.85s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n  @media (min-width: 640px) {\\n    ul.navigation {\\n      padding: 0rem 40rem; } }\\n  @media (min-width: 1024px) {\\n    ul.navigation {\\n      transform: unset;\\n      position: relative;\\n      display: flex;\\n      flex-direction: row;\\n      width: unset;\\n      padding: 0; } }\\n\\n#toggle:checked ~ ul.navigation {\\n  display: flex;\\n  transform: translateX(0); }\\n\\nli {\\n  position: relative;\\n  text-align: right;\\n  margin: 5rem 0rem;\\n  width: auto;\\n  overflow-x: hidden;\\n  font-size: 14rem; }\\n  @media (min-width: 1024px) {\\n    li {\\n      font-size: 16rem;\\n      margin: 0rem 20rem;\\n      padding: 2.5rem 0; }\\n      li:last-of-type {\\n        margin-right: 0; } }\\n\\n@media screen and (min-width: 1024px) {\\n  p {\\n    font-size: 18rem; } }\\n\\nli:not(.close-container)::after, .active::after {\\n  content: '';\\n  position: absolute;\\n  left: 0;\\n  transform: translateX(100%);\\n  bottom: 0;\\n  width: 100%;\\n  opacity: 1;\\n  border-bottom: 2px solid #3B3B3B;\\n  transition: transform 0.45s cubic-bezier(0.85, 0.08, 0.08, 0.99); }\\n\\nli:not(.close-container):hover::after, .active::after {\\n  transform: translateX(0); }\\n\\n.selected::after {\\n  transform: translateX(0) !important; }\\n\\n.modal-active .selected:not(.open-modal)::after {\\n  transform: translateX(100%) !important; }\\n\\n.close-container {\\n  position: absolute;\\n  top: 50rem;\\n  right: 50rem;\\n  overflow: unset;\\n  cursor: pointer; }\\n  @media (min-width: 640px) {\\n    .close-container {\\n      right: 70rem; } }\\n  @media (min-width: 1024px) {\\n    .close-container {\\n      display: none; } }\\n\\n.close {\\n  width: 32px;\\n  height: 32px;\\n  position: relative;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.close::before {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  border-bottom: 2px solid black;\\n  width: 32px;\\n  transform: rotate(45deg); }\\n\\n.close::after {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  border-bottom: 2px solid black;\\n  width: 32px;\\n  transform: rotate(-45deg); }\\n\\na:not(.logo) {\\n  display: block;\\n  padding: 5rem 0rem;\\n  text-transform: uppercase; }\\n\\np {\\n  font-weight: 700;\\n  font-style: italic; }\\n\\n.code {\\n  font-weight: 100;\\n  font-style: normal;\\n  opacity: .3; }\\n\\n.logo-hover {\\n  transition: all .3s ease-in; }\\n\\n.logo:hover .logo-hover {\\n  color: black; }\\n\\n/*# sourceMappingURL=Navigation.svelte.css.map */</style>\\n\\n<svelte:window bind:scrollY={windowY}/>\\n\\n<header>\\n    <nav class={reduceNavSize ? 'scrolled container' : 'container'}>\\n        <a href='/' on:click={() => {resetActiveNav(); activeNavigation.home = true;}} class=\\\"logo\\\">\\n            <p>\\n                <span class=\\\"code\\\">&lt;h1&gt;</span>Hi There<span class=\\\"logo-hover\\\">!</span><span class=\\\"code\\\">&lt;/h1&gt;</span>\\n            </p>\\n        </a>\\n        <Hamburger on:click={togglerOff} toggle={toggle} bind:this={hamburger} />\\n        <ul class=\\\"navigation {showModal ? 'modal-active' : ''}\\\">\\n            <li class=\\\"close-container\\\" on:click={togglerOff} ><span class=\\\"close\\\"></span></li>\\n            <li class=\\\"{segment === undefined ? 'selected' : ''}\\\"><a on:click={setActiveNavOnClick} rel=prefetch href=\\\"/\\\">Home</a></li>\\n            <li class=\\\"{segment === 'about' ? 'selected' : ''}\\\"><a on:click={setActiveNavOnClick} rel=prefetch href=\\\"/about\\\">About</a></li>\\n            <li class=\\\"{segment === 'experience' ? 'selected' : ''}\\\"><a on:click={setActiveNavOnClick} rel=prefetch href=\\\"/experience\\\">Experience</a></li>\\n            <li class=\\\"{showModal ? 'selected' : ''} open-modal\\\"><a on:click={openModal} href=\\\"javascript:void(0)\\\">Contact</a></li>\\n        </ul>\\n    </nav>\\n</header>\\n\\n<ContactModal on:click={() => showModal = false} showModal={showModal}/>\"],\"names\":[],\"mappings\":\"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\"}"
};

let toggle = false;

const Navigation = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

let { segment } = $$props;

let showModal;

let windowY;
let hamburger;

let reduceNavSize = false;

function navSize(y){
    if(y > 75){
        reduceNavSize = true;
    } else {
        reduceNavSize = false;
    }
}

function setActiveNav() {
    let path = window.location.pathname;
}

index.onMount(() => {
    setActiveNav();
});

	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);

	$$result.css.add(css$5);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		let headerClass = navSize(windowY);

		$$rendered = `

		<header class="svelte-a4mnl9">
		    <nav class="${index.escape(index.null_to_empty(reduceNavSize ? 'scrolled container' : 'container'))} svelte-a4mnl9">
		        <a href="/" class="logo svelte-a4mnl9">
		            <p class="svelte-a4mnl9">
		                <span class="code svelte-a4mnl9">&lt;h1&gt;</span>Hi There<span class="logo-hover svelte-a4mnl9">!</span><span class="code svelte-a4mnl9">&lt;/h1&gt;</span>
		            </p>
		        </a>
		        ${index.validate_component(Hamburger, 'Hamburger').$$render($$result, {
			toggle: toggle,
			this: hamburger
		}, {
			this: $$value => { hamburger = $$value; $$settled = false; }
		}, {})}
		        <ul class="navigation ${index.escape(showModal ? 'modal-active' : '')} svelte-a4mnl9">
		            <li class="close-container svelte-a4mnl9"><span class="close svelte-a4mnl9"></span></li>
		            <li class="${index.escape(index.null_to_empty(segment === undefined ? 'selected' : ''))} svelte-a4mnl9"><a rel="prefetch" href="/" class="svelte-a4mnl9">Home</a></li>
		            <li class="${index.escape(index.null_to_empty(segment === 'about' ? 'selected' : ''))} svelte-a4mnl9"><a rel="prefetch" href="/about" class="svelte-a4mnl9">About</a></li>
		            <li class="${index.escape(index.null_to_empty(segment === 'experience' ? 'selected' : ''))} svelte-a4mnl9"><a rel="prefetch" href="/experience" class="svelte-a4mnl9">Experience</a></li>
		            <li class="${index.escape(showModal ? 'selected' : '')} open-modal svelte-a4mnl9"><a href="javascript:void(0)" class="svelte-a4mnl9">Contact</a></li>
		        </ul>
		    </nav>
		</header>

		${index.validate_component(ContactModal, 'ContactModal').$$render($$result, { showModal: showModal }, {}, {})}`;
	} while (!$$settled);

	return $$rendered;
});

/* src/components/footer/Footer.svelte generated by Svelte v3.9.1 */

const css$6 = {
	code: ".svelte-1a3si6p:export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}footer.svelte-1a3si6p{border-top:1px solid #d6d6d6;background:white;color:#3B3B3B}.footer-container.svelte-1a3si6p{margin-top:40px;display:flex;flex-direction:column;padding-bottom:0}@media(min-width: 640px){.footer-container.svelte-1a3si6p{flex-direction:row}}.left.svelte-1a3si6p,.right.svelte-1a3si6p{margin-bottom:55rem}@media(min-width: 640px){.left.svelte-1a3si6p,.right.svelte-1a3si6p{margin-bottom:60rem}}@media(min-width: 1024px){.left.svelte-1a3si6p,.right.svelte-1a3si6p{margin-bottom:70rem}}@media(min-width: 640px){.bottom-row.svelte-1a3si6p{display:flex}.left.svelte-1a3si6p,.copyright.svelte-1a3si6p{padding-right:80rem;width:60%}.right.svelte-1a3si6p{padding-top:20rem}}@media(min-width: 1024px){.left.svelte-1a3si6p,.copyright.svelte-1a3si6p{width:50%}}.text-cta.svelte-1a3si6p:first-of-type{margin-bottom:20rem}.headline.svelte-1a3si6p{font-size:40px;line-height:45px;font-weight:700;max-width:420px}.headline.svelte-1a3si6p a.svelte-1a3si6p{color:#58595b;transition:all .45s ease-in-out;opacity:.75}.headline.svelte-1a3si6p a.svelte-1a3si6p:hover{color:black}.title.svelte-1a3si6p{font-weight:100;font-size:12rem}.text-cta.svelte-1a3si6p a.svelte-1a3si6p{font-size:14rem}.bottom-row.svelte-1a3si6p{padding-top:0}.copyright.svelte-1a3si6p{font-size:12rem;font-style:italic;font-weight:300}.left.svelte-1a3si6p .open-modal.svelte-1a3si6p{display:block;color:#58595b;font-size:18px;font-weight:800;margin-top:25rem;transition:opacity .45s ease-in-out}.left.svelte-1a3si6p .open-modal.svelte-1a3si6p:hover{opacity:.75}div.social-icons.svelte-1a3si6p{margin-top:12px;min-width:206px}i.svelte-1a3si6p{font-size:18px;margin-right:10px;color:#808080;transition:all .3s ease}a.svelte-1a3si6p:hover>i.svelte-1a3si6p{transform:translateY(-3px);color:#58595b}@media screen and (min-width: 640px){div.social-icons.svelte-1a3si6p{margin:0}i.svelte-1a3si6p{font-size:18px;margin-right:10px}.left.svelte-1a3si6p .open-modal.svelte-1a3si6p{margin-top:60rem}}@media screen and (min-width: 1024px){.title.svelte-1a3si6p{font-size:16rem}.text-cta.svelte-1a3si6p a.svelte-1a3si6p{font-size:18rem}.copyright.svelte-1a3si6p{font-size:14rem}.headline.svelte-1a3si6p{font-size:45px;max-width:440px}.left.svelte-1a3si6p .open-modal.svelte-1a3si6p{font-size:22px;margin-top:70rem}i.svelte-1a3si6p{font-size:20px}}",
	map: "{\"version\":3,\"file\":\"Footer.svelte\",\"sources\":[\"Footer.svelte\"],\"sourcesContent\":[\"<script>\\n    import ContactModal from '../modals/ContactModal.svelte';\\n    import TextAnimation from '../helper-components/TextAnimation.svelte';\\n\\n    let showModal;\\n\\n    function openModal(){\\n        showModal = true;\\n    }\\n\\n</script>\\n\\n<style lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:export {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\nfooter {\\n  border-top: 1px solid #d6d6d6;\\n  background: white;\\n  color: #3B3B3B; }\\n\\n.footer-container {\\n  margin-top: 40px;\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 0; }\\n  @media (min-width: 640px) {\\n    .footer-container {\\n      flex-direction: row; } }\\n\\n.left, .right {\\n  margin-bottom: 55rem; }\\n  @media (min-width: 640px) {\\n    .left, .right {\\n      margin-bottom: 60rem; } }\\n  @media (min-width: 1024px) {\\n    .left, .right {\\n      margin-bottom: 70rem; } }\\n\\n@media (min-width: 640px) {\\n  .bottom-row {\\n    display: flex; }\\n  .left, .copyright {\\n    padding-right: 80rem;\\n    width: 60%; }\\n  .right {\\n    padding-top: 20rem; } }\\n\\n@media (min-width: 1024px) {\\n  .left, .copyright {\\n    width: 50%; } }\\n\\n.text-cta:first-of-type {\\n  margin-bottom: 20rem; }\\n\\n.headline {\\n  font-size: 40px;\\n  line-height: 45px;\\n  font-weight: 700;\\n  max-width: 420px; }\\n\\n.headline a {\\n  color: #58595b;\\n  transition: all .45s ease-in-out;\\n  opacity: .75; }\\n\\n.headline a:hover {\\n  color: black; }\\n\\n.title {\\n  font-weight: 100;\\n  font-size: 12rem; }\\n\\n.text-cta a {\\n  font-size: 14rem; }\\n\\n.bottom-row {\\n  padding-top: 0; }\\n\\n.copyright {\\n  font-size: 12rem;\\n  font-style: italic;\\n  font-weight: 300; }\\n\\n.left .open-modal {\\n  display: block;\\n  color: #58595b;\\n  font-size: 18px;\\n  font-weight: 800;\\n  margin-top: 25rem;\\n  transition: opacity .45s ease-in-out; }\\n\\n.left .open-modal:hover {\\n  opacity: .75; }\\n\\ndiv.social-icons {\\n  margin-top: 12px;\\n  min-width: 206px; }\\n\\ni {\\n  font-size: 18px;\\n  margin-right: 10px;\\n  color: #808080;\\n  transition: all .3s ease; }\\n\\na:hover > i {\\n  transform: translateY(-3px);\\n  color: #58595b; }\\n\\n@media screen and (min-width: 640px) {\\n  div.social-icons {\\n    margin: 0; }\\n  i {\\n    font-size: 18px;\\n    margin-right: 10px; }\\n  .left .open-modal {\\n    margin-top: 60rem; } }\\n\\n@media screen and (min-width: 1024px) {\\n  .title {\\n    font-size: 16rem; }\\n  .text-cta a {\\n    font-size: 18rem; }\\n  .copyright {\\n    font-size: 14rem; }\\n  .headline {\\n    font-size: 45px;\\n    max-width: 440px; }\\n  .left .open-modal {\\n    font-size: 22px;\\n    margin-top: 70rem; }\\n  i {\\n    font-size: 20px; } }\\n\\n/*# sourceMappingURL=Footer.svelte.css.map */</style>\\n\\n<footer>\\n    <div class=\\\"container footer-container\\\">\\n        <div class=\\\"left\\\">\\n            <p class=\\\"headline\\\">\\n                Feel free to shoot me an <a href=\\\"mailto:joshua.micah.roper@gmail.com\\\">email</a> & connect through <a href=\\\"https://www.linkedin.com/in/jr-dev\\\" target=\\\"blank\\\">social.</a>\\n            </p>\\n            <a class=\\\"open-modal\\\" on:click={openModal} href=\\\"javascript:void(0)\\\">Reach out!</a>\\n        </div>\\n        <div class=\\\"right\\\">\\n            <div class=\\\"text-cta\\\">\\n                <p class=\\\"title\\\">\\n                    Get In Touch!\\n                </p>\\n                <a href=\\\"mailto:joshua.micah.roper@gmail.com\\\">\\n                    <TextAnimation text={`Joshua.micah.roper@gmail.com`} />\\n                </a>\\n            </div>\\n            <div class=\\\"text-cta\\\">\\n                <p class=\\\"title\\\">\\n                    View Resume\\n                </p>\\n                <a href=\\\"./pdfs/resume-joshua-roper.pdf\\\" download>\\n                    <TextAnimation text={`Download PDF`} />\\n                </a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"bottom-row container\\\">\\n        \\n        <p class=\\\"copyright\\\">@ {new Date().getFullYear()} Joshua Roper Development</p>\\n        <div class=\\\"social-icons\\\">\\n            <a href=\\\"https://www.github.com/Jrope21\\\" aria-label=\\\"link to Joshua Roper's GitHub account\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" >\\n                <i class=\\\"fab fa-github\\\"></i>\\n            </a>\\n            <a href=\\\"https://www.linkedin.com/in/JR-dev\\\" aria-label=\\\"link to Joshua Roper's LinkedIn account\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" >\\n                <i class=\\\"fab fa-linkedin\\\"></i>\\n            </a>\\n            <a href=\\\"mailto:joshua.micah.roper@gmail.com\\\" aria-label=\\\"link to send Joshua Roper an email\\\" >\\n                <i class=\\\"fas fa-envelope\\\"></i>\\n            </a>\\n        </div>\\n    </div>\\n</footer>\\n\\n<ContactModal on:click={() => showModal = false} showModal={showModal}/>\"],\"names\":[],\"mappings\":\"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\"}"
};

const Footer = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

    let showModal;

	$$result.css.add(css$6);

	return `<footer class="svelte-1a3si6p">
	    <div class="container footer-container svelte-1a3si6p">
	        <div class="left svelte-1a3si6p">
	            <p class="headline svelte-1a3si6p">
	                Feel free to shoot me an <a href="mailto:joshua.micah.roper@gmail.com" class="svelte-1a3si6p">email</a> &amp; connect through <a href="https://www.linkedin.com/in/jr-dev" target="blank" class="svelte-1a3si6p">social.</a>
	            </p>
	            <a class="open-modal svelte-1a3si6p" href="javascript:void(0)">Reach out!</a>
	        </div>
	        <div class="right svelte-1a3si6p">
	            <div class="text-cta svelte-1a3si6p">
	                <p class="title svelte-1a3si6p">
	                    Get In Touch!
	                </p>
	                <a href="mailto:joshua.micah.roper@gmail.com" class="svelte-1a3si6p">
	                    ${index.validate_component(TextAnimation.TextAnimation, 'TextAnimation').$$render($$result, { text: `Joshua.micah.roper@gmail.com` }, {}, {})}
	                </a>
	            </div>
	            <div class="text-cta svelte-1a3si6p">
	                <p class="title svelte-1a3si6p">
	                    View Resume
	                </p>
	                <a href="./pdfs/resume-joshua-roper.pdf" download class="svelte-1a3si6p">
	                    ${index.validate_component(TextAnimation.TextAnimation, 'TextAnimation').$$render($$result, { text: `Download PDF` }, {}, {})}
	                </a>
	            </div>
	        </div>
	    </div>
	    <div class="bottom-row container svelte-1a3si6p">
	        
	        <p class="copyright svelte-1a3si6p">@ ${index.escape(new Date().getFullYear())} Joshua Roper Development</p>
	        <div class="social-icons svelte-1a3si6p">
	            <a href="https://www.github.com/Jrope21" aria-label="link to Joshua Roper's GitHub account" target="_blank" rel="noopener" class="svelte-1a3si6p">
	                <i class="fab fa-github svelte-1a3si6p"></i>
	            </a>
	            <a href="https://www.linkedin.com/in/JR-dev" aria-label="link to Joshua Roper's LinkedIn account" target="_blank" rel="noopener" class="svelte-1a3si6p">
	                <i class="fab fa-linkedin svelte-1a3si6p"></i>
	            </a>
	            <a href="mailto:joshua.micah.roper@gmail.com" aria-label="link to send Joshua Roper an email" class="svelte-1a3si6p">
	                <i class="fas fa-envelope svelte-1a3si6p"></i>
	            </a>
	        </div>
	    </div>
	</footer>

	${index.validate_component(ContactModal, 'ContactModal').$$render($$result, { showModal: showModal }, {}, {})}`;
});

/* src/routes/_layout.svelte generated by Svelte v3.9.1 */

const css$7 = {
	code: ":export{breakpointSm:640;breakpointMd:1024;breakpointLg:1366}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]{-webkit-appearance:button}button::-moz-focus-inner,[type=\"button\"]::-moz-focus-inner,[type=\"reset\"]::-moz-focus-inner,[type=\"submit\"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=\"button\"]:-moz-focusring,[type=\"reset\"]:-moz-focusring,[type=\"submit\"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=\"checkbox\"],[type=\"radio\"]{box-sizing:border-box;padding:0}[type=\"number\"]::-webkit-inner-spin-button,[type=\"number\"]::-webkit-outer-spin-button{height:auto}[type=\"search\"]{-webkit-appearance:textfield;outline-offset:-2px}[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}a{text-decoration:none;color:inherit;cursor:pointer}button{background-color:transparent;color:inherit;border-width:0;padding:0;cursor:pointer}figure{margin:0}input::-moz-focus-inner{border:0;padding:0;margin:0}ul,ol,dd{margin:0;padding:0;list-style:none}h1,h2,h3,h4,h5,h6{margin:0;font-size:inherit;font-weight:inherit}p{margin:0}cite{font-style:normal}fieldset{border-width:0;padding:0;margin:0}html{font-size:1px}body{font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"sans-serif\";font-size:16rem;font-weight:400;line-height:1.3;color:#222;max-width:100vw;overflow-x:hidden}.grid-x{display:flex;flex-wrap:wrap}.container{padding:20rem 20rem;margin-left:auto;margin-right:auto}@media screen and (min-width: 40em){.container{padding:20rem 40rem}}@media screen and (min-width: 64em){.container{padding:60rem 40rem}}@media(min-width: 576px){.container{max-width:640px}}@media(min-width: 768px){.container{max-width:720px}}@media(min-width: 1023px){.container{max-width:1005px}}@media(min-width: 1366px){.container{max-width:1300px}}main h3{font-size:13rem;font-weight:600;color:#414042}@media(min-width: 1024px){main h3{font-size:23rem}}main h2{font-size:13rem;font-weight:600;color:#3B3B3B}@media(min-width: 1024px){main h2{font-size:23rem}}main a{font-size:12rem;color:#989898;font-weight:300;font-style:italic}@media(min-width: 1024px){main a{font-size:14rem}}main p,main li{line-height:16px;font-weight:300;font-size:13rem;color:#58595b}@media(min-width: 1024px){main p,main li{font-size:18rem;line-height:23px}}main i > span{font-family:-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"sans-serif\";font-weight:300;font-size:13rem;color:#58595b}@media(min-width: 1024px){main i > span{font-size:18rem}}main a:hover span.text-underline::before{transform:translate(100%)}main strong{font-weight:600 !important}button:focus{outline:0}.justify-center{display:flex;justify-content:center}.align-center{display:flex;align-items:center}.center-all{display:flex;align-items:center;justify-content:center}@media screen and (min-width: 40em){.hide-for-medium{}}a:hover .circleIcon{transform:rotate(90deg)}@media screen and (min-width: 40em){.hide-for-small{display:none !important}}.show-for-small{display:none !important}@media screen and (min-width: 40em){.show-for-small{display:block !important}}@keyframes fadeInBottom{0%{top:20px;opacity:0}65%{top:20px;opacity:0}100%{top:0px;opacity:1}}@keyframes fadeInTop{0%{transform:translateY(-20px);opacity:0}65%{transform:translateY(-20px);opacity:0}100%{transform:translateY(0px);opacity:1}}@keyframes fadeIn{0%{opacity:0}65%{opacity:0}100%{opacity:1}}@keyframes fadeOutTop{0%{opacity:1}65%{opacity:1}100%{transform:translateY(-10px);opacity:0}}@keyframes slightSpin{0%{transform:rotate(0deg)}100%{transform:rotate(45deg)}}@keyframes fadeInLeft{0%{transform:translateX(-20px);opacity:0}65%{transform:translateX(-20px);opacity:0}100%{transform:translateX(0px);opacity:1}}@keyframes leaveScreen{100%{transform:translateX(9999px)}}.background{background:url(\"../background-images/so-white.png\");position:fixed;width:100vw;height:100vh;top:0;left:0;z-index:-1}",
	map: "{\"version\":3,\"file\":\"_layout.svelte\",\"sources\":[\"_layout.svelte\"],\"sourcesContent\":[\"<script>\\n\\timport { fade, fly } from 'svelte/transition'\\n\\timport GoogleAnalytics from '../components/helper-components/GoogleAnalytics.svelte';\\n\\timport Navigation from '../components/navigation/Navigation.svelte';\\n\\timport Footer from '../components/footer/Footer.svelte';\\n\\timport { onMount } from 'svelte'\\n\\n\\texport let segment;\\n</script>\\n\\n<style global lang=\\\"scss\\\">/*******************************************************\\n********************************************************\\n**\\n**  Globals\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. All utitilty SASS variables, mixins, or functions should be located here\\n**  2. This file can be imported without causing duplicate code\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  README SONNNNNzzzzz\\n**\\n**  1. This file controls the entire application theme view \\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Fonts\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Grid\\n**\\n********************************************************\\n********************************************************/\\n:global(:export) {\\n  breakpointSm: 640;\\n  breakpointMd: 1024;\\n  breakpointLg: 1366; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Colors\\n**\\n********************************************************\\n********************************************************/\\n/*******************************************************\\n********************************************************\\n**\\n**  Custom Animations\\n**\\n********************************************************\\n********************************************************/\\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\\n/* Document\\n\\t ========================================================================== */\\n/**\\n   * 1. Correct the line height in all browsers.\\n   * 2. Prevent adjustments of font size after orientation changes in iOS.\\n   */\\n:global(html) {\\n  line-height: 1.15;\\n  /* 1 */\\n  -webkit-text-size-adjust: 100%;\\n  /* 2 */ }\\n\\n/* Sections\\n\\t ========================================================================== */\\n/**\\n   * Remove the margin in all browsers.\\n   */\\n:global(body) {\\n  margin: 0; }\\n\\n/**\\n   * Render the `main` element consistently in IE.\\n   */\\n:global(main) {\\n  display: block; }\\n\\n/**\\n   * Correct the font size and margin on `h1` elements within `section` and\\n   * `article` contexts in Chrome, Firefox, and Safari.\\n   */\\n:global(h1) {\\n  font-size: 2em;\\n  margin: 0.67em 0; }\\n\\n/* Grouping content\\n\\t ========================================================================== */\\n/**\\n   * 1. Add the correct box sizing in Firefox.\\n   * 2. Show the overflow in Edge and IE.\\n   */\\n:global(hr) {\\n  box-sizing: content-box;\\n  /* 1 */\\n  height: 0;\\n  /* 1 */\\n  overflow: visible;\\n  /* 2 */ }\\n\\n/**\\n   * 1. Correct the inheritance and scaling of font size in all browsers.\\n   * 2. Correct the odd `em` font sizing in all browsers.\\n   */\\n:global(pre) {\\n  font-family: monospace, monospace;\\n  /* 1 */\\n  font-size: 1em;\\n  /* 2 */ }\\n\\n/* Text-level semantics\\n\\t ========================================================================== */\\n/**\\n   * Remove the gray background on active links in IE 10.\\n   */\\n:global(a) {\\n  background-color: transparent; }\\n\\n/**\\n   * 1. Remove the bottom border in Chrome 57-\\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n   */\\n:global(abbr[title]) {\\n  border-bottom: none;\\n  /* 1 */\\n  text-decoration: underline;\\n  /* 2 */\\n  text-decoration: underline dotted;\\n  /* 2 */ }\\n\\n/**\\n   * Add the correct font weight in Chrome, Edge, and Safari.\\n   */\\n:global(b),\\n:global(strong) {\\n  font-weight: bolder; }\\n\\n/**\\n   * 1. Correct the inheritance and scaling of font size in all browsers.\\n   * 2. Correct the odd `em` font sizing in all browsers.\\n   */\\n:global(code),\\n:global(kbd),\\n:global(samp) {\\n  font-family: monospace, monospace;\\n  /* 1 */\\n  font-size: 1em;\\n  /* 2 */ }\\n\\n/**\\n   * Add the correct font size in all browsers.\\n   */\\n:global(small) {\\n  font-size: 80%; }\\n\\n/**\\n   * Prevent `sub` and `sup` elements from affecting the line height in\\n   * all browsers.\\n   */\\n:global(sub),\\n:global(sup) {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline; }\\n\\n:global(sub) {\\n  bottom: -0.25em; }\\n\\n:global(sup) {\\n  top: -0.5em; }\\n\\n/* Embedded content\\n\\t ========================================================================== */\\n/**\\n   * Remove the border on images inside links in IE 10.\\n   */\\n:global(img) {\\n  border-style: none; }\\n\\n/* Forms\\n\\t ========================================================================== */\\n/**\\n   * 1. Change the font styles in all browsers.\\n   * 2. Remove the margin in Firefox and Safari.\\n   */\\n:global(button),\\n:global(input),\\n:global(optgroup),\\n:global(select),\\n:global(textarea) {\\n  font-family: inherit;\\n  /* 1 */\\n  font-size: 100%;\\n  /* 1 */\\n  line-height: 1.15;\\n  /* 1 */\\n  margin: 0;\\n  /* 2 */ }\\n\\n/**\\n   * Show the overflow in IE.\\n   * 1. Show the overflow in Edge.\\n   */\\n:global(button),\\n:global(input) {\\n  /* 1 */\\n  overflow: visible; }\\n\\n/**\\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n   * 1. Remove the inheritance of text transform in Firefox.\\n   */\\n:global(button),\\n:global(select) {\\n  /* 1 */\\n  text-transform: none; }\\n\\n/**\\n   * Correct the inability to style clickable types in iOS and Safari.\\n   */\\n:global(button),\\n:global([type=\\\"button\\\"]),\\n:global([type=\\\"reset\\\"]),\\n:global([type=\\\"submit\\\"]) {\\n  -webkit-appearance: button; }\\n\\n/**\\n   * Remove the inner border and padding in Firefox.\\n   */\\n:global(button::-moz-focus-inner),\\n:global([type=\\\"button\\\"]::-moz-focus-inner),\\n:global([type=\\\"reset\\\"]::-moz-focus-inner),\\n:global([type=\\\"submit\\\"]::-moz-focus-inner) {\\n  border-style: none;\\n  padding: 0; }\\n\\n/**\\n   * Restore the focus styles unset by the previous rule.\\n   */\\n:global(button:-moz-focusring),\\n:global([type=\\\"button\\\"]:-moz-focusring),\\n:global([type=\\\"reset\\\"]:-moz-focusring),\\n:global([type=\\\"submit\\\"]:-moz-focusring) {\\n  outline: 1px dotted ButtonText; }\\n\\n/**\\n   * Correct the padding in Firefox.\\n   */\\n:global(fieldset) {\\n  padding: 0.35em 0.75em 0.625em; }\\n\\n/**\\n   * 1. Correct the text wrapping in Edge and IE.\\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\\n   * 3. Remove the padding so developers are not caught out when they zero out\\n   *    `fieldset` elements in all browsers.\\n   */\\n:global(legend) {\\n  box-sizing: border-box;\\n  /* 1 */\\n  color: inherit;\\n  /* 2 */\\n  display: table;\\n  /* 1 */\\n  max-width: 100%;\\n  /* 1 */\\n  padding: 0;\\n  /* 3 */\\n  white-space: normal;\\n  /* 1 */ }\\n\\n/**\\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n   */\\n:global(progress) {\\n  vertical-align: baseline; }\\n\\n/**\\n   * Remove the default vertical scrollbar in IE 10+.\\n   */\\n:global(textarea) {\\n  overflow: auto; }\\n\\n/**\\n   * 1. Add the correct box sizing in IE 10.\\n   * 2. Remove the padding in IE 10.\\n   */\\n:global([type=\\\"checkbox\\\"]),\\n:global([type=\\\"radio\\\"]) {\\n  box-sizing: border-box;\\n  /* 1 */\\n  padding: 0;\\n  /* 2 */ }\\n\\n/**\\n   * Correct the cursor style of increment and decrement buttons in Chrome.\\n   */\\n:global([type=\\\"number\\\"]::-webkit-inner-spin-button),\\n:global([type=\\\"number\\\"]::-webkit-outer-spin-button) {\\n  height: auto; }\\n\\n/**\\n   * 1. Correct the odd appearance in Chrome and Safari.\\n   * 2. Correct the outline style in Safari.\\n   */\\n:global([type=\\\"search\\\"]) {\\n  -webkit-appearance: textfield;\\n  /* 1 */\\n  outline-offset: -2px;\\n  /* 2 */ }\\n\\n/**\\n   * Remove the inner padding in Chrome and Safari on macOS.\\n   */\\n:global([type=\\\"search\\\"]::-webkit-search-decoration) {\\n  -webkit-appearance: none; }\\n\\n/**\\n   * 1. Correct the inability to style clickable types in iOS and Safari.\\n   * 2. Change font properties to `inherit` in Safari.\\n   */\\n:global(::-webkit-file-upload-button) {\\n  -webkit-appearance: button;\\n  /* 1 */\\n  font: inherit;\\n  /* 2 */ }\\n\\n/* Interactive\\n\\t ========================================================================== */\\n/*\\n   * Add the correct display in Edge, IE 10+, and Firefox.\\n   */\\n:global(details) {\\n  display: block; }\\n\\n/*\\n   * Add the correct display in all browsers.\\n   */\\n:global(summary) {\\n  display: list-item; }\\n\\n/* Misc\\n\\t ========================================================================== */\\n/**\\n   * Add the correct display in IE 10+.\\n   */\\n:global(template) {\\n  display: none; }\\n\\n/**\\n   * Add the correct display in IE 10.\\n   */\\n:global([hidden]) {\\n  display: none; }\\n\\n/*reset css*/\\n:global(a) {\\n  text-decoration: none;\\n  color: inherit;\\n  cursor: pointer; }\\n\\n:global(button) {\\n  background-color: transparent;\\n  color: inherit;\\n  border-width: 0;\\n  padding: 0;\\n  cursor: pointer; }\\n\\n:global(figure) {\\n  margin: 0; }\\n\\n:global(input::-moz-focus-inner) {\\n  border: 0;\\n  padding: 0;\\n  margin: 0; }\\n\\n:global(ul), :global(ol), :global(dd) {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none; }\\n\\n:global(h1), :global(h2), :global(h3), :global(h4), :global(h5), :global(h6) {\\n  margin: 0;\\n  font-size: inherit;\\n  font-weight: inherit; }\\n\\n:global(p) {\\n  margin: 0; }\\n\\n:global(cite) {\\n  font-style: normal; }\\n\\n:global(fieldset) {\\n  border-width: 0;\\n  padding: 0;\\n  margin: 0; }\\n\\n:global(html) {\\n  font-size: 1px;\\n  /*for using REM units*/ }\\n\\n:global(body) {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\", \\\"Ubuntu\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\", \\\"sans-serif\\\";\\n  font-size: 16rem;\\n  font-weight: 400;\\n  line-height: 1.3;\\n  color: #222;\\n  max-width: 100vw;\\n  overflow-x: hidden; }\\n\\n:global(.grid-x) {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n:global(.container) {\\n  padding: 20rem 20rem;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n@media screen and (min-width: 40em) {\\n  :global(.container) {\\n    padding: 20rem 40rem; } }\\n\\n@media screen and (min-width: 64em) {\\n  :global(.container) {\\n    padding: 60rem 40rem; } }\\n\\n@media (min-width: 576px) {\\n  :global(.container) {\\n    max-width: 640px; } }\\n\\n@media (min-width: 768px) {\\n  :global(.container) {\\n    max-width: 720px; } }\\n\\n@media (min-width: 1023px) {\\n  :global(.container) {\\n    /* max-width: 980px; */\\n    max-width: 1005px; } }\\n\\n@media (min-width: 1366px) {\\n  :global(.container) {\\n    max-width: 1300px; } }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Font Styles\\n**\\n********************************************************\\n********************************************************/\\n:global(main) :global(h3) {\\n  font-size: 13rem;\\n  font-weight: 600;\\n  color: #414042; }\\n  @media (min-width: 1024px) {\\n    :global(main) :global(h3) {\\n      font-size: 23rem; } }\\n\\n:global(main) :global(h2) {\\n  font-size: 13rem;\\n  font-weight: 600;\\n  color: #3B3B3B; }\\n  @media (min-width: 1024px) {\\n    :global(main) :global(h2) {\\n      font-size: 23rem; } }\\n\\n:global(main) :global(a) {\\n  font-size: 12rem;\\n  color: #989898;\\n  font-weight: 300;\\n  font-style: italic; }\\n  @media (min-width: 1024px) {\\n    :global(main) :global(a) {\\n      font-size: 14rem; } }\\n\\n:global(main) :global(p), :global(main) :global(li) {\\n  line-height: 16px;\\n  font-weight: 300;\\n  font-size: 13rem;\\n  color: #58595b; }\\n  @media (min-width: 1024px) {\\n    :global(main) :global(p), :global(main) :global(li) {\\n      font-size: 18rem;\\n      line-height: 23px; } }\\n\\n:global(main) :global(i) :global(>) :global(span) {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\", \\\"Ubuntu\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\", \\\"sans-serif\\\";\\n  font-weight: 300;\\n  font-size: 13rem;\\n  color: #58595b; }\\n  @media (min-width: 1024px) {\\n    :global(main) :global(i) :global(>) :global(span) {\\n      font-size: 18rem; } }\\n\\n:global(main) :global(a:hover) :global(span.text-underline::before) {\\n  transform: translate(100%); }\\n\\n:global(main) :global(strong) {\\n  font-weight: 600 !important; }\\n\\n:global(button:focus) {\\n  outline: 0; }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Helpers\\n**\\n********************************************************\\n********************************************************/\\n:global(.justify-center) {\\n  display: flex;\\n  justify-content: center; }\\n\\n:global(.align-center) {\\n  display: flex;\\n  align-items: center; }\\n\\n:global(.center-all) {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n@media screen and (min-width: 40em) {\\n  :global(.hide-for-medium) {\\n    /* display: none; */ } }\\n\\n:global(a:hover) :global(.circleIcon) {\\n  transform: rotate(90deg); }\\n\\n@media screen and (min-width: 40em) {\\n  :global(.hide-for-small) {\\n    display: none !important; } }\\n\\n:global(.show-for-small) {\\n  display: none !important; }\\n\\n@media screen and (min-width: 40em) {\\n  :global(.show-for-small) {\\n    display: block !important; } }\\n\\n/*******************************************************\\n********************************************************\\n**\\n**  Animations\\n**\\n********************************************************\\n********************************************************/\\n@keyframes -global-fadeInBottom {\\n  0% {\\n    top: 20px;\\n    opacity: 0; }\\n  65% {\\n    top: 20px;\\n    opacity: 0; }\\n  100% {\\n    top: 0px;\\n    opacity: 1; } }\\n\\n@keyframes -global-fadeInTop {\\n  0% {\\n    transform: translateY(-20px);\\n    /* top:  -20px; */\\n    opacity: 0; }\\n  65% {\\n    /* top: -20px; */\\n    transform: translateY(-20px);\\n    opacity: 0; }\\n  100% {\\n    /* top: 0px; */\\n    transform: translateY(0px);\\n    opacity: 1; } }\\n\\n@keyframes -global-fadeIn {\\n  0% {\\n    opacity: 0; }\\n  65% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n@keyframes -global-fadeOutTop {\\n  0% {\\n    opacity: 1; }\\n  65% {\\n    opacity: 1; }\\n  100% {\\n    transform: translateY(-10px);\\n    opacity: 0; } }\\n\\n@keyframes -global-slightSpin {\\n  0% {\\n    transform: rotate(0deg); }\\n  100% {\\n    transform: rotate(45deg); } }\\n\\n@keyframes -global-fadeInLeft {\\n  0% {\\n    transform: translateX(-20px);\\n    opacity: 0; }\\n  65% {\\n    transform: translateX(-20px);\\n    opacity: 0; }\\n  100% {\\n    transform: translateX(0px);\\n    opacity: 1; } }\\n\\n@keyframes -global-leaveScreen {\\n  100% {\\n    transform: translateX(9999px); } }\\n\\n:global(.background) {\\n  background: url(\\\"../background-images/so-white.png\\\");\\n  position: fixed;\\n  width: 100vw;\\n  height: 100vh;\\n  top: 0;\\n  left: 0;\\n  z-index: -1; }\\n/*# sourceMappingURL=data:application/json;base64, */</style>\\n\\n<GoogleAnalytics />\\n<Navigation segment={segment} />\\n<div class=\\\"background\\\"></div>\\n<main>\\n\\t<slot ></slot>\\n</main>\\n<Footer />\"],\"names\":[],\"mappings\":\"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\"}"
};

const Layout = index.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

	let { segment } = $$props;

	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0) $$bindings.segment(segment);

	$$result.css.add(css$7);

	return `${index.validate_component(GoogleAnalytics, 'GoogleAnalytics').$$render($$result, {}, {}, {})}
	${index.validate_component(Navigation, 'Navigation').$$render($$result, { segment: segment }, {}, {})}
	<div class="background"></div>
	<main>
		${$$slots.default ? $$slots.default({}) : ``}
	</main>
	${index.validate_component(Footer, 'Footer').$$render($$result, {}, {}, {})}`;
});

// This file is generated by Sapper â€” do not edit it!

const manifest = {
	server_routes: [
		
	],

	pages: [
		{
			// index.svelte
			pattern: /^\/$/,
			parts: [
				{ name: "index", file: "index.svelte", component: index$1.default }
			]
		},

		{
			// experience.svelte
			pattern: /^\/experience\/?$/,
			parts: [
				{ name: "experience", file: "experience.svelte", component: experience.default }
			]
		},

		{
			// projects/creative-revolt.svelte
			pattern: /^\/projects\/creative-revolt\/?$/,
			parts: [
				null,
				{ name: "projects_creative$45revolt", file: "projects/creative-revolt.svelte", component: creativeRevolt.default }
			]
		},

		{
			// projects/university-park.svelte
			pattern: /^\/projects\/university-park\/?$/,
			parts: [
				null,
				{ name: "projects_university$45park", file: "projects/university-park.svelte", component: universityPark.default }
			]
		},

		{
			// projects/stallion.svelte
			pattern: /^\/projects\/stallion\/?$/,
			parts: [
				null,
				{ name: "projects_stallion", file: "projects/stallion.svelte", component: stallion.default }
			]
		},

		{
			// projects/halcyon.svelte
			pattern: /^\/projects\/halcyon\/?$/,
			parts: [
				null,
				{ name: "projects_halcyon", file: "projects/halcyon.svelte", component: halcyon.default }
			]
		},

		{
			// about.svelte
			pattern: /^\/about\/?$/,
			parts: [
				{ name: "about", file: "about.svelte", component: about.default }
			]
		}
	],

	root: Layout,
	root_preload: () => {},
	error: Error$1
};

const build_dir = "__sapper__/dev";

const src_dir = "src";

function get_server_route_handler(routes) {
	async function handle_route(route, req, res, next) {
		req.params = route.params(route.pattern.exec(req.path));

		const method = req.method.toLowerCase();
		// 'delete' cannot be exported from a module because it is a keyword,
		// so check for 'del' instead
		const method_export = method === 'delete' ? 'del' : method;
		const handle_method = route.handlers[method_export];
		if (handle_method) {
			if (process.env.SAPPER_EXPORT) {
				const { write, end, setHeader } = res;
				const chunks = [];
				const headers = {};

				// intercept data so that it can be exported
				res.write = function(chunk) {
					chunks.push(Buffer.from(chunk));
					write.apply(res, arguments);
				};

				res.setHeader = function(name, value) {
					headers[name.toLowerCase()] = value;
					setHeader.apply(res, arguments);
				};

				res.end = function(chunk) {
					if (chunk) chunks.push(Buffer.from(chunk));
					end.apply(res, arguments);

					process.send({
						__sapper__: true,
						event: 'file',
						url: req.url,
						method: req.method,
						status: res.statusCode,
						type: headers['content-type'],
						body: Buffer.concat(chunks).toString()
					});
				};
			}

			const handle_next = (err) => {
				if (err) {
					res.statusCode = 500;
					res.end(err.message);
				} else {
					process.nextTick(next);
				}
			};

			try {
				await handle_method(req, res, handle_next);
			} catch (err) {
				console.error(err);
				handle_next(err);
			}
		} else {
			// no matching handler for method
			process.nextTick(next);
		}
	}

	return function find_route(req, res, next) {
		for (const route of routes) {
			if (route.pattern.test(req.path)) {
				handle_route(route, req, res, next);
				return;
			}
		}

		next();
	};
}

/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 * @public
 */

var parse_1 = parse;
var serialize_1 = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}

var cookie = {
	parse: parse_1,
	serialize: serialize_1
};

var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';
var unsafeChars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var escaped = {
    '<': '\\u003C',
    '>': '\\u003E',
    '/': '\\u002F',
    '\\': '\\\\',
    '\b': '\\b',
    '\f': '\\f',
    '\n': '\\n',
    '\r': '\\r',
    '\t': '\\t',
    '\0': '\\0',
    '\u2028': '\\u2028',
    '\u2029': '\\u2029'
};
var objectProtoOwnPropertyNames = Object.getOwnPropertyNames(Object.prototype).sort().join('\0');
function devalue(value) {
    var counts = new Map();
    function walk(thing) {
        if (typeof thing === 'function') {
            throw new Error("Cannot stringify a function");
        }
        if (counts.has(thing)) {
            counts.set(thing, counts.get(thing) + 1);
            return;
        }
        counts.set(thing, 1);
        if (!isPrimitive(thing)) {
            var type = getType(thing);
            switch (type) {
                case 'Number':
                case 'String':
                case 'Boolean':
                case 'Date':
                case 'RegExp':
                    return;
                case 'Array':
                    thing.forEach(walk);
                    break;
                case 'Set':
                case 'Map':
                    Array.from(thing).forEach(walk);
                    break;
                default:
                    var proto = Object.getPrototypeOf(thing);
                    if (proto !== Object.prototype &&
                        proto !== null &&
                        Object.getOwnPropertyNames(proto).sort().join('\0') !== objectProtoOwnPropertyNames) {
                        throw new Error("Cannot stringify arbitrary non-POJOs");
                    }
                    if (Object.getOwnPropertySymbols(thing).length > 0) {
                        throw new Error("Cannot stringify POJOs with symbolic keys");
                    }
                    Object.keys(thing).forEach(function (key) { return walk(thing[key]); });
            }
        }
    }
    walk(value);
    var names = new Map();
    Array.from(counts)
        .filter(function (entry) { return entry[1] > 1; })
        .sort(function (a, b) { return b[1] - a[1]; })
        .forEach(function (entry, i) {
        names.set(entry[0], getName(i));
    });
    function stringify(thing) {
        if (names.has(thing)) {
            return names.get(thing);
        }
        if (isPrimitive(thing)) {
            return stringifyPrimitive(thing);
        }
        var type = getType(thing);
        switch (type) {
            case 'Number':
            case 'String':
            case 'Boolean':
                return "Object(" + stringify(thing.valueOf()) + ")";
            case 'RegExp':
                return thing.toString();
            case 'Date':
                return "new Date(" + thing.getTime() + ")";
            case 'Array':
                var members = thing.map(function (v, i) { return i in thing ? stringify(v) : ''; });
                var tail = thing.length === 0 || (thing.length - 1 in thing) ? '' : ',';
                return "[" + members.join(',') + tail + "]";
            case 'Set':
            case 'Map':
                return "new " + type + "([" + Array.from(thing).map(stringify).join(',') + "])";
            default:
                var obj = "{" + Object.keys(thing).map(function (key) { return safeKey(key) + ":" + stringify(thing[key]); }).join(',') + "}";
                var proto = Object.getPrototypeOf(thing);
                if (proto === null) {
                    return Object.keys(thing).length > 0
                        ? "Object.assign(Object.create(null)," + obj + ")"
                        : "Object.create(null)";
                }
                return obj;
        }
    }
    var str = stringify(value);
    if (names.size) {
        var params_1 = [];
        var statements_1 = [];
        var values_1 = [];
        names.forEach(function (name, thing) {
            params_1.push(name);
            if (isPrimitive(thing)) {
                values_1.push(stringifyPrimitive(thing));
                return;
            }
            var type = getType(thing);
            switch (type) {
                case 'Number':
                case 'String':
                case 'Boolean':
                    values_1.push("Object(" + stringify(thing.valueOf()) + ")");
                    break;
                case 'RegExp':
                    values_1.push(thing.toString());
                    break;
                case 'Date':
                    values_1.push("new Date(" + thing.getTime() + ")");
                    break;
                case 'Array':
                    values_1.push("Array(" + thing.length + ")");
                    thing.forEach(function (v, i) {
                        statements_1.push(name + "[" + i + "]=" + stringify(v));
                    });
                    break;
                case 'Set':
                    values_1.push("new Set");
                    statements_1.push(name + "." + Array.from(thing).map(function (v) { return "add(" + stringify(v) + ")"; }).join('.'));
                    break;
                case 'Map':
                    values_1.push("new Map");
                    statements_1.push(name + "." + Array.from(thing).map(function (_a) {
                        var k = _a[0], v = _a[1];
                        return "set(" + stringify(k) + ", " + stringify(v) + ")";
                    }).join('.'));
                    break;
                default:
                    values_1.push(Object.getPrototypeOf(thing) === null ? 'Object.create(null)' : '{}');
                    Object.keys(thing).forEach(function (key) {
                        statements_1.push("" + name + safeProp(key) + "=" + stringify(thing[key]));
                    });
            }
        });
        statements_1.push("return " + str);
        return "(function(" + params_1.join(',') + "){" + statements_1.join(';') + "}(" + values_1.join(',') + "))";
    }
    else {
        return str;
    }
}
function getName(num) {
    var name = '';
    do {
        name = chars[num % chars.length] + name;
        num = ~~(num / chars.length) - 1;
    } while (num >= 0);
    return reserved.test(name) ? name + "_" : name;
}
function isPrimitive(thing) {
    return Object(thing) !== thing;
}
function stringifyPrimitive(thing) {
    if (typeof thing === 'string')
        return stringifyString(thing);
    if (thing === void 0)
        return 'void 0';
    if (thing === 0 && 1 / thing < 0)
        return '-0';
    var str = String(thing);
    if (typeof thing === 'number')
        return str.replace(/^(-)?0\./, '$1.');
    return str;
}
function getType(thing) {
    return Object.prototype.toString.call(thing).slice(8, -1);
}
function escapeUnsafeChar(c) {
    return escaped[c] || c;
}
function escapeUnsafeChars(str) {
    return str.replace(unsafeChars, escapeUnsafeChar);
}
function safeKey(key) {
    return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escapeUnsafeChars(JSON.stringify(key));
}
function safeProp(key) {
    return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? "." + key : "[" + escapeUnsafeChars(JSON.stringify(key)) + "]";
}
function stringifyString(str) {
    var result = '"';
    for (var i = 0; i < str.length; i += 1) {
        var char = str.charAt(i);
        var code = char.charCodeAt(0);
        if (char === '"') {
            result += '\\"';
        }
        else if (char in escaped) {
            result += escaped[char];
        }
        else if (code >= 0xd800 && code <= 0xdfff) {
            var next = str.charCodeAt(i + 1);
            // If this is the beginning of a [high, low] surrogate pair,
            // add the next two characters, otherwise escape
            if (code <= 0xdbff && (next >= 0xdc00 && next <= 0xdfff)) {
                result += char + str[++i];
            }
            else {
                result += "\\u" + code.toString(16).toUpperCase();
            }
        }
        else {
            result += char;
        }
    }
    result += '"';
    return result;
}

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = require('encoding').convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch$1(url, opts) {

	// allow custom promise
	if (!fetch$1.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch$1.Promise;

	// wrap http.request into fetch
	return new fetch$1.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch$1.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch$1(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch$1.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch$1.Promise = global.Promise;

function get_page_handler(
	manifest,
	session_getter
) {
	const get_build_info =  () => JSON.parse(fs.readFileSync(path.join(build_dir, 'build.json'), 'utf-8'))
		;

	const template =  () => read_template(src_dir)
		;

	const has_service_worker = fs.existsSync(path.join(build_dir, 'service-worker.js'));

	const { server_routes, pages } = manifest;
	const error_route = manifest.error;

	function bail(req, res, err) {
		console.error(err);

		const message =  escape_html(err.message) ;

		res.statusCode = 500;
		res.end(`<pre>${message}</pre>`);
	}

	function handle_error(req, res, statusCode, error) {
		handle_page({
			pattern: null,
			parts: [
				{ name: null, component: error_route }
			]
		}, req, res, statusCode, error || new Error('Unknown error in preload function'));
	}

	async function handle_page(page, req, res, status = 200, error = null) {
		const is_service_worker_index = req.path === '/service-worker-index.html';
		const build_info




 = get_build_info();

		res.setHeader('Content-Type', 'text/html');
		res.setHeader('Cache-Control',  'no-cache' );

		// preload main.js and current route
		// TODO detect other stuff we can preload? images, CSS, fonts?
		let preloaded_chunks = Array.isArray(build_info.assets.main) ? build_info.assets.main : [build_info.assets.main];
		if (!error && !is_service_worker_index) {
			page.parts.forEach(part => {
				if (!part) return;

				// using concat because it could be a string or an array. thanks webpack!
				preloaded_chunks = preloaded_chunks.concat(build_info.assets[part.name]);
			});
		}

		if (build_info.bundler === 'rollup') {
			// TODO add dependencies and CSS
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map(file => `<${req.baseUrl}/client/${file}>;rel="modulepreload"`)
				.join(', ');

			res.setHeader('Link', link);
		} else {
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map((file) => {
					const as = /\.css$/.test(file) ? 'style' : 'script';
					return `<${req.baseUrl}/client/${file}>;rel="preload";as="${as}"`;
				})
				.join(', ');

			res.setHeader('Link', link);
		}

		const session = session_getter(req, res);

		let redirect;
		let preload_error;

		const preload_context = {
			redirect: (statusCode, location) => {
				if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
					throw new Error(`Conflicting redirects`);
				}
				location = location.replace(/^\//g, ''); // leading slash (only)
				redirect = { statusCode, location };
			},
			error: (statusCode, message) => {
				preload_error = { statusCode, message };
			},
			fetch: (url, opts) => {
				const parsed = new Url.URL(url, `http://127.0.0.1:${process.env.PORT}${req.baseUrl ? req.baseUrl + '/' :''}`);

				if (opts) {
					opts = Object.assign({}, opts);

					const include_cookies = (
						opts.credentials === 'include' ||
						opts.credentials === 'same-origin' && parsed.origin === `http://127.0.0.1:${process.env.PORT}`
					);

					if (include_cookies) {
						opts.headers = Object.assign({}, opts.headers);

						const cookies = Object.assign(
							{},
							cookie.parse(req.headers.cookie || ''),
							cookie.parse(opts.headers.cookie || '')
						);

						const set_cookie = res.getHeader('Set-Cookie');
						(Array.isArray(set_cookie) ? set_cookie : [set_cookie]).forEach(str => {
							const match = /([^=]+)=([^;]+)/.exec(str);
							if (match) cookies[match[1]] = match[2];
						});

						const str = Object.keys(cookies)
							.map(key => `${key}=${cookies[key]}`)
							.join('; ');

						opts.headers.cookie = str;
					}
				}

				return fetch$1(parsed.href, opts);
			}
		};

		let preloaded;
		let match;
		let params;

		try {
			const root_preloaded = manifest.root_preload
				? manifest.root_preload.call(preload_context, {
					host: req.headers.host,
					path: req.path,
					query: req.query,
					params: {}
				}, session)
				: {};

			match = error ? null : page.pattern.exec(req.path);


			let toPreload = [root_preloaded];
			if (!is_service_worker_index) {
				toPreload = toPreload.concat(page.parts.map(part => {
					if (!part) return null;

					// the deepest level is used below, to initialise the store
					params = part.params ? part.params(match) : {};

					return part.preload
						? part.preload.call(preload_context, {
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}, session)
						: {};
				}));
			}

			preloaded = await Promise.all(toPreload);
		} catch (err) {
			if (error) {
				return bail(req, res, err)
			}

			preload_error = { statusCode: 500, message: err };
			preloaded = []; // appease TypeScript
		}

		try {
			if (redirect) {
				const location = Url.resolve((req.baseUrl || '') + '/', redirect.location);

				res.statusCode = redirect.statusCode;
				res.setHeader('Location', location);
				res.end();

				return;
			}

			if (preload_error) {
				handle_error(req, res, preload_error.statusCode, preload_error.message);
				return;
			}

			const segments = req.path.split('/').filter(Boolean);

			// TODO make this less confusing
			const layout_segments = [segments[0]];
			let l = 1;

			page.parts.forEach((part, i) => {
				layout_segments[l] = segments[i + 1];
				if (!part) return null;
				l++;
			});

			const props = {
				stores: {
					page: {
						subscribe: writable({
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}).subscribe
					},
					preloading: {
						subscribe: writable(null).subscribe
					},
					session: writable(session)
				},
				segments: layout_segments,
				status: error ? status : 200,
				error: error ? error instanceof Error ? error : { message: error } : null,
				level0: {
					props: preloaded[0]
				},
				level1: {
					segment: segments[0],
					props: {}
				}
			};

			if (!is_service_worker_index) {
				let l = 1;
				for (let i = 0; i < page.parts.length; i += 1) {
					const part = page.parts[i];
					if (!part) continue;

					props[`level${l++}`] = {
						component: part.component,
						props: preloaded[i + 1] || {},
						segment: segments[i]
					};
				}
			}

			const { html, head, css } = App.render(props);

			const serialized = {
				preloaded: `[${preloaded.map(data => try_serialize(data)).join(',')}]`,
				session: session && try_serialize(session, err => {
					throw new Error(`Failed to serialize session data: ${err.message}`);
				}),
				error: error && try_serialize(props.error)
			};

			let script = `__SAPPER__={${[
				error && `error:${serialized.error},status:${status}`,
				`baseUrl:"${req.baseUrl}"`,
				serialized.preloaded && `preloaded:${serialized.preloaded}`,
				serialized.session && `session:${serialized.session}`
			].filter(Boolean).join(',')}};`;

			if (has_service_worker) {
				script += `if('serviceWorker' in navigator)navigator.serviceWorker.register('${req.baseUrl}/service-worker.js');`;
			}

			const file = [].concat(build_info.assets.main).filter(file => file && /\.js$/.test(file))[0];
			const main = `${req.baseUrl}/client/${file}`;

			if (build_info.bundler === 'rollup') {
				if (build_info.legacy_assets) {
					const legacy_main = `${req.baseUrl}/client/legacy/${build_info.legacy_assets.main}`;
					script += `(function(){try{eval("async function x(){}");var main="${main}"}catch(e){main="${legacy_main}"};var s=document.createElement("script");try{new Function("if(0)import('')")();s.src=main;s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main",main);}document.head.appendChild(s);}());`;
				} else {
					script += `var s=document.createElement("script");try{new Function("if(0)import('')")();s.src="${main}";s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main","${main}")}document.head.appendChild(s)`;
				}
			} else {
				script += `</script><script src="${main}">`;
			}

			let styles;

			// TODO make this consistent across apps
			// TODO embed build_info in placeholder.ts
			if (build_info.css && build_info.css.main) {
				const css_chunks = new Set();
				if (build_info.css.main) css_chunks.add(build_info.css.main);
				page.parts.forEach(part => {
					if (!part) return;
					const css_chunks_for_part = build_info.css.chunks[part.file];

					if (css_chunks_for_part) {
						css_chunks_for_part.forEach(file => {
							css_chunks.add(file);
						});
					}
				});

				styles = Array.from(css_chunks)
					.map(href => `<link rel="stylesheet" href="client/${href}">`)
					.join('');
			} else {
				styles = (css && css.code ? `<style>${css.code}</style>` : '');
			}

			// users can set a CSP nonce using res.locals.nonce
			const nonce_attr = (res.locals && res.locals.nonce) ? ` nonce="${res.locals.nonce}"` : '';

			const body = template()
				.replace('%sapper.base%', () => `<base href="${req.baseUrl}/">`)
				.replace('%sapper.scripts%', () => `<script${nonce_attr}>${script}</script>`)
				.replace('%sapper.html%', () => html)
				.replace('%sapper.head%', () => `<noscript id='sapper-head-start'></noscript>${head}<noscript id='sapper-head-end'></noscript>`)
				.replace('%sapper.styles%', () => styles);

			res.statusCode = status;
			res.end(body);
		} catch(err) {
			if (error) {
				bail(req, res, err);
			} else {
				handle_error(req, res, 500, err);
			}
		}
	}

	return function find_route(req, res, next) {
		if (req.path === '/service-worker-index.html') {
			const homePage = pages.find(page => page.pattern.test('/'));
			handle_page(homePage, req, res);
			return;
		}

		for (const page of pages) {
			if (page.pattern.test(req.path)) {
				handle_page(page, req, res);
				return;
			}
		}

		handle_error(req, res, 404, 'Not found');
	};
}

function read_template(dir = build_dir) {
	return fs.readFileSync(`${dir}/template.html`, 'utf-8');
}

function try_serialize(data, fail) {
	try {
		return devalue(data);
	} catch (err) {
		if (fail) fail(err);
		return null;
	}
}

function escape_html(html) {
	const chars = {
		'"' : 'quot',
		"'": '#39',
		'&': 'amp',
		'<' : 'lt',
		'>' : 'gt'
	};

	return html.replace(/["'&<>]/g, c => `&${chars[c]};`);
}

var mime_raw = "application/andrew-inset\t\t\tez\napplication/applixware\t\t\t\taw\napplication/atom+xml\t\t\t\tatom\napplication/atomcat+xml\t\t\t\tatomcat\napplication/atomsvc+xml\t\t\t\tatomsvc\napplication/ccxml+xml\t\t\t\tccxml\napplication/cdmi-capability\t\t\tcdmia\napplication/cdmi-container\t\t\tcdmic\napplication/cdmi-domain\t\t\t\tcdmid\napplication/cdmi-object\t\t\t\tcdmio\napplication/cdmi-queue\t\t\t\tcdmiq\napplication/cu-seeme\t\t\t\tcu\napplication/davmount+xml\t\t\tdavmount\napplication/docbook+xml\t\t\t\tdbk\napplication/dssc+der\t\t\t\tdssc\napplication/dssc+xml\t\t\t\txdssc\napplication/ecmascript\t\t\t\tecma\napplication/emma+xml\t\t\t\temma\napplication/epub+zip\t\t\t\tepub\napplication/exi\t\t\t\t\texi\napplication/font-tdpfr\t\t\t\tpfr\napplication/gml+xml\t\t\t\tgml\napplication/gpx+xml\t\t\t\tgpx\napplication/gxf\t\t\t\t\tgxf\napplication/hyperstudio\t\t\t\tstk\napplication/inkml+xml\t\t\t\tink inkml\napplication/ipfix\t\t\t\tipfix\napplication/java-archive\t\t\tjar\napplication/java-serialized-object\t\tser\napplication/java-vm\t\t\t\tclass\napplication/javascript\t\t\t\tjs\napplication/json\t\t\t\tjson map\napplication/jsonml+json\t\t\t\tjsonml\napplication/lost+xml\t\t\t\tlostxml\napplication/mac-binhex40\t\t\thqx\napplication/mac-compactpro\t\t\tcpt\napplication/mads+xml\t\t\t\tmads\napplication/marc\t\t\t\tmrc\napplication/marcxml+xml\t\t\t\tmrcx\napplication/mathematica\t\t\t\tma nb mb\napplication/mathml+xml\t\t\t\tmathml\napplication/mbox\t\t\t\tmbox\napplication/mediaservercontrol+xml\t\tmscml\napplication/metalink+xml\t\t\tmetalink\napplication/metalink4+xml\t\t\tmeta4\napplication/mets+xml\t\t\t\tmets\napplication/mods+xml\t\t\t\tmods\napplication/mp21\t\t\t\tm21 mp21\napplication/mp4\t\t\t\t\tmp4s\napplication/msword\t\t\t\tdoc dot\napplication/mxf\t\t\t\t\tmxf\napplication/octet-stream\tbin dms lrf mar so dist distz pkg bpk dump elc deploy\napplication/oda\t\t\t\t\toda\napplication/oebps-package+xml\t\t\topf\napplication/ogg\t\t\t\t\togx\napplication/omdoc+xml\t\t\t\tomdoc\napplication/onenote\t\t\t\tonetoc onetoc2 onetmp onepkg\napplication/oxps\t\t\t\toxps\napplication/patch-ops-error+xml\t\t\txer\napplication/pdf\t\t\t\t\tpdf\napplication/pgp-encrypted\t\t\tpgp\napplication/pgp-signature\t\t\tasc sig\napplication/pics-rules\t\t\t\tprf\napplication/pkcs10\t\t\t\tp10\napplication/pkcs7-mime\t\t\t\tp7m p7c\napplication/pkcs7-signature\t\t\tp7s\napplication/pkcs8\t\t\t\tp8\napplication/pkix-attr-cert\t\t\tac\napplication/pkix-cert\t\t\t\tcer\napplication/pkix-crl\t\t\t\tcrl\napplication/pkix-pkipath\t\t\tpkipath\napplication/pkixcmp\t\t\t\tpki\napplication/pls+xml\t\t\t\tpls\napplication/postscript\t\t\t\tai eps ps\napplication/prs.cww\t\t\t\tcww\napplication/pskc+xml\t\t\t\tpskcxml\napplication/rdf+xml\t\t\t\trdf\napplication/reginfo+xml\t\t\t\trif\napplication/relax-ng-compact-syntax\t\trnc\napplication/resource-lists+xml\t\t\trl\napplication/resource-lists-diff+xml\t\trld\napplication/rls-services+xml\t\t\trs\napplication/rpki-ghostbusters\t\t\tgbr\napplication/rpki-manifest\t\t\tmft\napplication/rpki-roa\t\t\t\troa\napplication/rsd+xml\t\t\t\trsd\napplication/rss+xml\t\t\t\trss\napplication/rtf\t\t\t\t\trtf\napplication/sbml+xml\t\t\t\tsbml\napplication/scvp-cv-request\t\t\tscq\napplication/scvp-cv-response\t\t\tscs\napplication/scvp-vp-request\t\t\tspq\napplication/scvp-vp-response\t\t\tspp\napplication/sdp\t\t\t\t\tsdp\napplication/set-payment-initiation\t\tsetpay\napplication/set-registration-initiation\t\tsetreg\napplication/shf+xml\t\t\t\tshf\napplication/smil+xml\t\t\t\tsmi smil\napplication/sparql-query\t\t\trq\napplication/sparql-results+xml\t\t\tsrx\napplication/srgs\t\t\t\tgram\napplication/srgs+xml\t\t\t\tgrxml\napplication/sru+xml\t\t\t\tsru\napplication/ssdl+xml\t\t\t\tssdl\napplication/ssml+xml\t\t\t\tssml\napplication/tei+xml\t\t\t\ttei teicorpus\napplication/thraud+xml\t\t\t\ttfi\napplication/timestamped-data\t\t\ttsd\napplication/vnd.3gpp.pic-bw-large\t\tplb\napplication/vnd.3gpp.pic-bw-small\t\tpsb\napplication/vnd.3gpp.pic-bw-var\t\t\tpvb\napplication/vnd.3gpp2.tcap\t\t\ttcap\napplication/vnd.3m.post-it-notes\t\tpwn\napplication/vnd.accpac.simply.aso\t\taso\napplication/vnd.accpac.simply.imp\t\timp\napplication/vnd.acucobol\t\t\tacu\napplication/vnd.acucorp\t\t\t\tatc acutc\napplication/vnd.adobe.air-application-installer-package+zip\tair\napplication/vnd.adobe.formscentral.fcdt\t\tfcdt\napplication/vnd.adobe.fxp\t\t\tfxp fxpl\napplication/vnd.adobe.xdp+xml\t\t\txdp\napplication/vnd.adobe.xfdf\t\t\txfdf\napplication/vnd.ahead.space\t\t\tahead\napplication/vnd.airzip.filesecure.azf\t\tazf\napplication/vnd.airzip.filesecure.azs\t\tazs\napplication/vnd.amazon.ebook\t\t\tazw\napplication/vnd.americandynamics.acc\t\tacc\napplication/vnd.amiga.ami\t\t\tami\napplication/vnd.android.package-archive\t\tapk\napplication/vnd.anser-web-certificate-issue-initiation\tcii\napplication/vnd.anser-web-funds-transfer-initiation\tfti\napplication/vnd.antix.game-component\t\tatx\napplication/vnd.apple.installer+xml\t\tmpkg\napplication/vnd.apple.mpegurl\t\t\tm3u8\napplication/vnd.aristanetworks.swi\t\tswi\napplication/vnd.astraea-software.iota\t\tiota\napplication/vnd.audiograph\t\t\taep\napplication/vnd.blueice.multipass\t\tmpm\napplication/vnd.bmi\t\t\t\tbmi\napplication/vnd.businessobjects\t\t\trep\napplication/vnd.chemdraw+xml\t\t\tcdxml\napplication/vnd.chipnuts.karaoke-mmd\t\tmmd\napplication/vnd.cinderella\t\t\tcdy\napplication/vnd.claymore\t\t\tcla\napplication/vnd.cloanto.rp9\t\t\trp9\napplication/vnd.clonk.c4group\t\t\tc4g c4d c4f c4p c4u\napplication/vnd.cluetrust.cartomobile-config\t\tc11amc\napplication/vnd.cluetrust.cartomobile-config-pkg\tc11amz\napplication/vnd.commonspace\t\t\tcsp\napplication/vnd.contact.cmsg\t\t\tcdbcmsg\napplication/vnd.cosmocaller\t\t\tcmc\napplication/vnd.crick.clicker\t\t\tclkx\napplication/vnd.crick.clicker.keyboard\t\tclkk\napplication/vnd.crick.clicker.palette\t\tclkp\napplication/vnd.crick.clicker.template\t\tclkt\napplication/vnd.crick.clicker.wordbank\t\tclkw\napplication/vnd.criticaltools.wbs+xml\t\twbs\napplication/vnd.ctc-posml\t\t\tpml\napplication/vnd.cups-ppd\t\t\tppd\napplication/vnd.curl.car\t\t\tcar\napplication/vnd.curl.pcurl\t\t\tpcurl\napplication/vnd.dart\t\t\t\tdart\napplication/vnd.data-vision.rdz\t\t\trdz\napplication/vnd.dece.data\t\t\tuvf uvvf uvd uvvd\napplication/vnd.dece.ttml+xml\t\t\tuvt uvvt\napplication/vnd.dece.unspecified\t\tuvx uvvx\napplication/vnd.dece.zip\t\t\tuvz uvvz\napplication/vnd.denovo.fcselayout-link\t\tfe_launch\napplication/vnd.dna\t\t\t\tdna\napplication/vnd.dolby.mlp\t\t\tmlp\napplication/vnd.dpgraph\t\t\t\tdpg\napplication/vnd.dreamfactory\t\t\tdfac\napplication/vnd.ds-keypoint\t\t\tkpxx\napplication/vnd.dvb.ait\t\t\t\tait\napplication/vnd.dvb.service\t\t\tsvc\napplication/vnd.dynageo\t\t\t\tgeo\napplication/vnd.ecowin.chart\t\t\tmag\napplication/vnd.enliven\t\t\t\tnml\napplication/vnd.epson.esf\t\t\tesf\napplication/vnd.epson.msf\t\t\tmsf\napplication/vnd.epson.quickanime\t\tqam\napplication/vnd.epson.salt\t\t\tslt\napplication/vnd.epson.ssf\t\t\tssf\napplication/vnd.eszigno3+xml\t\t\tes3 et3\napplication/vnd.ezpix-album\t\t\tez2\napplication/vnd.ezpix-package\t\t\tez3\napplication/vnd.fdf\t\t\t\tfdf\napplication/vnd.fdsn.mseed\t\t\tmseed\napplication/vnd.fdsn.seed\t\t\tseed dataless\napplication/vnd.flographit\t\t\tgph\napplication/vnd.fluxtime.clip\t\t\tftc\napplication/vnd.framemaker\t\t\tfm frame maker book\napplication/vnd.frogans.fnc\t\t\tfnc\napplication/vnd.frogans.ltf\t\t\tltf\napplication/vnd.fsc.weblaunch\t\t\tfsc\napplication/vnd.fujitsu.oasys\t\t\toas\napplication/vnd.fujitsu.oasys2\t\t\toa2\napplication/vnd.fujitsu.oasys3\t\t\toa3\napplication/vnd.fujitsu.oasysgp\t\t\tfg5\napplication/vnd.fujitsu.oasysprs\t\tbh2\napplication/vnd.fujixerox.ddd\t\t\tddd\napplication/vnd.fujixerox.docuworks\t\txdw\napplication/vnd.fujixerox.docuworks.binder\txbd\napplication/vnd.fuzzysheet\t\t\tfzs\napplication/vnd.genomatix.tuxedo\t\ttxd\napplication/vnd.geogebra.file\t\t\tggb\napplication/vnd.geogebra.tool\t\t\tggt\napplication/vnd.geometry-explorer\t\tgex gre\napplication/vnd.geonext\t\t\t\tgxt\napplication/vnd.geoplan\t\t\t\tg2w\napplication/vnd.geospace\t\t\tg3w\napplication/vnd.gmx\t\t\t\tgmx\napplication/vnd.google-earth.kml+xml\t\tkml\napplication/vnd.google-earth.kmz\t\tkmz\napplication/vnd.grafeq\t\t\t\tgqf gqs\napplication/vnd.groove-account\t\t\tgac\napplication/vnd.groove-help\t\t\tghf\napplication/vnd.groove-identity-message\t\tgim\napplication/vnd.groove-injector\t\t\tgrv\napplication/vnd.groove-tool-message\t\tgtm\napplication/vnd.groove-tool-template\t\ttpl\napplication/vnd.groove-vcard\t\t\tvcg\napplication/vnd.hal+xml\t\t\t\thal\napplication/vnd.handheld-entertainment+xml\tzmm\napplication/vnd.hbci\t\t\t\thbci\napplication/vnd.hhe.lesson-player\t\tles\napplication/vnd.hp-hpgl\t\t\t\thpgl\napplication/vnd.hp-hpid\t\t\t\thpid\napplication/vnd.hp-hps\t\t\t\thps\napplication/vnd.hp-jlyt\t\t\t\tjlt\napplication/vnd.hp-pcl\t\t\t\tpcl\napplication/vnd.hp-pclxl\t\t\tpclxl\napplication/vnd.hydrostatix.sof-data\t\tsfd-hdstx\napplication/vnd.ibm.minipay\t\t\tmpy\napplication/vnd.ibm.modcap\t\t\tafp listafp list3820\napplication/vnd.ibm.rights-management\t\tirm\napplication/vnd.ibm.secure-container\t\tsc\napplication/vnd.iccprofile\t\t\ticc icm\napplication/vnd.igloader\t\t\tigl\napplication/vnd.immervision-ivp\t\t\tivp\napplication/vnd.immervision-ivu\t\t\tivu\napplication/vnd.insors.igm\t\t\tigm\napplication/vnd.intercon.formnet\t\txpw xpx\napplication/vnd.intergeo\t\t\ti2g\napplication/vnd.intu.qbo\t\t\tqbo\napplication/vnd.intu.qfx\t\t\tqfx\napplication/vnd.ipunplugged.rcprofile\t\trcprofile\napplication/vnd.irepository.package+xml\t\tirp\napplication/vnd.is-xpr\t\t\t\txpr\napplication/vnd.isac.fcs\t\t\tfcs\napplication/vnd.jam\t\t\t\tjam\napplication/vnd.jcp.javame.midlet-rms\t\trms\napplication/vnd.jisp\t\t\t\tjisp\napplication/vnd.joost.joda-archive\t\tjoda\napplication/vnd.kahootz\t\t\t\tktz ktr\napplication/vnd.kde.karbon\t\t\tkarbon\napplication/vnd.kde.kchart\t\t\tchrt\napplication/vnd.kde.kformula\t\t\tkfo\napplication/vnd.kde.kivio\t\t\tflw\napplication/vnd.kde.kontour\t\t\tkon\napplication/vnd.kde.kpresenter\t\t\tkpr kpt\napplication/vnd.kde.kspread\t\t\tksp\napplication/vnd.kde.kword\t\t\tkwd kwt\napplication/vnd.kenameaapp\t\t\thtke\napplication/vnd.kidspiration\t\t\tkia\napplication/vnd.kinar\t\t\t\tkne knp\napplication/vnd.koan\t\t\t\tskp skd skt skm\napplication/vnd.kodak-descriptor\t\tsse\napplication/vnd.las.las+xml\t\t\tlasxml\napplication/vnd.llamagraphics.life-balance.desktop\tlbd\napplication/vnd.llamagraphics.life-balance.exchange+xml\tlbe\napplication/vnd.lotus-1-2-3\t\t\t123\napplication/vnd.lotus-approach\t\t\tapr\napplication/vnd.lotus-freelance\t\t\tpre\napplication/vnd.lotus-notes\t\t\tnsf\napplication/vnd.lotus-organizer\t\t\torg\napplication/vnd.lotus-screencam\t\t\tscm\napplication/vnd.lotus-wordpro\t\t\tlwp\napplication/vnd.macports.portpkg\t\tportpkg\napplication/vnd.mcd\t\t\t\tmcd\napplication/vnd.medcalcdata\t\t\tmc1\napplication/vnd.mediastation.cdkey\t\tcdkey\napplication/vnd.mfer\t\t\t\tmwf\napplication/vnd.mfmp\t\t\t\tmfm\napplication/vnd.micrografx.flo\t\t\tflo\napplication/vnd.micrografx.igx\t\t\tigx\napplication/vnd.mif\t\t\t\tmif\napplication/vnd.mobius.daf\t\t\tdaf\napplication/vnd.mobius.dis\t\t\tdis\napplication/vnd.mobius.mbk\t\t\tmbk\napplication/vnd.mobius.mqy\t\t\tmqy\napplication/vnd.mobius.msl\t\t\tmsl\napplication/vnd.mobius.plc\t\t\tplc\napplication/vnd.mobius.txf\t\t\ttxf\napplication/vnd.mophun.application\t\tmpn\napplication/vnd.mophun.certificate\t\tmpc\napplication/vnd.mozilla.xul+xml\t\t\txul\napplication/vnd.ms-artgalry\t\t\tcil\napplication/vnd.ms-cab-compressed\t\tcab\napplication/vnd.ms-excel\t\t\txls xlm xla xlc xlt xlw\napplication/vnd.ms-excel.addin.macroenabled.12\t\txlam\napplication/vnd.ms-excel.sheet.binary.macroenabled.12\txlsb\napplication/vnd.ms-excel.sheet.macroenabled.12\t\txlsm\napplication/vnd.ms-excel.template.macroenabled.12\txltm\napplication/vnd.ms-fontobject\t\t\teot\napplication/vnd.ms-htmlhelp\t\t\tchm\napplication/vnd.ms-ims\t\t\t\tims\napplication/vnd.ms-lrm\t\t\t\tlrm\napplication/vnd.ms-officetheme\t\t\tthmx\napplication/vnd.ms-pki.seccat\t\t\tcat\napplication/vnd.ms-pki.stl\t\t\tstl\napplication/vnd.ms-powerpoint\t\t\tppt pps pot\napplication/vnd.ms-powerpoint.addin.macroenabled.12\t\tppam\napplication/vnd.ms-powerpoint.presentation.macroenabled.12\tpptm\napplication/vnd.ms-powerpoint.slide.macroenabled.12\t\tsldm\napplication/vnd.ms-powerpoint.slideshow.macroenabled.12\t\tppsm\napplication/vnd.ms-powerpoint.template.macroenabled.12\t\tpotm\napplication/vnd.ms-project\t\t\tmpp mpt\napplication/vnd.ms-word.document.macroenabled.12\tdocm\napplication/vnd.ms-word.template.macroenabled.12\tdotm\napplication/vnd.ms-works\t\t\twps wks wcm wdb\napplication/vnd.ms-wpl\t\t\t\twpl\napplication/vnd.ms-xpsdocument\t\t\txps\napplication/vnd.mseq\t\t\t\tmseq\napplication/vnd.musician\t\t\tmus\napplication/vnd.muvee.style\t\t\tmsty\napplication/vnd.mynfc\t\t\t\ttaglet\napplication/vnd.neurolanguage.nlu\t\tnlu\napplication/vnd.nitf\t\t\t\tntf nitf\napplication/vnd.noblenet-directory\t\tnnd\napplication/vnd.noblenet-sealer\t\t\tnns\napplication/vnd.noblenet-web\t\t\tnnw\napplication/vnd.nokia.n-gage.data\t\tngdat\napplication/vnd.nokia.n-gage.symbian.install\tn-gage\napplication/vnd.nokia.radio-preset\t\trpst\napplication/vnd.nokia.radio-presets\t\trpss\napplication/vnd.novadigm.edm\t\t\tedm\napplication/vnd.novadigm.edx\t\t\tedx\napplication/vnd.novadigm.ext\t\t\text\napplication/vnd.oasis.opendocument.chart\t\todc\napplication/vnd.oasis.opendocument.chart-template\totc\napplication/vnd.oasis.opendocument.database\t\todb\napplication/vnd.oasis.opendocument.formula\t\todf\napplication/vnd.oasis.opendocument.formula-template\todft\napplication/vnd.oasis.opendocument.graphics\t\todg\napplication/vnd.oasis.opendocument.graphics-template\totg\napplication/vnd.oasis.opendocument.image\t\todi\napplication/vnd.oasis.opendocument.image-template\toti\napplication/vnd.oasis.opendocument.presentation\t\todp\napplication/vnd.oasis.opendocument.presentation-template\totp\napplication/vnd.oasis.opendocument.spreadsheet\t\tods\napplication/vnd.oasis.opendocument.spreadsheet-template\tots\napplication/vnd.oasis.opendocument.text\t\t\todt\napplication/vnd.oasis.opendocument.text-master\t\todm\napplication/vnd.oasis.opendocument.text-template\tott\napplication/vnd.oasis.opendocument.text-web\t\toth\napplication/vnd.olpc-sugar\t\t\txo\napplication/vnd.oma.dd2+xml\t\t\tdd2\napplication/vnd.openofficeorg.extension\t\toxt\napplication/vnd.openxmlformats-officedocument.presentationml.presentation\tpptx\napplication/vnd.openxmlformats-officedocument.presentationml.slide\tsldx\napplication/vnd.openxmlformats-officedocument.presentationml.slideshow\tppsx\napplication/vnd.openxmlformats-officedocument.presentationml.template\tpotx\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet\txlsx\napplication/vnd.openxmlformats-officedocument.spreadsheetml.template\txltx\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document\tdocx\napplication/vnd.openxmlformats-officedocument.wordprocessingml.template\tdotx\napplication/vnd.osgeo.mapguide.package\t\tmgp\napplication/vnd.osgi.dp\t\t\t\tdp\napplication/vnd.osgi.subsystem\t\t\tesa\napplication/vnd.palm\t\t\t\tpdb pqa oprc\napplication/vnd.pawaafile\t\t\tpaw\napplication/vnd.pg.format\t\t\tstr\napplication/vnd.pg.osasli\t\t\tei6\napplication/vnd.picsel\t\t\t\tefif\napplication/vnd.pmi.widget\t\t\twg\napplication/vnd.pocketlearn\t\t\tplf\napplication/vnd.powerbuilder6\t\t\tpbd\napplication/vnd.previewsystems.box\t\tbox\napplication/vnd.proteus.magazine\t\tmgz\napplication/vnd.publishare-delta-tree\t\tqps\napplication/vnd.pvi.ptid1\t\t\tptid\napplication/vnd.quark.quarkxpress\t\tqxd qxt qwd qwt qxl qxb\napplication/vnd.realvnc.bed\t\t\tbed\napplication/vnd.recordare.musicxml\t\tmxl\napplication/vnd.recordare.musicxml+xml\t\tmusicxml\napplication/vnd.rig.cryptonote\t\t\tcryptonote\napplication/vnd.rim.cod\t\t\t\tcod\napplication/vnd.rn-realmedia\t\t\trm\napplication/vnd.rn-realmedia-vbr\t\trmvb\napplication/vnd.route66.link66+xml\t\tlink66\napplication/vnd.sailingtracker.track\t\tst\napplication/vnd.seemail\t\t\t\tsee\napplication/vnd.sema\t\t\t\tsema\napplication/vnd.semd\t\t\t\tsemd\napplication/vnd.semf\t\t\t\tsemf\napplication/vnd.shana.informed.formdata\t\tifm\napplication/vnd.shana.informed.formtemplate\titp\napplication/vnd.shana.informed.interchange\tiif\napplication/vnd.shana.informed.package\t\tipk\napplication/vnd.simtech-mindmapper\t\ttwd twds\napplication/vnd.smaf\t\t\t\tmmf\napplication/vnd.smart.teacher\t\t\tteacher\napplication/vnd.solent.sdkm+xml\t\t\tsdkm sdkd\napplication/vnd.spotfire.dxp\t\t\tdxp\napplication/vnd.spotfire.sfs\t\t\tsfs\napplication/vnd.stardivision.calc\t\tsdc\napplication/vnd.stardivision.draw\t\tsda\napplication/vnd.stardivision.impress\t\tsdd\napplication/vnd.stardivision.math\t\tsmf\napplication/vnd.stardivision.writer\t\tsdw vor\napplication/vnd.stardivision.writer-global\tsgl\napplication/vnd.stepmania.package\t\tsmzip\napplication/vnd.stepmania.stepchart\t\tsm\napplication/vnd.sun.xml.calc\t\t\tsxc\napplication/vnd.sun.xml.calc.template\t\tstc\napplication/vnd.sun.xml.draw\t\t\tsxd\napplication/vnd.sun.xml.draw.template\t\tstd\napplication/vnd.sun.xml.impress\t\t\tsxi\napplication/vnd.sun.xml.impress.template\tsti\napplication/vnd.sun.xml.math\t\t\tsxm\napplication/vnd.sun.xml.writer\t\t\tsxw\napplication/vnd.sun.xml.writer.global\t\tsxg\napplication/vnd.sun.xml.writer.template\t\tstw\napplication/vnd.sus-calendar\t\t\tsus susp\napplication/vnd.svd\t\t\t\tsvd\napplication/vnd.symbian.install\t\t\tsis sisx\napplication/vnd.syncml+xml\t\t\txsm\napplication/vnd.syncml.dm+wbxml\t\t\tbdm\napplication/vnd.syncml.dm+xml\t\t\txdm\napplication/vnd.tao.intent-module-archive\ttao\napplication/vnd.tcpdump.pcap\t\t\tpcap cap dmp\napplication/vnd.tmobile-livetv\t\t\ttmo\napplication/vnd.trid.tpt\t\t\ttpt\napplication/vnd.triscape.mxs\t\t\tmxs\napplication/vnd.trueapp\t\t\t\ttra\napplication/vnd.ufdl\t\t\t\tufd ufdl\napplication/vnd.uiq.theme\t\t\tutz\napplication/vnd.umajin\t\t\t\tumj\napplication/vnd.unity\t\t\t\tunityweb\napplication/vnd.uoml+xml\t\t\tuoml\napplication/vnd.vcx\t\t\t\tvcx\napplication/vnd.visio\t\t\t\tvsd vst vss vsw\napplication/vnd.visionary\t\t\tvis\napplication/vnd.vsf\t\t\t\tvsf\napplication/vnd.wap.wbxml\t\t\twbxml\napplication/vnd.wap.wmlc\t\t\twmlc\napplication/vnd.wap.wmlscriptc\t\t\twmlsc\napplication/vnd.webturbo\t\t\twtb\napplication/vnd.wolfram.player\t\t\tnbp\napplication/vnd.wordperfect\t\t\twpd\napplication/vnd.wqd\t\t\t\twqd\napplication/vnd.wt.stf\t\t\t\tstf\napplication/vnd.xara\t\t\t\txar\napplication/vnd.xfdl\t\t\t\txfdl\napplication/vnd.yamaha.hv-dic\t\t\thvd\napplication/vnd.yamaha.hv-script\t\thvs\napplication/vnd.yamaha.hv-voice\t\t\thvp\napplication/vnd.yamaha.openscoreformat\t\t\tosf\napplication/vnd.yamaha.openscoreformat.osfpvg+xml\tosfpvg\napplication/vnd.yamaha.smaf-audio\t\tsaf\napplication/vnd.yamaha.smaf-phrase\t\tspf\napplication/vnd.yellowriver-custom-menu\t\tcmp\napplication/vnd.zul\t\t\t\tzir zirz\napplication/vnd.zzazz.deck+xml\t\t\tzaz\napplication/voicexml+xml\t\t\tvxml\napplication/wasm\t\t\t\twasm\napplication/widget\t\t\t\twgt\napplication/winhlp\t\t\t\thlp\napplication/wsdl+xml\t\t\t\twsdl\napplication/wspolicy+xml\t\t\twspolicy\napplication/x-7z-compressed\t\t\t7z\napplication/x-abiword\t\t\t\tabw\napplication/x-ace-compressed\t\t\tace\napplication/x-apple-diskimage\t\t\tdmg\napplication/x-authorware-bin\t\t\taab x32 u32 vox\napplication/x-authorware-map\t\t\taam\napplication/x-authorware-seg\t\t\taas\napplication/x-bcpio\t\t\t\tbcpio\napplication/x-bittorrent\t\t\ttorrent\napplication/x-blorb\t\t\t\tblb blorb\napplication/x-bzip\t\t\t\tbz\napplication/x-bzip2\t\t\t\tbz2 boz\napplication/x-cbr\t\t\t\tcbr cba cbt cbz cb7\napplication/x-cdlink\t\t\t\tvcd\napplication/x-cfs-compressed\t\t\tcfs\napplication/x-chat\t\t\t\tchat\napplication/x-chess-pgn\t\t\t\tpgn\napplication/x-conference\t\t\tnsc\napplication/x-cpio\t\t\t\tcpio\napplication/x-csh\t\t\t\tcsh\napplication/x-debian-package\t\t\tdeb udeb\napplication/x-dgc-compressed\t\t\tdgc\napplication/x-director\t\t\tdir dcr dxr cst cct cxt w3d fgd swa\napplication/x-doom\t\t\t\twad\napplication/x-dtbncx+xml\t\t\tncx\napplication/x-dtbook+xml\t\t\tdtb\napplication/x-dtbresource+xml\t\t\tres\napplication/x-dvi\t\t\t\tdvi\napplication/x-envoy\t\t\t\tevy\napplication/x-eva\t\t\t\teva\napplication/x-font-bdf\t\t\t\tbdf\napplication/x-font-ghostscript\t\t\tgsf\napplication/x-font-linux-psf\t\t\tpsf\napplication/x-font-pcf\t\t\t\tpcf\napplication/x-font-snf\t\t\t\tsnf\napplication/x-font-type1\t\t\tpfa pfb pfm afm\napplication/x-freearc\t\t\t\tarc\napplication/x-futuresplash\t\t\tspl\napplication/x-gca-compressed\t\t\tgca\napplication/x-glulx\t\t\t\tulx\napplication/x-gnumeric\t\t\t\tgnumeric\napplication/x-gramps-xml\t\t\tgramps\napplication/x-gtar\t\t\t\tgtar\napplication/x-hdf\t\t\t\thdf\napplication/x-install-instructions\t\tinstall\napplication/x-iso9660-image\t\t\tiso\napplication/x-java-jnlp-file\t\t\tjnlp\napplication/x-latex\t\t\t\tlatex\napplication/x-lzh-compressed\t\t\tlzh lha\napplication/x-mie\t\t\t\tmie\napplication/x-mobipocket-ebook\t\t\tprc mobi\napplication/x-ms-application\t\t\tapplication\napplication/x-ms-shortcut\t\t\tlnk\napplication/x-ms-wmd\t\t\t\twmd\napplication/x-ms-wmz\t\t\t\twmz\napplication/x-ms-xbap\t\t\t\txbap\napplication/x-msaccess\t\t\t\tmdb\napplication/x-msbinder\t\t\t\tobd\napplication/x-mscardfile\t\t\tcrd\napplication/x-msclip\t\t\t\tclp\napplication/x-msdownload\t\t\texe dll com bat msi\napplication/x-msmediaview\t\t\tmvb m13 m14\napplication/x-msmetafile\t\t\twmf wmz emf emz\napplication/x-msmoney\t\t\t\tmny\napplication/x-mspublisher\t\t\tpub\napplication/x-msschedule\t\t\tscd\napplication/x-msterminal\t\t\ttrm\napplication/x-mswrite\t\t\t\twri\napplication/x-netcdf\t\t\t\tnc cdf\napplication/x-nzb\t\t\t\tnzb\napplication/x-pkcs12\t\t\t\tp12 pfx\napplication/x-pkcs7-certificates\t\tp7b spc\napplication/x-pkcs7-certreqresp\t\t\tp7r\napplication/x-rar-compressed\t\t\trar\napplication/x-research-info-systems\t\tris\napplication/x-sh\t\t\t\tsh\napplication/x-shar\t\t\t\tshar\napplication/x-shockwave-flash\t\t\tswf\napplication/x-silverlight-app\t\t\txap\napplication/x-sql\t\t\t\tsql\napplication/x-stuffit\t\t\t\tsit\napplication/x-stuffitx\t\t\t\tsitx\napplication/x-subrip\t\t\t\tsrt\napplication/x-sv4cpio\t\t\t\tsv4cpio\napplication/x-sv4crc\t\t\t\tsv4crc\napplication/x-t3vm-image\t\t\tt3\napplication/x-tads\t\t\t\tgam\napplication/x-tar\t\t\t\ttar\napplication/x-tcl\t\t\t\ttcl\napplication/x-tex\t\t\t\ttex\napplication/x-tex-tfm\t\t\t\ttfm\napplication/x-texinfo\t\t\t\ttexinfo texi\napplication/x-tgif\t\t\t\tobj\napplication/x-ustar\t\t\t\tustar\napplication/x-wais-source\t\t\tsrc\napplication/x-x509-ca-cert\t\t\tder crt\napplication/x-xfig\t\t\t\tfig\napplication/x-xliff+xml\t\t\t\txlf\napplication/x-xpinstall\t\t\t\txpi\napplication/x-xz\t\t\t\txz\napplication/x-zmachine\t\t\t\tz1 z2 z3 z4 z5 z6 z7 z8\napplication/xaml+xml\t\t\t\txaml\napplication/xcap-diff+xml\t\t\txdf\napplication/xenc+xml\t\t\t\txenc\napplication/xhtml+xml\t\t\t\txhtml xht\napplication/xml\t\t\t\t\txml xsl\napplication/xml-dtd\t\t\t\tdtd\napplication/xop+xml\t\t\t\txop\napplication/xproc+xml\t\t\t\txpl\napplication/xslt+xml\t\t\t\txslt\napplication/xspf+xml\t\t\t\txspf\napplication/xv+xml\t\t\t\tmxml xhvml xvml xvm\napplication/yang\t\t\t\tyang\napplication/yin+xml\t\t\t\tyin\napplication/zip\t\t\t\t\tzip\naudio/adpcm\t\t\t\t\tadp\naudio/basic\t\t\t\t\tau snd\naudio/midi\t\t\t\t\tmid midi kar rmi\naudio/mp4\t\t\t\t\tm4a mp4a\naudio/mpeg\t\t\t\t\tmpga mp2 mp2a mp3 m2a m3a\naudio/ogg\t\t\t\t\toga ogg spx\naudio/s3m\t\t\t\t\ts3m\naudio/silk\t\t\t\t\tsil\naudio/vnd.dece.audio\t\t\t\tuva uvva\naudio/vnd.digital-winds\t\t\t\teol\naudio/vnd.dra\t\t\t\t\tdra\naudio/vnd.dts\t\t\t\t\tdts\naudio/vnd.dts.hd\t\t\t\tdtshd\naudio/vnd.lucent.voice\t\t\t\tlvp\naudio/vnd.ms-playready.media.pya\t\tpya\naudio/vnd.nuera.ecelp4800\t\t\tecelp4800\naudio/vnd.nuera.ecelp7470\t\t\tecelp7470\naudio/vnd.nuera.ecelp9600\t\t\tecelp9600\naudio/vnd.rip\t\t\t\t\trip\naudio/webm\t\t\t\t\tweba\naudio/x-aac\t\t\t\t\taac\naudio/x-aiff\t\t\t\t\taif aiff aifc\naudio/x-caf\t\t\t\t\tcaf\naudio/x-flac\t\t\t\t\tflac\naudio/x-matroska\t\t\t\tmka\naudio/x-mpegurl\t\t\t\t\tm3u\naudio/x-ms-wax\t\t\t\t\twax\naudio/x-ms-wma\t\t\t\t\twma\naudio/x-pn-realaudio\t\t\t\tram ra\naudio/x-pn-realaudio-plugin\t\t\trmp\naudio/x-wav\t\t\t\t\twav\naudio/xm\t\t\t\t\txm\nchemical/x-cdx\t\t\t\t\tcdx\nchemical/x-cif\t\t\t\t\tcif\nchemical/x-cmdf\t\t\t\t\tcmdf\nchemical/x-cml\t\t\t\t\tcml\nchemical/x-csml\t\t\t\t\tcsml\nchemical/x-xyz\t\t\t\t\txyz\nfont/collection\t\t\t\t\tttc\nfont/otf\t\t\t\t\totf\nfont/ttf\t\t\t\t\tttf\nfont/woff\t\t\t\t\twoff\nfont/woff2\t\t\t\t\twoff2\nimage/bmp\t\t\t\t\tbmp\nimage/cgm\t\t\t\t\tcgm\nimage/g3fax\t\t\t\t\tg3\nimage/gif\t\t\t\t\tgif\nimage/ief\t\t\t\t\tief\nimage/jpeg\t\t\t\t\tjpeg jpg jpe\nimage/ktx\t\t\t\t\tktx\nimage/png\t\t\t\t\tpng\nimage/prs.btif\t\t\t\t\tbtif\nimage/sgi\t\t\t\t\tsgi\nimage/svg+xml\t\t\t\t\tsvg svgz\nimage/tiff\t\t\t\t\ttiff tif\nimage/vnd.adobe.photoshop\t\t\tpsd\nimage/vnd.dece.graphic\t\t\t\tuvi uvvi uvg uvvg\nimage/vnd.djvu\t\t\t\t\tdjvu djv\nimage/vnd.dvb.subtitle\t\t\t\tsub\nimage/vnd.dwg\t\t\t\t\tdwg\nimage/vnd.dxf\t\t\t\t\tdxf\nimage/vnd.fastbidsheet\t\t\t\tfbs\nimage/vnd.fpx\t\t\t\t\tfpx\nimage/vnd.fst\t\t\t\t\tfst\nimage/vnd.fujixerox.edmics-mmr\t\t\tmmr\nimage/vnd.fujixerox.edmics-rlc\t\t\trlc\nimage/vnd.ms-modi\t\t\t\tmdi\nimage/vnd.ms-photo\t\t\t\twdp\nimage/vnd.net-fpx\t\t\t\tnpx\nimage/vnd.wap.wbmp\t\t\t\twbmp\nimage/vnd.xiff\t\t\t\t\txif\nimage/webp\t\t\t\t\twebp\nimage/x-3ds\t\t\t\t\t3ds\nimage/x-cmu-raster\t\t\t\tras\nimage/x-cmx\t\t\t\t\tcmx\nimage/x-freehand\t\t\t\tfh fhc fh4 fh5 fh7\nimage/x-icon\t\t\t\t\tico\nimage/x-mrsid-image\t\t\t\tsid\nimage/x-pcx\t\t\t\t\tpcx\nimage/x-pict\t\t\t\t\tpic pct\nimage/x-portable-anymap\t\t\t\tpnm\nimage/x-portable-bitmap\t\t\t\tpbm\nimage/x-portable-graymap\t\t\tpgm\nimage/x-portable-pixmap\t\t\t\tppm\nimage/x-rgb\t\t\t\t\trgb\nimage/x-tga\t\t\t\t\ttga\nimage/x-xbitmap\t\t\t\t\txbm\nimage/x-xpixmap\t\t\t\t\txpm\nimage/x-xwindowdump\t\t\t\txwd\nmessage/rfc822\t\t\t\t\teml mime\nmodel/iges\t\t\t\t\tigs iges\nmodel/mesh\t\t\t\t\tmsh mesh silo\nmodel/vnd.collada+xml\t\t\t\tdae\nmodel/vnd.dwf\t\t\t\t\tdwf\nmodel/vnd.gdl\t\t\t\t\tgdl\nmodel/vnd.gtw\t\t\t\t\tgtw\nmodel/vnd.mts\t\t\t\t\tmts\nmodel/vnd.vtu\t\t\t\t\tvtu\nmodel/vrml\t\t\t\t\twrl vrml\nmodel/x3d+binary\t\t\t\tx3db x3dbz\nmodel/x3d+vrml\t\t\t\t\tx3dv x3dvz\nmodel/x3d+xml\t\t\t\t\tx3d x3dz\ntext/cache-manifest\t\t\t\tappcache\ntext/calendar\t\t\t\t\tics ifb\ntext/css\t\t\t\t\tcss\ntext/csv\t\t\t\t\tcsv\ntext/html\t\t\t\t\thtml htm\ntext/n3\t\t\t\t\t\tn3\ntext/plain\t\t\t\t\ttxt text conf def list log in\ntext/prs.lines.tag\t\t\t\tdsc\ntext/richtext\t\t\t\t\trtx\ntext/sgml\t\t\t\t\tsgml sgm\ntext/tab-separated-values\t\t\ttsv\ntext/troff\t\t\t\t\tt tr roff man me ms\ntext/turtle\t\t\t\t\tttl\ntext/uri-list\t\t\t\t\turi uris urls\ntext/vcard\t\t\t\t\tvcard\ntext/vnd.curl\t\t\t\t\tcurl\ntext/vnd.curl.dcurl\t\t\t\tdcurl\ntext/vnd.curl.mcurl\t\t\t\tmcurl\ntext/vnd.curl.scurl\t\t\t\tscurl\ntext/vnd.dvb.subtitle\t\t\t\tsub\ntext/vnd.fly\t\t\t\t\tfly\ntext/vnd.fmi.flexstor\t\t\t\tflx\ntext/vnd.graphviz\t\t\t\tgv\ntext/vnd.in3d.3dml\t\t\t\t3dml\ntext/vnd.in3d.spot\t\t\t\tspot\ntext/vnd.sun.j2me.app-descriptor\t\tjad\ntext/vnd.wap.wml\t\t\t\twml\ntext/vnd.wap.wmlscript\t\t\t\twmls\ntext/x-asm\t\t\t\t\ts asm\ntext/x-c\t\t\t\t\tc cc cxx cpp h hh dic\ntext/x-fortran\t\t\t\t\tf for f77 f90\ntext/x-java-source\t\t\t\tjava\ntext/x-nfo\t\t\t\t\tnfo\ntext/x-opml\t\t\t\t\topml\ntext/x-pascal\t\t\t\t\tp pas\ntext/x-setext\t\t\t\t\tetx\ntext/x-sfv\t\t\t\t\tsfv\ntext/x-uuencode\t\t\t\t\tuu\ntext/x-vcalendar\t\t\t\tvcs\ntext/x-vcard\t\t\t\t\tvcf\nvideo/3gpp\t\t\t\t\t3gp\nvideo/3gpp2\t\t\t\t\t3g2\nvideo/h261\t\t\t\t\th261\nvideo/h263\t\t\t\t\th263\nvideo/h264\t\t\t\t\th264\nvideo/jpeg\t\t\t\t\tjpgv\nvideo/jpm\t\t\t\t\tjpm jpgm\nvideo/mj2\t\t\t\t\tmj2 mjp2\nvideo/mp4\t\t\t\t\tmp4 mp4v mpg4\nvideo/mpeg\t\t\t\t\tmpeg mpg mpe m1v m2v\nvideo/ogg\t\t\t\t\togv\nvideo/quicktime\t\t\t\t\tqt mov\nvideo/vnd.dece.hd\t\t\t\tuvh uvvh\nvideo/vnd.dece.mobile\t\t\t\tuvm uvvm\nvideo/vnd.dece.pd\t\t\t\tuvp uvvp\nvideo/vnd.dece.sd\t\t\t\tuvs uvvs\nvideo/vnd.dece.video\t\t\t\tuvv uvvv\nvideo/vnd.dvb.file\t\t\t\tdvb\nvideo/vnd.fvt\t\t\t\t\tfvt\nvideo/vnd.mpegurl\t\t\t\tmxu m4u\nvideo/vnd.ms-playready.media.pyv\t\tpyv\nvideo/vnd.uvvu.mp4\t\t\t\tuvu uvvu\nvideo/vnd.vivo\t\t\t\t\tviv\nvideo/webm\t\t\t\t\twebm\nvideo/x-f4v\t\t\t\t\tf4v\nvideo/x-fli\t\t\t\t\tfli\nvideo/x-flv\t\t\t\t\tflv\nvideo/x-m4v\t\t\t\t\tm4v\nvideo/x-matroska\t\t\t\tmkv mk3d mks\nvideo/x-mng\t\t\t\t\tmng\nvideo/x-ms-asf\t\t\t\t\tasf asx\nvideo/x-ms-vob\t\t\t\t\tvob\nvideo/x-ms-wm\t\t\t\t\twm\nvideo/x-ms-wmv\t\t\t\t\twmv\nvideo/x-ms-wmx\t\t\t\t\twmx\nvideo/x-ms-wvx\t\t\t\t\twvx\nvideo/x-msvideo\t\t\t\t\tavi\nvideo/x-sgi-movie\t\t\t\tmovie\nvideo/x-smv\t\t\t\t\tsmv\nx-conference/x-cooltalk\t\t\t\tice\n";

const map = new Map();

mime_raw.split('\n').forEach((row) => {
	const match = /(.+?)\t+(.+)/.exec(row);
	if (!match) return;

	const type = match[1];
	const extensions = match[2].split(' ');

	extensions.forEach(ext => {
		map.set(ext, type);
	});
});

function lookup(file) {
	const match = /\.([^\.]+)$/.exec(file);
	return match && map.get(match[1]);
}

function middleware(opts


 = {}) {
	const { session, ignore } = opts;

	let emitted_basepath = false;

	return compose_handlers(ignore, [
		(req, res, next) => {
			if (req.baseUrl === undefined) {
				let { originalUrl } = req;
				if (req.url === '/' && originalUrl[originalUrl.length - 1] !== '/') {
					originalUrl += '/';
				}

				req.baseUrl = originalUrl
					? originalUrl.slice(0, -req.url.length)
					: '';
			}

			if (!emitted_basepath && process.send) {
				process.send({
					__sapper__: true,
					event: 'basepath',
					basepath: req.baseUrl
				});

				emitted_basepath = true;
			}

			if (req.path === undefined) {
				req.path = req.url.replace(/\?.*/, '');
			}

			next();
		},

		fs.existsSync(path.join(build_dir, 'service-worker.js')) && serve({
			pathname: '/service-worker.js',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		fs.existsSync(path.join(build_dir, 'service-worker.js.map')) && serve({
			pathname: '/service-worker.js.map',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		serve({
			prefix: '/client/',
			cache_control:  'no-cache' 
		}),

		get_server_route_handler(manifest.server_routes),

		get_page_handler(manifest, session || noop)
	].filter(Boolean));
}

function compose_handlers(ignore, handlers) {
	const total = handlers.length;

	function nth_handler(n, req, res, next) {
		if (n >= total) {
			return next();
		}

		handlers[n](req, res, () => nth_handler(n+1, req, res, next));
	}

	return !ignore
		? (req, res, next) => nth_handler(0, req, res, next)
		: (req, res, next) => {
			if (should_ignore(req.path, ignore)) {
				next();
			} else {
				nth_handler(0, req, res, next);
			}
		};
}

function should_ignore(uri, val) {
	if (Array.isArray(val)) return val.some(x => should_ignore(uri, x));
	if (val instanceof RegExp) return val.test(uri);
	if (typeof val === 'function') return val(uri);
	return uri.startsWith(val.charCodeAt(0) === 47 ? val : `/${val}`);
}

function serve({ prefix, pathname, cache_control }



) {
	const filter = pathname
		? (req) => req.path === pathname
		: (req) => req.path.startsWith(prefix);

	const read =  (file) => fs.readFileSync(path.resolve(build_dir, file))
		;

	return (req, res, next) => {
		if (filter(req)) {
			const type = lookup(req.path);

			try {
				const file = decodeURIComponent(req.path.slice(1));
				const data = read(file);

				res.setHeader('Content-Type', type);
				res.setHeader('Cache-Control', cache_control);
				res.end(data);
			} catch (err) {
				res.statusCode = 404;
				res.end('not found');
			}
		} else {
			next();
		}
	};
}

function noop(){}

const { PORT, NODE_ENV } = process.env;
const dev = NODE_ENV === 'development';

polka() // You can also use Express
	.use(
		compression({ threshold: 0 }),
		sirv('static', { dev }),
		middleware()
	)
	.listen(PORT, err => {
		if (err) console.log('error', err);
	});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
