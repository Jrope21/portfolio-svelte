(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1605134562569;

	const files = [
		"/service-worker-index.html",
		"/background-images/so-white.png",
		"/favicon/android-chrome-192x192.png",
		"/favicon/android-chrome-512x512.png",
		"/favicon/apple-touch-icon.png",
		"/favicon/favicon-16x16.png",
		"/favicon/favicon-32x32.png",
		"/favicon/favicon.ico",
		"/favicon/site.webmanifest",
		"/favicon.png",
		"/images/creative-revolt/about-cta-min.png",
		"/images/creative-revolt/about-min.png",
		"/images/creative-revolt/home-ctas-min.png",
		"/images/creative-revolt/home-min.png",
		"/images/creative-revolt/writing-class-min.png",
		"/images/desk-photo.jpeg",
		"/images/di-repairs/1.png",
		"/images/di-repairs/2.png",
		"/images/di-repairs/3.png",
		"/images/di-repairs/4.png",
		"/images/di-repairs/5.png",
		"/images/halcyon/dining-min.png",
		"/images/halcyon/events-min.png",
		"/images/halcyon/home-cta-min.png",
		"/images/halcyon/home-min.png",
		"/images/halcyon/spotlight-min.png",
		"/images/stallion/stallion-11-min.png",
		"/images/stallion/stallion-2-min.png",
		"/images/stallion/stallion-4-min.png",
		"/images/stallion/stallion-5-min.png",
		"/images/stallion/stallion-6-min.png",
		"/images/university-park/form-min.png",
		"/images/university-park/home-min.png",
		"/images/university-park/home-video-min.png",
		"/images/university-park/library-min.png",
		"/images/university-park/newsletter-min.png",
		"/manifest.json",
		"/pdfs/resume-joshua-roper.pdf",
		"/thumbnails/Jorden-Background-Gray-min.jpg",
		"/thumbnails/di-thumb.jpg",
		"/thumbnails/halcyon-5-min.jpg",
		"/thumbnails/professional-hero-min.jpg",
		"/thumbnails/stallion-thumb-a-min.jpg",
		"/thumbnails/uptexas-thumb-min.jpg"
	];

	const shell = [
		"/client/client.f7a27c4c.js",
		"/client/inject_styles.5607aec6.js",
		"/client/client.1ac6fcf9.js",
		"/client/index.0a73df3d.js",
		"/client/Projects.35ee0234.js",
		"/client/experience.e1ad85ba.js",
		"/client/creative-revolt.f7fa38b3.js",
		"/client/ProjectDetailTemplate.c1150a5d.js",
		"/client/PageTitle.c04c9248.js",
		"/client/university-park.c4ec39c5.js",
		"/client/di-repairs.11a9eab8.js",
		"/client/stallion.187afc0c.js",
		"/client/halcyon.71940ef0.js",
		"/client/projects.677ad35b.js",
		"/client/about.5e947859.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
