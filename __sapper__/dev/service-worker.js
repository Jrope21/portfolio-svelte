(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1605139282077;

	const files = [
		"/service-worker-index.html",
		"/background-images/so-white.png",
		"/favicon/android-chrome-192x192.png",
		"/favicon/android-chrome-512x512.png",
		"/favicon/apple-touch-icon.png",
		"/favicon/favicon-16x16.png",
		"/favicon/favicon-32x32.png",
		"/favicon/favicon.ico",
		"/favicon/site.webmanifest",
		"/favicon.png",
		"/images/creative-revolt/about-cta-min.png",
		"/images/creative-revolt/about-min.png",
		"/images/creative-revolt/home-ctas-min.png",
		"/images/creative-revolt/home-min.png",
		"/images/creative-revolt/writing-class-min.png",
		"/images/desk-photo.jpeg",
		"/images/di-repairs/1.png",
		"/images/di-repairs/2.png",
		"/images/di-repairs/3.png",
		"/images/di-repairs/4.png",
		"/images/di-repairs/5.png",
		"/images/halcyon/dining-min.png",
		"/images/halcyon/events-min.png",
		"/images/halcyon/home-cta-min.png",
		"/images/halcyon/home-min.png",
		"/images/halcyon/spotlight-min.png",
		"/images/stallion/stallion-11-min.png",
		"/images/stallion/stallion-2-min.png",
		"/images/stallion/stallion-4-min.png",
		"/images/stallion/stallion-5-min.png",
		"/images/stallion/stallion-6-min.png",
		"/images/university-park/form-min.png",
		"/images/university-park/home-min.png",
		"/images/university-park/home-video-min.png",
		"/images/university-park/library-min.png",
		"/images/university-park/newsletter-min.png",
		"/manifest.json",
		"/pdfs/resume-joshua-roper.pdf",
		"/thumbnails/Jorden-Background-Gray-min.jpg",
		"/thumbnails/di-thumb.jpg",
		"/thumbnails/halcyon-5-min.jpg",
		"/thumbnails/professional-hero-min.jpg",
		"/thumbnails/stallion-thumb-a-min.jpg",
		"/thumbnails/uptexas-thumb-min.jpg"
	];

	const shell = [
		"/client/client.87626f5c.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.3e852223.js",
		"/client/Projects.d03247ae.js",
		"/client/experience.fda9634b.js",
		"/client/creative-revolt.6d5b3fbb.js",
		"/client/ProjectDetailTemplate.e63cc971.js",
		"/client/PageTitle.1e93774e.js",
		"/client/university-park.415922ae.js",
		"/client/di-repairs.7960e496.js",
		"/client/stallion.8ac64a8b.js",
		"/client/halcyon.70010607.js",
		"/client/projects.7a028b1e.js",
		"/client/about.5a7d04b6.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const staticAssets = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});


	/**
	 * Fetch the asset from the network and store it in the cache. 
	 * Fall back to the cache if the user is offline.
	 */
	async function fetchAndCache(request) {
		const cache = await caches.open(`offline${timestamp}`);

		try {
			const response = await fetch(request);
			cache.put(request, response.clone());
			return response;
		} catch (err) {
			const response = await cache.match(request);
			if (response) return response;

			throw err;
		}
	}

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		const isHttp = url.protocol.startsWith('http');
		const isDevServerRequest = url.hostname === self.location.hostname && url.port !== self.location.port;
		const isStaticAsset = url.host === self.location.host && staticAssets.has(url.pathname);
		const skipBecauseUncached = event.request.cache === 'only-if-cached' && !isStaticAsset;

		if (isHttp && !isDevServerRequest && !skipBecauseUncached) {
			event.respondWith(
				(async () => {
					// always serve static files and bundler-generated assets from cache.
					// if your application has other URLs with data that will never change,
					// set this variable to true for them and they will only be fetched once.
					const cachedAsset = isStaticAsset && await caches.match(event.request);

					// for pages, you might want to serve a shell `service-worker-index.html` file,
					// which Sapper has generated for you. It's not right for every
					// app, but if it's right for yours then uncomment this section
					/*
					if (!cachedAsset && url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
						return caches.match('/service-worker-index.html');
					}
					*/

					return cachedAsset || fetchAndCache(event.request);
				})()
			);
		}
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
