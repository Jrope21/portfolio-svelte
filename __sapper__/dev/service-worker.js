(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1576293668644;

	const files = [
		"service-worker-index.html",
		"favicon/android-chrome-192x192.png",
		"favicon/android-chrome-512x512.png",
		"favicon/apple-touch-icon.png",
		"favicon/favicon-16x16.png",
		"favicon/favicon-32x32.png",
		"favicon/favicon.ico",
		"favicon/site.webmanifest",
		"favicon.png",
		"global.css",
		"great-success.png",
		"images/Jorden-Background-Gray copy.jpg",
		"images/Jorden-Background-Gray.jpg",
		"images/Uptexas-home.jpg",
		"images/Uptexas-home2.jpg",
		"images/WBUH.jpeg",
		"images/anbtx/www.anbtx.com_mobile-deposit(iPad Pro) (1).png",
		"images/anbtx/www.anbtx.com_mobile-deposit(iPad Pro).png",
		"images/anbtx/www.anbtx.com_mobile-deposit(iPad).png",
		"images/anbtx/www.anbtx.com_mobile-deposit(iPhone 6_7_8).png",
		"images/anbtx/www.anbtx.com_mobile-deposit.png",
		"images/bub.jpeg",
		"images/creative-revolt/screencapture-creativerevolt-about-2019-09-16-20_11_44.png",
		"images/creative-revolt/www.creativerevolt.com_(iPad Pro).png",
		"images/creative-revolt/www.creativerevolt.com_(iPad).png",
		"images/creative-revolt/www.creativerevolt.com_(iPhone 6_7_8).png",
		"images/creative-revolt/www.creativerevolt.com_.png",
		"images/creativeShiz.png",
		"images/drawing.JPG",
		"images/halcyon-2.jpg",
		"images/halcyon-3.jpg",
		"images/halcyon-4.jpg",
		"images/halcyon-5.jpg",
		"images/halcyon.jpeg",
		"images/hero-doe.png",
		"images/newYork.jpg",
		"images/resume-joshua-roper.pdf",
		"images/so-white.png",
		"images/university-park-cta.jpeg",
		"images/uptexas/desktop.png",
		"images/uptexas/hero.png",
		"images/uptexas/lgImg.png",
		"images/uptexas/sidenav.png",
		"images/uptexas/uptexasReal.jpg",
		"images/uptexas/www.uptexas.org_(iPad Pro).png",
		"images/uptexas/www.uptexas.org_(iPad).png",
		"images/uptexas/www.uptexas.org_(iPhone X).png",
		"images/uptexas-thumb.jpg",
		"images/wbuh/www.webuyuglyhouses.com_peace-of-mind-new-leaf-b_ (1).png",
		"images/wbuh/www.webuyuglyhouses.com_peace-of-mind-new-leaf-b_(iPad Pro).png",
		"images/wbuh/www.webuyuglyhouses.com_peace-of-mind-new-leaf-b_(iPad).png",
		"images/wbuh/www.webuyuglyhouses.com_peace-of-mind-new-leaf-b_(iPhone 6_7_8).png",
		"images/wbuh/www.webuyuglyhouses.com_peace-of-mind-new-leaf-b_.png",
		"logo-192.png",
		"logo-512.png",
		"manifest.json"
	];

	const shell = [
		"client/index.0199b3b0.js",
		"client/client.17322ead.js",
		"client/index.62b470cf.js",
		"client/TextAnimation.0dd8326f.js",
		"client/index.4d060ff2.js",
		"client/Image.68df158e.js",
		"client/creative-revolt.4bbed5c1.js",
		"client/university-park.c164b0d3.js",
		"client/halcyon.46c72e51.js",
		"client/about.4cf6778a.js",
		"client/index.2522b983.js",
		"client/[slug].5b474d01.js",
		"client/sapper-dev-client.66640646.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
