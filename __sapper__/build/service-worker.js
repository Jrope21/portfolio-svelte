!function(){"use strict";const e=["client/client.22ef8bd6.js","client/university-park.c828d4ca.js","client/creative-revolt.1d51815f.js","client/halcyon.d786cd2c.js","client/stallion.5348e3ef.js","client/di-repairs.8c302789.js","client/PageTitle.414ea1e6.js","client/projects.3cf53671.js","client/index.69c29ffe.js","client/Projects.f5d070da.js","client/ProjectDetailTemplate.480412f0.js","client/about.fad9b73b.js","client/experience.6b56e64b.js","client/client.32825f2e.js"].concat(["service-worker-index.html","background-images/so-white.png","favicon/android-chrome-192x192.png","favicon/android-chrome-512x512.png","favicon/apple-touch-icon.png","favicon/favicon-16x16.png","favicon/favicon-32x32.png","favicon/favicon.ico","favicon/site.webmanifest","favicon.png","images/creative-revolt/about-cta-min.png","images/creative-revolt/about-min.png","images/creative-revolt/home-ctas-min.png","images/creative-revolt/home-min.png","images/creative-revolt/writing-class-min.png","images/desk-photo.jpeg","images/di-repairs/1.png","images/di-repairs/2.png","images/di-repairs/3.png","images/di-repairs/4.png","images/di-repairs/5.png","images/halcyon/dining-min.png","images/halcyon/events-min.png","images/halcyon/home-cta-min.png","images/halcyon/home-min.png","images/halcyon/spotlight-min.png","images/stallion/stallion-11-min.png","images/stallion/stallion-2-min.png","images/stallion/stallion-4-min.png","images/stallion/stallion-5-min.png","images/stallion/stallion-6-min.png","images/university-park/form-min.png","images/university-park/home-min.png","images/university-park/home-video-min.png","images/university-park/library-min.png","images/university-park/newsletter-min.png","manifest.json","pdfs/resume-joshua-roper.pdf","thumbnails/Jorden-Background-Gray-min.jpg","thumbnails/di-thumb.jpg","thumbnails/halcyon-5-min.jpg","thumbnails/professional-hero-min.jpg","thumbnails/stallion-thumb-a-min.jpg","thumbnails/uptexas-thumb-min.jpg"]),i=new Set(e);self.addEventListener("install",i=>{i.waitUntil(caches.open("cache1605078017274").then(i=>i.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const i of e)"cache1605078017274"!==i&&await caches.delete(i);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const n=new URL(e.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&i.has(n.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1605078017274").then(async i=>{try{const n=await fetch(e.request);return i.put(e.request,n.clone()),n}catch(n){const a=await i.match(e.request);if(a)return a;throw n}}))))})}();
